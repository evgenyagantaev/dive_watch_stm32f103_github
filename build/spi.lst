ARM GAS  /tmp/ccRbQJBl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"spi.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_SPI1_Init,"ax",%progbits
  19              		.align	2
  20              		.global	MX_SPI1_Init
  21              		.thumb
  22              		.thumb_func
  24              	MX_SPI1_Init:
  25              	.LFB63:
  26              		.file 1 "Src/spi.c"
   1:Src/spi.c     **** /**
   2:Src/spi.c     ****   ******************************************************************************
   3:Src/spi.c     ****   * File Name          : SPI.c
   4:Src/spi.c     ****   * Description        : This file provides code for the configuration
   5:Src/spi.c     ****   *                      of the SPI instances.
   6:Src/spi.c     ****   ******************************************************************************
   7:Src/spi.c     ****   ** This notice applies to any and all portions of this file
   8:Src/spi.c     ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/spi.c     ****   * USER CODE END. Other portions of this file, whether 
  10:Src/spi.c     ****   * inserted by the user or by software development tools
  11:Src/spi.c     ****   * are owned by their respective copyright owners.
  12:Src/spi.c     ****   *
  13:Src/spi.c     ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/spi.c     ****   *
  15:Src/spi.c     ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/spi.c     ****   * are permitted provided that the following conditions are met:
  17:Src/spi.c     ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/spi.c     ****   *      this list of conditions and the following disclaimer.
  19:Src/spi.c     ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/spi.c     ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/spi.c     ****   *      and/or other materials provided with the distribution.
  22:Src/spi.c     ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/spi.c     ****   *      may be used to endorse or promote products derived from this software
  24:Src/spi.c     ****   *      without specific prior written permission.
  25:Src/spi.c     ****   *
  26:Src/spi.c     ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/spi.c     ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/spi.c     ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/spi.c     ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/spi.c     ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/spi.c     ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/spi.c     ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccRbQJBl.s 			page 2


  33:Src/spi.c     ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/spi.c     ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/spi.c     ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/spi.c     ****   *
  37:Src/spi.c     ****   ******************************************************************************
  38:Src/spi.c     ****   */
  39:Src/spi.c     **** 
  40:Src/spi.c     **** /* Includes ------------------------------------------------------------------*/
  41:Src/spi.c     **** #include "spi.h"
  42:Src/spi.c     **** 
  43:Src/spi.c     **** #include "gpio.h"
  44:Src/spi.c     **** 
  45:Src/spi.c     **** /* USER CODE BEGIN 0 */
  46:Src/spi.c     **** 
  47:Src/spi.c     **** /* USER CODE END 0 */
  48:Src/spi.c     **** 
  49:Src/spi.c     **** SPI_HandleTypeDef hspi1;
  50:Src/spi.c     **** SPI_HandleTypeDef hspi2;
  51:Src/spi.c     **** 
  52:Src/spi.c     **** /* SPI1 init function */
  53:Src/spi.c     **** void MX_SPI1_Init(void)
  54:Src/spi.c     **** {
  27              		.loc 1 54 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  55:Src/spi.c     **** 
  56:Src/spi.c     ****   hspi1.Instance = SPI1;
  36              		.loc 1 56 0
  37 0002 0E48     		ldr	r0, .L4
  38 0004 0E4B     		ldr	r3, .L4+4
  39 0006 0360     		str	r3, [r0]
  57:Src/spi.c     ****   hspi1.Init.Mode = SPI_MODE_MASTER;
  40              		.loc 1 57 0
  41 0008 4FF48273 		mov	r3, #260
  42 000c 4360     		str	r3, [r0, #4]
  58:Src/spi.c     ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
  43              		.loc 1 58 0
  44 000e 0023     		movs	r3, #0
  45 0010 8360     		str	r3, [r0, #8]
  59:Src/spi.c     ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
  46              		.loc 1 59 0
  47 0012 C360     		str	r3, [r0, #12]
  60:Src/spi.c     ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
  48              		.loc 1 60 0
  49 0014 0361     		str	r3, [r0, #16]
  61:Src/spi.c     ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
  50              		.loc 1 61 0
  51 0016 4361     		str	r3, [r0, #20]
  62:Src/spi.c     ****   hspi1.Init.NSS = SPI_NSS_SOFT;
  52              		.loc 1 62 0
  53 0018 4FF40072 		mov	r2, #512
ARM GAS  /tmp/ccRbQJBl.s 			page 3


  54 001c 8261     		str	r2, [r0, #24]
  63:Src/spi.c     ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
  55              		.loc 1 63 0
  56 001e C361     		str	r3, [r0, #28]
  64:Src/spi.c     ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
  57              		.loc 1 64 0
  58 0020 0362     		str	r3, [r0, #32]
  65:Src/spi.c     ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
  59              		.loc 1 65 0
  60 0022 4362     		str	r3, [r0, #36]
  66:Src/spi.c     ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
  61              		.loc 1 66 0
  62 0024 8362     		str	r3, [r0, #40]
  67:Src/spi.c     ****   hspi1.Init.CRCPolynomial = 10;
  63              		.loc 1 67 0
  64 0026 0A23     		movs	r3, #10
  65 0028 C362     		str	r3, [r0, #44]
  68:Src/spi.c     ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
  66              		.loc 1 68 0
  67 002a FFF7FEFF 		bl	HAL_SPI_Init
  68              	.LVL0:
  69 002e 18B1     		cbz	r0, .L1
  69:Src/spi.c     ****   {
  70:Src/spi.c     ****     _Error_Handler(__FILE__, __LINE__);
  70              		.loc 1 70 0
  71 0030 0448     		ldr	r0, .L4+8
  72 0032 4621     		movs	r1, #70
  73 0034 FFF7FEFF 		bl	_Error_Handler
  74              	.LVL1:
  75              	.L1:
  76 0038 08BD     		pop	{r3, pc}
  77              	.L5:
  78 003a 00BF     		.align	2
  79              	.L4:
  80 003c 00000000 		.word	hspi1
  81 0040 00300140 		.word	1073819648
  82 0044 00000000 		.word	.LC0
  83              		.cfi_endproc
  84              	.LFE63:
  86              		.section	.text.MX_SPI2_Init,"ax",%progbits
  87              		.align	2
  88              		.global	MX_SPI2_Init
  89              		.thumb
  90              		.thumb_func
  92              	MX_SPI2_Init:
  93              	.LFB64:
  71:Src/spi.c     ****   }
  72:Src/spi.c     **** 
  73:Src/spi.c     **** }
  74:Src/spi.c     **** /* SPI2 init function */
  75:Src/spi.c     **** void MX_SPI2_Init(void)
  76:Src/spi.c     **** {
  94              		.loc 1 76 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98 0000 08B5     		push	{r3, lr}
ARM GAS  /tmp/ccRbQJBl.s 			page 4


  99              	.LCFI1:
 100              		.cfi_def_cfa_offset 8
 101              		.cfi_offset 3, -8
 102              		.cfi_offset 14, -4
  77:Src/spi.c     **** 
  78:Src/spi.c     ****   hspi2.Instance = SPI2;
 103              		.loc 1 78 0
 104 0002 0E48     		ldr	r0, .L9
 105 0004 0E4B     		ldr	r3, .L9+4
 106 0006 0360     		str	r3, [r0]
  79:Src/spi.c     ****   hspi2.Init.Mode = SPI_MODE_MASTER;
 107              		.loc 1 79 0
 108 0008 4FF48273 		mov	r3, #260
 109 000c 4360     		str	r3, [r0, #4]
  80:Src/spi.c     ****   hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 110              		.loc 1 80 0
 111 000e 0023     		movs	r3, #0
 112 0010 8360     		str	r3, [r0, #8]
  81:Src/spi.c     ****   hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 113              		.loc 1 81 0
 114 0012 C360     		str	r3, [r0, #12]
  82:Src/spi.c     ****   hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 115              		.loc 1 82 0
 116 0014 0361     		str	r3, [r0, #16]
  83:Src/spi.c     ****   hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 117              		.loc 1 83 0
 118 0016 4361     		str	r3, [r0, #20]
  84:Src/spi.c     ****   hspi2.Init.NSS = SPI_NSS_SOFT;
 119              		.loc 1 84 0
 120 0018 4FF40072 		mov	r2, #512
 121 001c 8261     		str	r2, [r0, #24]
  85:Src/spi.c     ****   hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 122              		.loc 1 85 0
 123 001e C361     		str	r3, [r0, #28]
  86:Src/spi.c     ****   hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 124              		.loc 1 86 0
 125 0020 0362     		str	r3, [r0, #32]
  87:Src/spi.c     ****   hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 126              		.loc 1 87 0
 127 0022 4362     		str	r3, [r0, #36]
  88:Src/spi.c     ****   hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 128              		.loc 1 88 0
 129 0024 8362     		str	r3, [r0, #40]
  89:Src/spi.c     ****   hspi2.Init.CRCPolynomial = 10;
 130              		.loc 1 89 0
 131 0026 0A23     		movs	r3, #10
 132 0028 C362     		str	r3, [r0, #44]
  90:Src/spi.c     ****   if (HAL_SPI_Init(&hspi2) != HAL_OK)
 133              		.loc 1 90 0
 134 002a FFF7FEFF 		bl	HAL_SPI_Init
 135              	.LVL2:
 136 002e 18B1     		cbz	r0, .L6
  91:Src/spi.c     ****   {
  92:Src/spi.c     ****     _Error_Handler(__FILE__, __LINE__);
 137              		.loc 1 92 0
 138 0030 0448     		ldr	r0, .L9+8
 139 0032 5C21     		movs	r1, #92
ARM GAS  /tmp/ccRbQJBl.s 			page 5


 140 0034 FFF7FEFF 		bl	_Error_Handler
 141              	.LVL3:
 142              	.L6:
 143 0038 08BD     		pop	{r3, pc}
 144              	.L10:
 145 003a 00BF     		.align	2
 146              	.L9:
 147 003c 00000000 		.word	hspi2
 148 0040 00380040 		.word	1073756160
 149 0044 00000000 		.word	.LC0
 150              		.cfi_endproc
 151              	.LFE64:
 153              		.section	.text.HAL_SPI_MspInit,"ax",%progbits
 154              		.align	2
 155              		.global	HAL_SPI_MspInit
 156              		.thumb
 157              		.thumb_func
 159              	HAL_SPI_MspInit:
 160              	.LFB65:
  93:Src/spi.c     ****   }
  94:Src/spi.c     **** 
  95:Src/spi.c     **** }
  96:Src/spi.c     **** 
  97:Src/spi.c     **** void HAL_SPI_MspInit(SPI_HandleTypeDef* spiHandle)
  98:Src/spi.c     **** {
 161              		.loc 1 98 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 24
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              	.LVL4:
 166 0000 10B5     		push	{r4, lr}
 167              	.LCFI2:
 168              		.cfi_def_cfa_offset 8
 169              		.cfi_offset 4, -8
 170              		.cfi_offset 14, -4
 171 0002 86B0     		sub	sp, sp, #24
 172              	.LCFI3:
 173              		.cfi_def_cfa_offset 32
  99:Src/spi.c     **** 
 100:Src/spi.c     ****   GPIO_InitTypeDef GPIO_InitStruct;
 101:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 174              		.loc 1 101 0
 175 0004 0368     		ldr	r3, [r0]
 176 0006 234A     		ldr	r2, .L15
 177 0008 9342     		cmp	r3, r2
 178 000a 1ED1     		bne	.L12
 179              	.LBB2:
 102:Src/spi.c     ****   {
 103:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 0 */
 104:Src/spi.c     **** 
 105:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 0 */
 106:Src/spi.c     ****     /* SPI1 clock enable */
 107:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_ENABLE();
 180              		.loc 1 107 0
 181 000c 224B     		ldr	r3, .L15+4
 182 000e 9A69     		ldr	r2, [r3, #24]
 183 0010 42F48052 		orr	r2, r2, #4096
ARM GAS  /tmp/ccRbQJBl.s 			page 6


 184 0014 9A61     		str	r2, [r3, #24]
 185 0016 9B69     		ldr	r3, [r3, #24]
 186 0018 03F48053 		and	r3, r3, #4096
 187 001c 0093     		str	r3, [sp]
 188 001e 009B     		ldr	r3, [sp]
 189              	.LBE2:
 108:Src/spi.c     ****   
 109:Src/spi.c     ****     /**SPI1 GPIO Configuration    
 110:Src/spi.c     ****     PA5     ------> SPI1_SCK
 111:Src/spi.c     ****     PA6     ------> SPI1_MISO
 112:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
 113:Src/spi.c     ****     */
 114:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_7;
 190              		.loc 1 114 0
 191 0020 A023     		movs	r3, #160
 192 0022 0293     		str	r3, [sp, #8]
 115:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 193              		.loc 1 115 0
 194 0024 0223     		movs	r3, #2
 195 0026 0393     		str	r3, [sp, #12]
 116:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 196              		.loc 1 116 0
 197 0028 0323     		movs	r3, #3
 198 002a 0593     		str	r3, [sp, #20]
 117:Src/spi.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 199              		.loc 1 117 0
 200 002c 1B4C     		ldr	r4, .L15+8
 201 002e 2046     		mov	r0, r4
 202              	.LVL5:
 203 0030 02A9     		add	r1, sp, #8
 204 0032 FFF7FEFF 		bl	HAL_GPIO_Init
 205              	.LVL6:
 118:Src/spi.c     **** 
 119:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
 206              		.loc 1 119 0
 207 0036 4023     		movs	r3, #64
 208 0038 0293     		str	r3, [sp, #8]
 120:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 209              		.loc 1 120 0
 210 003a 0023     		movs	r3, #0
 211 003c 0393     		str	r3, [sp, #12]
 121:Src/spi.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 212              		.loc 1 121 0
 213 003e 0493     		str	r3, [sp, #16]
 122:Src/spi.c     ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 214              		.loc 1 122 0
 215 0040 2046     		mov	r0, r4
 216 0042 02A9     		add	r1, sp, #8
 217 0044 FFF7FEFF 		bl	HAL_GPIO_Init
 218              	.LVL7:
 219 0048 22E0     		b	.L11
 220              	.LVL8:
 221              	.L12:
 123:Src/spi.c     **** 
 124:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspInit 1 */
 125:Src/spi.c     **** 
 126:Src/spi.c     ****   /* USER CODE END SPI1_MspInit 1 */
ARM GAS  /tmp/ccRbQJBl.s 			page 7


 127:Src/spi.c     ****   }
 128:Src/spi.c     ****   else if(spiHandle->Instance==SPI2)
 222              		.loc 1 128 0
 223 004a 154A     		ldr	r2, .L15+12
 224 004c 9342     		cmp	r3, r2
 225 004e 1FD1     		bne	.L11
 226              	.LBB3:
 129:Src/spi.c     ****   {
 130:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspInit 0 */
 131:Src/spi.c     **** 
 132:Src/spi.c     ****   /* USER CODE END SPI2_MspInit 0 */
 133:Src/spi.c     ****     /* SPI2 clock enable */
 134:Src/spi.c     ****     __HAL_RCC_SPI2_CLK_ENABLE();
 227              		.loc 1 134 0
 228 0050 114B     		ldr	r3, .L15+4
 229 0052 DA69     		ldr	r2, [r3, #28]
 230 0054 42F48042 		orr	r2, r2, #16384
 231 0058 DA61     		str	r2, [r3, #28]
 232 005a DB69     		ldr	r3, [r3, #28]
 233 005c 03F48043 		and	r3, r3, #16384
 234 0060 0193     		str	r3, [sp, #4]
 235 0062 019B     		ldr	r3, [sp, #4]
 236              	.LBE3:
 135:Src/spi.c     ****   
 136:Src/spi.c     ****     /**SPI2 GPIO Configuration    
 137:Src/spi.c     ****     PB13     ------> SPI2_SCK
 138:Src/spi.c     ****     PB14     ------> SPI2_MISO
 139:Src/spi.c     ****     PB15     ------> SPI2_MOSI 
 140:Src/spi.c     ****     */
 141:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_13|GPIO_PIN_15;
 237              		.loc 1 141 0
 238 0064 4FF42043 		mov	r3, #40960
 239 0068 0293     		str	r3, [sp, #8]
 142:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 240              		.loc 1 142 0
 241 006a 0223     		movs	r3, #2
 242 006c 0393     		str	r3, [sp, #12]
 143:Src/spi.c     ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 243              		.loc 1 143 0
 244 006e 0323     		movs	r3, #3
 245 0070 0593     		str	r3, [sp, #20]
 144:Src/spi.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 246              		.loc 1 144 0
 247 0072 0C4C     		ldr	r4, .L15+16
 248 0074 2046     		mov	r0, r4
 249              	.LVL9:
 250 0076 02A9     		add	r1, sp, #8
 251 0078 FFF7FEFF 		bl	HAL_GPIO_Init
 252              	.LVL10:
 145:Src/spi.c     **** 
 146:Src/spi.c     ****     GPIO_InitStruct.Pin = GPIO_PIN_14;
 253              		.loc 1 146 0
 254 007c 4FF48043 		mov	r3, #16384
 255 0080 0293     		str	r3, [sp, #8]
 147:Src/spi.c     ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 256              		.loc 1 147 0
 257 0082 0023     		movs	r3, #0
ARM GAS  /tmp/ccRbQJBl.s 			page 8


 258 0084 0393     		str	r3, [sp, #12]
 148:Src/spi.c     ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 259              		.loc 1 148 0
 260 0086 0493     		str	r3, [sp, #16]
 149:Src/spi.c     ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 261              		.loc 1 149 0
 262 0088 2046     		mov	r0, r4
 263 008a 02A9     		add	r1, sp, #8
 264 008c FFF7FEFF 		bl	HAL_GPIO_Init
 265              	.LVL11:
 266              	.L11:
 150:Src/spi.c     **** 
 151:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspInit 1 */
 152:Src/spi.c     **** 
 153:Src/spi.c     ****   /* USER CODE END SPI2_MspInit 1 */
 154:Src/spi.c     ****   }
 155:Src/spi.c     **** }
 267              		.loc 1 155 0
 268 0090 06B0     		add	sp, sp, #24
 269              	.LCFI4:
 270              		.cfi_def_cfa_offset 8
 271              		@ sp needed
 272 0092 10BD     		pop	{r4, pc}
 273              	.L16:
 274              		.align	2
 275              	.L15:
 276 0094 00300140 		.word	1073819648
 277 0098 00100240 		.word	1073876992
 278 009c 00080140 		.word	1073809408
 279 00a0 00380040 		.word	1073756160
 280 00a4 000C0140 		.word	1073810432
 281              		.cfi_endproc
 282              	.LFE65:
 284              		.section	.text.HAL_SPI_MspDeInit,"ax",%progbits
 285              		.align	2
 286              		.global	HAL_SPI_MspDeInit
 287              		.thumb
 288              		.thumb_func
 290              	HAL_SPI_MspDeInit:
 291              	.LFB66:
 156:Src/spi.c     **** 
 157:Src/spi.c     **** void HAL_SPI_MspDeInit(SPI_HandleTypeDef* spiHandle)
 158:Src/spi.c     **** {
 292              		.loc 1 158 0
 293              		.cfi_startproc
 294              		@ args = 0, pretend = 0, frame = 0
 295              		@ frame_needed = 0, uses_anonymous_args = 0
 296              	.LVL12:
 297 0000 08B5     		push	{r3, lr}
 298              	.LCFI5:
 299              		.cfi_def_cfa_offset 8
 300              		.cfi_offset 3, -8
 301              		.cfi_offset 14, -4
 159:Src/spi.c     **** 
 160:Src/spi.c     ****   if(spiHandle->Instance==SPI1)
 302              		.loc 1 160 0
 303 0002 0368     		ldr	r3, [r0]
ARM GAS  /tmp/ccRbQJBl.s 			page 9


 304 0004 0E4A     		ldr	r2, .L21
 305 0006 9342     		cmp	r3, r2
 306 0008 0AD1     		bne	.L18
 161:Src/spi.c     ****   {
 162:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 0 */
 163:Src/spi.c     **** 
 164:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 0 */
 165:Src/spi.c     ****     /* Peripheral clock disable */
 166:Src/spi.c     ****     __HAL_RCC_SPI1_CLK_DISABLE();
 307              		.loc 1 166 0
 308 000a 02F56042 		add	r2, r2, #57344
 309 000e 9369     		ldr	r3, [r2, #24]
 310 0010 23F48053 		bic	r3, r3, #4096
 311 0014 9361     		str	r3, [r2, #24]
 167:Src/spi.c     ****   
 168:Src/spi.c     ****     /**SPI1 GPIO Configuration    
 169:Src/spi.c     ****     PA5     ------> SPI1_SCK
 170:Src/spi.c     ****     PA6     ------> SPI1_MISO
 171:Src/spi.c     ****     PA7     ------> SPI1_MOSI 
 172:Src/spi.c     ****     */
 173:Src/spi.c     ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_5|GPIO_PIN_6|GPIO_PIN_7);
 312              		.loc 1 173 0
 313 0016 0B48     		ldr	r0, .L21+4
 314              	.LVL13:
 315 0018 E021     		movs	r1, #224
 316 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 317              	.LVL14:
 318 001e 08BD     		pop	{r3, pc}
 319              	.LVL15:
 320              	.L18:
 174:Src/spi.c     **** 
 175:Src/spi.c     ****   /* USER CODE BEGIN SPI1_MspDeInit 1 */
 176:Src/spi.c     **** 
 177:Src/spi.c     ****   /* USER CODE END SPI1_MspDeInit 1 */
 178:Src/spi.c     ****   }
 179:Src/spi.c     ****   else if(spiHandle->Instance==SPI2)
 321              		.loc 1 179 0
 322 0020 094A     		ldr	r2, .L21+8
 323 0022 9342     		cmp	r3, r2
 324 0024 0AD1     		bne	.L17
 180:Src/spi.c     ****   {
 181:Src/spi.c     ****   /* USER CODE BEGIN SPI2_MspDeInit 0 */
 182:Src/spi.c     **** 
 183:Src/spi.c     ****   /* USER CODE END SPI2_MspDeInit 0 */
 184:Src/spi.c     ****     /* Peripheral clock disable */
 185:Src/spi.c     ****     __HAL_RCC_SPI2_CLK_DISABLE();
 325              		.loc 1 185 0
 326 0026 02F5EC32 		add	r2, r2, #120832
 327 002a D369     		ldr	r3, [r2, #28]
 328 002c 23F48043 		bic	r3, r3, #16384
 329 0030 D361     		str	r3, [r2, #28]
 186:Src/spi.c     ****   
 187:Src/spi.c     ****     /**SPI2 GPIO Configuration    
 188:Src/spi.c     ****     PB13     ------> SPI2_SCK
 189:Src/spi.c     ****     PB14     ------> SPI2_MISO
 190:Src/spi.c     ****     PB15     ------> SPI2_MOSI 
 191:Src/spi.c     ****     */
ARM GAS  /tmp/ccRbQJBl.s 			page 10


 192:Src/spi.c     ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_15);
 330              		.loc 1 192 0
 331 0032 0648     		ldr	r0, .L21+12
 332              	.LVL16:
 333 0034 4FF46041 		mov	r1, #57344
 334 0038 FFF7FEFF 		bl	HAL_GPIO_DeInit
 335              	.LVL17:
 336              	.L17:
 337 003c 08BD     		pop	{r3, pc}
 338              	.L22:
 339 003e 00BF     		.align	2
 340              	.L21:
 341 0040 00300140 		.word	1073819648
 342 0044 00080140 		.word	1073809408
 343 0048 00380040 		.word	1073756160
 344 004c 000C0140 		.word	1073810432
 345              		.cfi_endproc
 346              	.LFE66:
 348              		.comm	hspi2,88,4
 349              		.comm	hspi1,88,4
 350              		.section	.rodata.str1.4,"aMS",%progbits,1
 351              		.align	2
 352              	.LC0:
 353 0000 5372632F 		.ascii	"Src/spi.c\000"
 353      7370692E 
 353      6300
 354              		.text
 355              	.Letext0:
 356              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 357              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 358              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 359              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 360              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 361              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 362              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_spi.h"
 363              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 364              		.file 10 "Inc/spi.h"
ARM GAS  /tmp/ccRbQJBl.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 spi.c
     /tmp/ccRbQJBl.s:19     .text.MX_SPI1_Init:0000000000000000 $t
     /tmp/ccRbQJBl.s:24     .text.MX_SPI1_Init:0000000000000000 MX_SPI1_Init
     /tmp/ccRbQJBl.s:80     .text.MX_SPI1_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi1
     /tmp/ccRbQJBl.s:87     .text.MX_SPI2_Init:0000000000000000 $t
     /tmp/ccRbQJBl.s:92     .text.MX_SPI2_Init:0000000000000000 MX_SPI2_Init
     /tmp/ccRbQJBl.s:147    .text.MX_SPI2_Init:000000000000003c $d
                            *COM*:0000000000000058 hspi2
     /tmp/ccRbQJBl.s:154    .text.HAL_SPI_MspInit:0000000000000000 $t
     /tmp/ccRbQJBl.s:159    .text.HAL_SPI_MspInit:0000000000000000 HAL_SPI_MspInit
     /tmp/ccRbQJBl.s:276    .text.HAL_SPI_MspInit:0000000000000094 $d
     /tmp/ccRbQJBl.s:285    .text.HAL_SPI_MspDeInit:0000000000000000 $t
     /tmp/ccRbQJBl.s:290    .text.HAL_SPI_MspDeInit:0000000000000000 HAL_SPI_MspDeInit
     /tmp/ccRbQJBl.s:341    .text.HAL_SPI_MspDeInit:0000000000000040 $d
     /tmp/ccRbQJBl.s:351    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SPI_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit

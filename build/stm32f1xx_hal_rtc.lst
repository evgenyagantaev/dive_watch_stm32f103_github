ARM GAS  /tmp/cc0Gq4Gz.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"stm32f1xx_hal_rtc.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.RTC_ReadTimeCounter,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  23              	RTC_ReadTimeCounter:
  24              	.LFB80:
  25              		.file 1 "Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c"
   1:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
   2:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
   3:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @file    stm32f1xx_hal_rtc.c
   4:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @author  MCD Application Team
   5:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief   RTC HAL module driver.
   6:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This file provides firmware functions to manage the following 
   7:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          functionalities of the Real Time Clock (RTC) peripheral:
   8:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Initialization and de-initialization functions
   9:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Time and Date functions
  10:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + RTC Alarm functions
  11:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral Control functions   
  12:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *           + Peripheral State functions
  13:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         
  14:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   @verbatim
  15:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  16:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### How to use this driver #####
  17:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  18:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] 
  19:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC domain access (see description in the section above).
  20:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Configure the RTC Prescaler (Asynchronous prescaler to generate RTC 1Hz time base) 
  21:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         using the HAL_RTC_Init() function.
  22:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  23:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Time and Date configuration ***
  24:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===================================
  25:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] 
  26:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Calendar (Time and Date) use the HAL_RTC_SetTime() 
  27:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         and HAL_RTC_SetDate() functions.
  28:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Calendar, use the HAL_RTC_GetTime() and HAL_RTC_GetDate() functions.
  29:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  30:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Alarm configuration ***
  31:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================
  32:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  33:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To configure the RTC Alarm use the HAL_RTC_SetAlarm() function. 
ARM GAS  /tmp/cc0Gq4Gz.s 			page 2


  34:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         You can also configure the RTC Alarm with interrupt mode using the HAL_RTC_SetAlarm_IT() fu
  35:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Alarm, use the HAL_RTC_GetAlarm() function.
  36:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  37:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Tamper configuration ***
  38:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ============================
  39:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  40:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the RTC Tamper and configure the Tamper Level using the 
  41:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         HAL_RTCEx_SetTamper() function. You can configure RTC Tamper with interrupt
  42:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         mode using HAL_RTCEx_SetTamper_IT() function.
  43:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The TAMPER1 alternate function can be mapped to PC13
  44:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  45:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *** Backup Data Registers configuration ***
  46:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ===========================================
  47:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..]
  48:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To write to the RTC Backup Data registers, use the HAL_RTCEx_BKUPWrite()
  49:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.  
  50:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) To read the RTC Backup Data registers, use the HAL_RTCEx_BKUPRead()
  51:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         function.
  52:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
  53:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### WARNING: Drivers Restrictions  #####
  54:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  55:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] RTC version used on STM32F1 families is version V1. All the features supported by V2
  56:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (other families) will be not supported on F1.
  57:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] As on V2, main RTC features are managed by HW. But on F1, date feature is completely 
  58:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        managed by SW.
  59:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] Then, there are some restrictions compared to other families:
  60:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Only format 24 hours supported in HAL (format 12 hours not supported)
  61:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is saved in SRAM. Then, when MCU is in STOP or STANDBY mode, date will be lost.
  62:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         User should implement a way to save date before entering in low power mode (an 
  63:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         example is provided with firmware package based on backup registers)
  64:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Date is automatically updated each time a HAL_RTC_GetTime or HAL_RTC_GetDate is called.
  65:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Alarm detection is limited to 1 day. It will expire only 1 time (no alarm repetition, need
  66:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         to program a new alarm)
  67:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  68:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Backup Domain Operating Condition #####
  69:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==============================================================================
  70:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The real-time clock (RTC) and the RTC backup registers can be powered
  71:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        from the VBAT voltage when the main VDD supply is powered off.
  72:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        To retain the content of the RTC backup registers and supply the RTC 
  73:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        when VDD is turned off, VBAT pin can be connected to an optional 
  74:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        standby voltage supplied by a battery or by another source.
  75:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
  76:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To allow the RTC operating even when the main digital supply (VDD) is turned
  77:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        off, the VBAT pin powers the following blocks:
  78:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The RTC
  79:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) The LSE oscillator
  80:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 I/O
  81:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  82:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VDD (analog switch connected to VDD),
  83:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        the following pins are available:
  84:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as a Tamper pin
  85:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
  86:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] When the backup domain is supplied by VBAT (analog switch connected to VBAT 
  87:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        because VDD is not present), the following pins are available:
  88:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) PC13 can be used as the Tamper pin 
  89:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              
  90:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Reset #####
ARM GAS  /tmp/cc0Gq4Gz.s 			page 3


  91:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
  92:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The backup domain reset sets all RTC registers and the RCC_BDCR register
  93:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        to their reset values. 
  94:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] A backup domain reset is generated when one of the following events occurs:
  95:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Software reset, triggered by setting the BDRST bit in the 
  96:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         RCC Backup domain control register (RCC_BDCR). 
  97:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) VDD or VBAT power on, if both supplies have previously been powered off.  
  98:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (#) Tamper detection event resets all data backup registers.
  99:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                    ##### Backup Domain Access #####
 101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] After reset, the backup domain (RTC registers, RTC backup data 
 103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        registers and backup SRAM) is protected against possible unwanted write 
 104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        accesses. 
 105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] To enable access to the RTC Domain and RTC registers, proceed as follows:
 106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Call the function HAL_RCCEx_PeriphCLKConfig in using RCC_PERIPHCLK_RTC for
 107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         PeriphClockSelection and select RTCClockSelection (LSE, LSI or HSE)
 108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     (+) Enable the BKP clock in using __HAL_RCC_BKP_CLK_ENABLE()
 109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                   ##### RTC and low power modes #####
 111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ==================================================================
 112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The MCU can be woken up from a low power mode by an RTC alternate 
 113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        function.
 114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The RTC alternate functions are the RTC alarms (Alarm A), 
 115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        and RTC tamper event detection.
 116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        These RTC alternate functions can wake up the system from the Stop and 
 117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        Standby low power modes.
 118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   [..] The system can also wake up from low power modes without depending 
 119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        on an external interrupt (Auto-wakeup mode), by using the RTC alarm.
 120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    @endverbatim
 122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @attention
 124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
 126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * Redistribution and use in source and binary forms, with or without modification,
 128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * are permitted provided that the following conditions are met:
 129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer.
 131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      this list of conditions and the following disclaimer in the documentation
 133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      and/or other materials provided with the distribution.
 134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      may be used to endorse or promote products derived from this software
 136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *      without specific prior written permission.
 137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
ARM GAS  /tmp/cc0Gq4Gz.s 			page 4


 148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *
 149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   ******************************************************************************
 150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */ 
 151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Includes ------------------------------------------------------------------*/
 153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #include "stm32f1xx_hal.h"
 154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup STM32F1xx_HAL_Driver
 156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC RTC
 160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief RTC HAL module driver
 161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #ifdef HAL_RTC_MODULE_ENABLED
 165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private typedef -----------------------------------------------------------*/
 167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private define ------------------------------------------------------------*/
 168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Constants RTC Private Constants
 169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE_REGISTER    (uint16_t)0xFFFF
 172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** #define RTC_ALARM_RESETVALUE             0xFFFFFFFFU
 173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private macro -------------------------------------------------------------*/
 179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Macros RTC Private Macros
 180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private variables ---------------------------------------------------------*/
 187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private function prototypes -----------------------------------------------*/
 188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Private_Functions RTC Private Functions
 189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadTimeCounter(RTC_HandleTypeDef* hrtc);
 192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteTimeCounter(RTC_HandleTypeDef* hrtc, uint32_t TimeCounter);
 193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t           RTC_ReadAlarmCounter(RTC_HandleTypeDef* hrtc);
 194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_WriteAlarmCounter(RTC_HandleTypeDef* hrtc, uint32_t AlarmCounter);
 195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_EnterInitMode(RTC_HandleTypeDef* hrtc);
 196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef  RTC_ExitInitMode(RTC_HandleTypeDef* hrtc);
 197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_ByteToBcd2(uint8_t Value);
 198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_Bcd2ToByte(uint8_t Value);
 199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_IsLeapYear(uint16_t nYear);
 200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void               RTC_DateUpdate(RTC_HandleTypeDef* hrtc, uint32_t DayElapsed);
 201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t            RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay);
 202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
ARM GAS  /tmp/cc0Gq4Gz.s 			page 5


 205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /* Private functions ---------------------------------------------------------*/
 208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions RTC Exported Functions
 209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group1 Initialization and de-initialization functions 
 213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief    Initialization and Configuration functions 
 214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim    
 216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ##### Initialization and de-initialization functions #####
 218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    [..] This section provides functions allowing to initialize and configure the 
 220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC Prescaler (Asynchronous), disable RTC registers Write protection, 
 221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          enter and exit the RTC initialization mode, 
 222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          RTC registers synchronization check and reference clock detection enable.
 223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) The RTC Prescaler should be programmed to generate the RTC 1Hz time base. 
 224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) All RTC registers are Write protected. Writing to the RTC registers
 225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              is enabled by setting the CNF bit in the RTC_CRL register.
 226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****          (#) To read the calendar after wakeup from low power modes (Standby or Stop) 
 227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              the software must first wait for the RSF bit (Register Synchronized Flag) 
 228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              in the RTC_CRL register to be set by hardware.
 229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              The HAL_RTC_WaitForSynchro() function implements the above software 
 230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****              sequence (RSF clear and RSF check).
 231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  
 232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC peripheral 
 238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_Init(RTC_HandleTypeDef *hrtc)
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
 247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_CALIB_OUTPUT(hrtc->Init.OutPut));
 254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ASYNCH_PREDIV(hrtc->Init.AsynchPrediv));
 255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc->State == HAL_RTC_STATE_RESET)
 257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Allocate lock resource and initialize it */
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->Lock = HAL_UNLOCKED;
 260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize RTC MSP */
ARM GAS  /tmp/cc0Gq4Gz.s 			page 6


 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     HAL_RTC_MspInit(hrtc);
 263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */  
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;  
 267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        
 268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Waiting for synchro */
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(HAL_RTC_WaitForSynchro(hrtc) != HAL_OK)
 270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   { 
 287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Flags Bits */
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_OW | RTC_FLAG_ALRAF | RTC_FLAG_SEC));
 289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(hrtc->Init.OutPut != RTC_OUTPUTSOURCE_NONE)
 291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Disable the selected Tamper pin */
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       CLEAR_BIT(BKP->CR, BKP_CR_TPE);
 294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set the signal which will be routed to RTC Tamper pin*/
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(BKP->RTCCR, (BKP_RTCCR_CCO | BKP_RTCCR_ASOE | BKP_RTCCR_ASOS), hrtc->Init.OutPut);
 298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (hrtc->Init.AsynchPrediv != RTC_AUTO_1_SECOND)
 300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler provided directly by end-user*/
 302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = hrtc->Init.AsynchPrediv;
 303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* RTC Prescaler will be automatically calculated to get 1 second timebase */
 307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Get the RTCCLK frequency */
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       prescaler = HAL_RCCEx_GetPeriphCLKFreq(RCC_PERIPHCLK_RTC);
 309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Check that RTC clock is enabled*/
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (prescaler == 0U)
 312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Should not happen. Frequency is not available*/
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_ERROR;
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
 318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
ARM GAS  /tmp/cc0Gq4Gz.s 			page 7


 319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* RTC period = RTCCLK/(RTC_PR + 1) */
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         prescaler = prescaler - 1U;
 321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the RTC_PRLH / RTC_PRLL */
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLH, RTC_PRLH_PRL, (prescaler >> 16U));
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLL, RTC_PRLL_PRL, (prescaler & RTC_PRLL_PRL));
 327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
 330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Initialize date to 1st of January 2000 */
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year = 0x00U;
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_MONTH_JANUARY;
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date = 0x01U;
 340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_OK;
 345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC peripheral 
 350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function does not reset the RTC Backup Data registers.   
 353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeInit(RTC_HandleTypeDef *hrtc)
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
 359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALL_INSTANCE(hrtc->Instance));
 365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set RTC state */
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
 371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Release Lock */
ARM GAS  /tmp/cc0Gq4Gz.s 			page 8


 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }  
 380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTL);
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTH);
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->PRLL, 0x00008000U);
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->PRLH);
 386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Reset All CRH/CRL bits */
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRH);
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRL);
 390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
 392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */ 
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait for synchro*/
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_WaitForSynchro(hrtc);
 404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
 407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* De-Initialize RTC MSP */
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_RTC_MspDeInit(hrtc);
 410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_RESET; 
 412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Release Lock */
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Initializes the RTC MSP.
 421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.  
 423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspInit(RTC_HandleTypeDef* hrtc)
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspInit could be implemented in the user file
 431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */ 
 432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
ARM GAS  /tmp/cc0Gq4Gz.s 			page 9


 433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  DeInitializes the RTC MSP.
 436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC. 
 438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
 439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_MspDeInit(RTC_HandleTypeDef* hrtc)
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
 444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
 445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_MspDeInit could be implemented in the user file
 446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */ 
 447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group2 Time and Date functions
 454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Time and Date functions
 455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
 457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Time and Date functions #####
 459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
 460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  
 461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Time and Date features
 462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current time.
 469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sTime == NULL))
 484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  /* Check the parameters */
 489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
ARM GAS  /tmp/cc0Gq4Gz.s 			page 10


 490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sTime->Hours));
 499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sTime->Minutes));
 500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sTime->Seconds));
 501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (uint32_t)(((uint32_t)sTime->Hours * 3600U) + \
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Minutes * 60U) + \
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Seconds));  
 505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sTime->Hours)));
 509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sTime->Minutes)));
 510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sTime->Seconds)));
 511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time = (((uint32_t)(RTC_Bcd2ToByte(sTime->Hours)) * 3600U) + \
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Seconds))));   
 515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write time counter in RTC registers */
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear Second and overflow flags */
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_BIT(hrtc->Instance->CRL, (RTC_FLAG_SEC | RTC_FLAG_OW));
 532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(counter_alarm < counter_time)
 540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24U * 3600U);
 543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         
 544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
ARM GAS  /tmp/cc0Gq4Gz.s 			page 11


 547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */ 
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
 554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    return HAL_OK;
 563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current time.
 568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sTime: Pointer to Time structure
 571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetTime(RTC_HandleTypeDef *hrtc, RTC_TimeTypeDef *sTime, uint32_t Format)
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sTime == NULL))
 583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check if counter overflow occurred */
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (__HAL_RTC_OVERFLOW_GET_FLAG(hrtc, RTC_FLAG_OW))
 592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600U;
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Minutes  = (uint8_t)((counter_time % 3600U) / 60U);
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Seconds  = (uint8_t)((counter_time % 3600U) % 60U);
 603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
ARM GAS  /tmp/cc0Gq4Gz.s 			page 12


 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours >= 24U)
 605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get number of days elapsed from last calculation */
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     days_elapsed = (hours / 24U);
 608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set Hours in RTC_TimeTypeDef structure*/
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = (hours % 24U);    
 611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read Alarm counter in RTC registers */
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Calculate remaining time to reach alarm (only if set and not yet expired)*/
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if ((counter_alarm != RTC_ALARM_RESETVALUE) && (counter_alarm > counter_time))
 617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm -= counter_time;
 619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else 
 621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* In case of counter_alarm < counter_time */
 623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm expiration already occurred but alarm not deactivated */
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm = RTC_ALARM_RESETVALUE;
 625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= (days_elapsed * 24U * 3600U);
 629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated alarm to be set */
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       counter_alarm += counter_time;
 640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Write time counter in RTC registers */
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else
 648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Alarm already occurred. Set it to reset values to avoid unexpected expiration */
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Update date */
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     RTC_DateUpdate(hrtc, days_elapsed);
 658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else 
 660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
ARM GAS  /tmp/cc0Gq4Gz.s 			page 13


 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours = hours;    
 662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format != RTC_FORMAT_BIN)
 666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the time structure parameters to BCD format */
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Hours    = (uint8_t)RTC_ByteToBcd2(sTime->Hours);
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Minutes  = (uint8_t)RTC_ByteToBcd2(sTime->Minutes);
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Seconds  = (uint8_t)RTC_ByteToBcd2(sTime->Seconds);  
 671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets RTC current date.
 679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to date structure
 682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: specifies the format of the entered parameters.
 683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN: Binary data format 
 685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD: BCD data format
 686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sDate == NULL))
 694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  /* Process Locked */ 
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  __HAL_LOCK(hrtc);
 703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY; 
 705:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 707:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {   
 708:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(sDate->Year));
 709:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(sDate->Month));
 710:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(sDate->Date)); 
 711:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 712:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = sDate->Year;
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = sDate->Month;
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = sDate->Date;
 716:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 717:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
ARM GAS  /tmp/cc0Gq4Gz.s 			page 14


 718:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {   
 719:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_YEAR(RTC_Bcd2ToByte(sDate->Year)));
 720:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MONTH(RTC_Bcd2ToByte(sDate->Month)));
 721:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_DATE(RTC_Bcd2ToByte(sDate->Date)));
 722:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 723:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Change the current date */
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Year  = RTC_Bcd2ToByte(sDate->Year);
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_Bcd2ToByte(sDate->Month);
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = RTC_Bcd2ToByte(sDate->Date);
 727:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 728:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 729:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* WeekDay set by user can be ignored because automatically calculated */
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(hrtc->DateToUpdate.Year, hrtc->DateToUpdate.Month, hr
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay = hrtc->DateToUpdate.WeekDay;
 732:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 733:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Reset time to be aligned on the same day */
 734:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read the time counter*/
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = RTC_ReadTimeCounter(hrtc);
 736:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 737:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hours = counter_time / 3600U;
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours > 24U)
 740:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 741:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set updated time in decreasing counter by number of days elapsed */
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_time -= ((hours / 24U) * 24U * 3600U);
 743:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (RTC_WriteTimeCounter(hrtc, counter_time) != HAL_OK)
 745:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 746:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Set RTC state */
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
 748:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 749:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */ 
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
 751:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
 753:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 754:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 755:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Read current Alarm counter in RTC registers */
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = RTC_ReadAlarmCounter(hrtc);
 757:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 758:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set again alarm to match with new time if enabled */
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if (counter_alarm != RTC_ALARM_RESETVALUE)
 760:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(counter_alarm < counter_time)
 762:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 763:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Add 1 day to alarm counter*/
 764:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         counter_alarm += (uint32_t)(24U * 3600U);
 765:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         
 766:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Write new Alarm counter in RTC registers */
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 768:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 769:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Set RTC state */
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           hrtc->State = HAL_RTC_STATE_ERROR;
 771:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 772:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           /* Process Unlocked */ 
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           __HAL_UNLOCK(hrtc);
 774:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
ARM GAS  /tmp/cc0Gq4Gz.s 			page 15


 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           return HAL_ERROR;
 776:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 777:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 778:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 779:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 780:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 781:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 782:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY ;
 784:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 785:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */ 
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);
 787:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;    
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 790:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 791:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 792:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets RTC current date.
 793:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 794:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 795:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sDate: Pointer to Date structure
 796:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 797:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 798:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BIN:  Binary data format 
 799:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_FORMAT_BCD:  BCD data format
 800:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 801:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 802:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetDate(RTC_HandleTypeDef *hrtc, RTC_DateTypeDef *sDate, uint32_t Format)
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
 805:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 806:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sDate == NULL))
 808:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 810:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 811:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 812:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 813:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 814:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 815:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
 817:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 819:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 820:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 821:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure fields with the read parameters */
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay  = hrtc->DateToUpdate.WeekDay;
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Year     = hrtc->DateToUpdate.Year;
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Month    = hrtc->DateToUpdate.Month;
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Date     = hrtc->DateToUpdate.Date;
 826:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 827:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the input parameters format */
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format != RTC_FORMAT_BIN)
 829:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {    
 830:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Convert the date structure parameters to BCD format */
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Year   = (uint8_t)RTC_ByteToBcd2(sDate->Year);
ARM GAS  /tmp/cc0Gq4Gz.s 			page 16


 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Month  = (uint8_t)RTC_ByteToBcd2(sDate->Month);
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Date   = (uint8_t)RTC_ByteToBcd2(sDate->Date);  
 834:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 835:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 837:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 838:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 839:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
 840:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 841:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 842:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group3 Alarm functions
 843:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   RTC Alarm functions
 844:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
 845:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
 846:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
 847:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                  ##### RTC Alarm functions #####
 848:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
 849:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  
 850:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  [..] This section provides functions allowing to configure Alarm feature
 851:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 852:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
 853:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
 854:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 855:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 856:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 857:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm.
 858:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 859:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 860:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 861:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 862:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 863:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 864:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 865:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 866:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 867:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Form
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 869:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
 871:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 872:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sAlarm == NULL))
 874:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 876:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 877:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 878:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 879:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 880:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 881:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 882:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 884:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 886:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 887:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
ARM GAS  /tmp/cc0Gq4Gz.s 			page 17


 889:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 891:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 892:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 893:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600U) + \
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Seconds));  
 897:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 899:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 900:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 901:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 902:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 903:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600U) + \
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Seconds));  
 907:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 908:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 909:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 910:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
 911:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
 912:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
 913:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600U) + \
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));   
 917:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 918:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 919:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
 921:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 922:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24U * 3600U);
 924:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 925:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 926:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write Alarm counter in RTC registers */
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
 928:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 929:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
 931:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 932:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
 934:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 936:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 937:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
 938:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
 940:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
 942:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    return HAL_OK;
 944:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
ARM GAS  /tmp/cc0Gq4Gz.s 			page 18


 946:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 947:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
 948:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Sets the specified RTC Alarm with Interrupt 
 949:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
 950:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
 951:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Alarm structure
 952:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
 953:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
 954:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
 955:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
 956:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   The HAL_RTC_SetTime() must be called before enabling the Alarm feature.   
 957:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
 958:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
 959:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_SetAlarm_IT(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t F
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 961:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
 963:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 964:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sAlarm == NULL))
 966:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
 968:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 969:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 970:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
 971:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
 972:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(sAlarm->Alarm));
 973:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 974:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
 976:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
 978:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 979:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Call HAL_RTC_GetTime function to update date if counter higher than 24 hours */
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (HAL_RTC_GetTime(hrtc, &stime, RTC_FORMAT_BIN) != HAL_OK)
 981:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
 983:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 984:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 985:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Convert time in seconds */
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_time = (uint32_t)(((uint32_t)stime.Hours * 3600U) + \
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Seconds));  
 989:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format == RTC_FORMAT_BIN)
 991:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 992:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(sAlarm->AlarmTime.Hours));
 993:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(sAlarm->AlarmTime.Minutes));
 994:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(sAlarm->AlarmTime.Seconds));
 995:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (uint32_t)(((uint32_t)sAlarm->AlarmTime.Hours * 3600U) + \
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         ((uint32_t)sAlarm->AlarmTime.Seconds));  
 999:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1000:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1001:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1002:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_HOUR24(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)));
ARM GAS  /tmp/cc0Gq4Gz.s 			page 19


1003:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_MINUTES(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)));
1004:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     assert_param(IS_RTC_SECONDS(RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));
1005:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm = (((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Hours)) * 3600U) + \
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));   
1009:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1010:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1011:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check that requested alarm should expire in the same day (otherwise add 1 day) */
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (counter_alarm < counter_time)
1013:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1014:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Add 1 day to alarm counter*/
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     counter_alarm += (uint32_t)(24U * 3600U);
1016:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1017:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1018:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Write alarm counter in RTC registers */
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (RTC_WriteAlarmCounter(hrtc, counter_alarm) != HAL_OK)
1020:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1021:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1023:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1024:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1026:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1028:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1029:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1030:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1031:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1033:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1034:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Configure the Alarm interrupt */
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_ENABLE_IT(hrtc,RTC_IT_ALRA);
1036:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1037:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: EXTI configuration */
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_IT();
1039:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_ENABLE_RISING_EDGE();
1041:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_READY;
1043:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    __HAL_UNLOCK(hrtc); 
1045:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    return HAL_OK;
1047:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1049:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1050:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1051:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Gets the RTC Alarm value and masks.
1052:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1053:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1054:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  sAlarm: Pointer to Date structure
1055:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1056:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1057:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_ALARM_A: Alarm
1058:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Format: Specifies the format of the entered parameters.
1059:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
ARM GAS  /tmp/cc0Gq4Gz.s 			page 20


1060:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BIN: Binary data format 
1061:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *             @arg RTC_FORMAT_BCD: BCD data format
1062:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1063:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1064:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_GetAlarm(RTC_HandleTypeDef *hrtc, RTC_AlarmTypeDef *sAlarm, uint32_t Alar
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1066:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
1067:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1068:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1069:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(Alarm);
1070:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1071:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((hrtc == NULL) || (sAlarm == NULL))
1073:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1075:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1076:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1077:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1078:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_FORMAT(Format));
1079:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1080:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1081:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Read Alarm counter in RTC registers */
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   counter_alarm = RTC_ReadAlarmCounter(hrtc);
1083:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1084:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Fill the structure with the read parameters */
1085:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set hours in a day range (between 0 to 24)*/
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Hours   = (uint32_t)((counter_alarm / 3600U) % 24U);
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((counter_alarm % 3600U) / 60U);
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)((counter_alarm % 3600U) % 60U);
1089:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(Format != RTC_FORMAT_BIN)
1091:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Hours   = RTC_ByteToBcd2(sAlarm->AlarmTime.Hours);
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes);
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds);
1095:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }  
1096:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1099:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1100:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1101:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Deactive the specified RTC Alarm 
1102:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1103:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1104:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Alarm: Specifies the Alarm.
1105:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *          This parameter can be one of the following values:
1106:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *            @arg RTC_ALARM_A:  AlarmA
1107:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1108:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1109:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_DeactivateAlarm(RTC_HandleTypeDef *hrtc, uint32_t Alarm)
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1111:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1112:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(Alarm);
1113:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1114:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check the parameters */
1115:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   assert_param(IS_RTC_ALARM(Alarm));
1116:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
ARM GAS  /tmp/cc0Gq4Gz.s 			page 21


1117:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
1119:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
1121:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1122:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1123:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Locked */ 
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_LOCK(hrtc);
1125:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_BUSY;
1127:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1128:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* In case of interrupt mode is used, the interrupt source must disabled */ 
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_DISABLE_IT(hrtc, RTC_IT_ALRA);
1130:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1131:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
1133:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1134:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC state */
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->State = HAL_RTC_STATE_ERROR;
1136:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1137:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Process Unlocked */ 
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_UNLOCK(hrtc);
1139:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return HAL_ERROR;
1141:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
1142:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1143:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1144:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Clear flag alarm A */
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1146:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1147:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set to default values ALRH & ALRL registers */
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, RTC_ALARM_RESETVALUE_REGISTER);
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, RTC_ALARM_RESETVALUE_REGISTER);
1150:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1151:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* RTC Alarm Interrupt Configuration: Disable EXTI configuration */
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     __HAL_RTC_ALARM_EXTI_DISABLE_IT();
1153:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1154:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
1156:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       hrtc->State = HAL_RTC_STATE_ERROR;
1158:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
1159:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Process Unlocked */ 
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_UNLOCK(hrtc);
1161:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_ERROR;
1163:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1164:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1166:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1167:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Process Unlocked */ 
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_UNLOCK(hrtc);  
1169:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK; 
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1172:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1173:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
ARM GAS  /tmp/cc0Gq4Gz.s 			page 22


1174:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles Alarm interrupt request.
1175:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1176:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1177:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1178:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1179:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** void HAL_RTC_AlarmIRQHandler(RTC_HandleTypeDef* hrtc)
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {  
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
1182:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1183:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Get the status of the Interrupt */
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) != (uint32_t)RESET)
1185:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1186:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* AlarmA callback */ 
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       HAL_RTC_AlarmAEventCallback(hrtc);
1188:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
1189:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Clear the Alarm interrupt pending bit */
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       __HAL_RTC_ALARM_CLEAR_FLAG(hrtc,RTC_FLAG_ALRAF);
1191:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1192:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1193:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1194:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the EXTI's line Flag for RTC Alarm */
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_EXTI_CLEAR_FLAG();
1196:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1197:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1199:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1200:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1201:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1202:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Alarm A callback.
1203:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1204:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1205:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1206:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1207:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** __weak void HAL_RTC_AlarmAEventCallback(RTC_HandleTypeDef *hrtc)
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1209:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
1210:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   UNUSED(hrtc);
1211:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* NOTE : This function Should not be modified, when the callback is needed,
1212:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****             the HAL_RTC_AlarmAEventCallback could be implemented in the user file
1213:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****    */
1214:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1215:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1216:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1217:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  This function handles AlarmA Polling request.
1218:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1219:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1220:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Timeout: Timeout duration
1221:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1222:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1223:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_PollForAlarmAEvent(RTC_HandleTypeDef *hrtc, uint32_t Timeout)
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {  
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
1226:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1227:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
1229:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
ARM GAS  /tmp/cc0Gq4Gz.s 			page 23


1231:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1232:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while(__HAL_RTC_ALARM_GET_FLAG(hrtc, RTC_FLAG_ALRAF) == RESET)
1234:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(Timeout != HAL_MAX_DELAY)
1236:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if((Timeout == 0)||((HAL_GetTick() - tickstart ) > Timeout))
1238:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         hrtc->State = HAL_RTC_STATE_TIMEOUT;
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_TIMEOUT;
1241:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1242:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1244:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1245:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear the Alarm interrupt pending bit */
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_ALARM_CLEAR_FLAG(hrtc, RTC_FLAG_ALRAF);
1247:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Change RTC state */
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->State = HAL_RTC_STATE_READY; 
1250:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;  
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1253:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1254:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1255:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1257:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1258:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group4 Peripheral State functions 
1259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral State functions 
1260:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1261:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
1262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1263:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral State functions #####
1264:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
1265:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1267:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Get RTC state
1268:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1270:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1271:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1273:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Returns the RTC state.
1274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1275:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1276:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL state
1277:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_RTCStateTypeDef HAL_RTC_GetState(RTC_HandleTypeDef* hrtc)
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return hrtc->State;
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1282:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1284:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1285:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1286:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1287:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @defgroup RTC_Exported_Functions_Group5 Peripheral Control functions 
ARM GAS  /tmp/cc0Gq4Gz.s 			page 24


1288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *  @brief   Peripheral Control functions 
1289:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  *
1290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @verbatim   
1291:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================
1292:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ##### Peripheral Control functions #####
1293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****  ===============================================================================  
1294:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     [..]
1295:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     This subsection provides functions allowing to
1296:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       (+) Wait for RTC Time and Date Synchronization
1297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1298:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** @endverbatim
1299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1300:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1301:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1302:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1303:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Waits until the RTC registers (RTC_CNT, RTC_ALR and RTC_PRL)
1304:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   are synchronized with RTC APB clock.
1305:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   This function must be called before any read operation after an APB reset
1306:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *   or an APB clock stop.
1307:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1309:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1310:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** HAL_StatusTypeDef HAL_RTC_WaitForSynchro(RTC_HandleTypeDef* hrtc)
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1313:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(hrtc == NULL)
1317:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      return HAL_ERROR;
1319:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1321:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Clear RSF flag */
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   CLEAR_BIT(hrtc->Instance->CRL, RTC_FLAG_RSF);
1323:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait the registers to be synchronised */
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while((hrtc->Instance->CRL & RTC_FLAG_RSF) == (uint32_t)RESET)
1328:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart ) >  RTC_TIMEOUT_VALUE)
1330:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1332:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
1333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1334:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
1340:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1341:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1343:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @}
ARM GAS  /tmp/cc0Gq4Gz.s 			page 25


1345:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1347:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /** @addtogroup RTC_Private_Functions
1348:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @{
1349:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1350:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1351:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1352:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1353:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_CNT registers.
1354:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1355:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1357:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadTimeCounter(RTC_HandleTypeDef* hrtc)
1359:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
  26              		.loc 1 1359 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  32 0000 30B4     		push	{r4, r5}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 5, -4
  37              	.LVL1:
1360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0U, high2 = 0U, low = 0U;
1361:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t timecounter = 0U;
1362:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1363:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
  38              		.loc 1 1363 0
  39 0002 0268     		ldr	r2, [r0]
  40 0004 9169     		ldr	r1, [r2, #24]
  41 0006 8DB2     		uxth	r5, r1
  42              	.LVL2:
1364:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT);
  43              		.loc 1 1364 0
  44 0008 D369     		ldr	r3, [r2, #28]
  45              	.LVL3:
1365:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high2 = READ_REG(hrtc->Instance->CNTH & RTC_CNTH_RTC_CNT);
  46              		.loc 1 1365 0
  47 000a 9069     		ldr	r0, [r2, #24]
  48              	.LVL4:
  49 000c 84B2     		uxth	r4, r0
  50              	.LVL5:
1366:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (high1 != high2)
  51              		.loc 1 1367 0
  52 000e A542     		cmp	r5, r4
  53 0010 04D0     		beq	.L2
1368:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   { /* In this case the counter roll over during reading of CNTL and CNTH registers, 
1369:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        read again CNTL register then return the counter value */
1370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high2 << 16U) | READ_REG(hrtc->Instance->CNTL & RTC_CNTL_RTC_CNT));
  54              		.loc 1 1370 0
  55 0012 D369     		ldr	r3, [r2, #28]
  56              	.LVL6:
ARM GAS  /tmp/cc0Gq4Gz.s 			page 26


  57 0014 9BB2     		uxth	r3, r3
  58 0016 43EA0040 		orr	r0, r3, r0, lsl #16
  59              	.LVL7:
  60 001a 02E0     		b	.L3
  61              	.LVL8:
  62              	.L2:
1371:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1372:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   { /* No counter roll over during reading of CNTL and CNTH registers, counter 
1374:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        value is equal to first value of CNTL and CNTH */
1375:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     timecounter = (((uint32_t) high1 << 16U) | low);
  63              		.loc 1 1375 0
  64 001c 9BB2     		uxth	r3, r3
  65 001e 43EA0140 		orr	r0, r3, r1, lsl #16
  66              	.LVL9:
  67              	.L3:
1376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1377:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return timecounter;
1379:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
  68              		.loc 1 1379 0
  69 0022 30BC     		pop	{r4, r5}
  70              	.LCFI1:
  71              		.cfi_restore 5
  72              		.cfi_restore 4
  73              		.cfi_def_cfa_offset 0
  74              	.LVL10:
  75 0024 7047     		bx	lr
  76              		.cfi_endproc
  77              	.LFE80:
  79 0026 00BF     		.section	.text.RTC_ReadAlarmCounter,"ax",%progbits
  80              		.align	2
  81              		.thumb
  82              		.thumb_func
  84              	RTC_ReadAlarmCounter:
  85              	.LFB82:
1380:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1381:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_CNT registers.
1383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  TimeCounter: Counter to write in RTC_CNT registers
1386:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1387:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteTimeCounter(RTC_HandleTypeDef* hrtc, uint32_t TimeCounter)
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1390:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
1391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1392:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
1394:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
1396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
1397:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1399:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTH, (TimeCounter >> 16U));
ARM GAS  /tmp/cc0Gq4Gz.s 			page 27


1401:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->CNTL, (TimeCounter & RTC_CNTL_RTC_CNT));
1403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1404:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
1406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
1408:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1410:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1413:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1415:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Read the time counter available in RTC_ALR registers.
1416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1418:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Time counter
1419:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1420:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint32_t RTC_ReadAlarmCounter(RTC_HandleTypeDef* hrtc)
1421:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
  86              		.loc 1 1421 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL11:
1422:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint16_t high1 = 0U, low = 0U;
1423:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1424:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   high1 = READ_REG(hrtc->Instance->ALRH & RTC_CNTH_RTC_CNT);
  92              		.loc 1 1424 0
  93 0000 0368     		ldr	r3, [r0]
  94 0002 186A     		ldr	r0, [r3, #32]
  95              	.LVL12:
1425:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   low   = READ_REG(hrtc->Instance->ALRL & RTC_CNTL_RTC_CNT);
  96              		.loc 1 1425 0
  97 0004 5B6A     		ldr	r3, [r3, #36]
  98              	.LVL13:
1426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1427:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (((uint32_t) high1 << 16U) | low);
  99              		.loc 1 1427 0
 100 0006 9BB2     		uxth	r3, r3
1428:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 101              		.loc 1 1428 0
 102 0008 43EA0040 		orr	r0, r3, r0, lsl #16
 103              	.LVL14:
 104 000c 7047     		bx	lr
 105              		.cfi_endproc
 106              	.LFE82:
 108 000e 00BF     		.section	.text.RTC_ByteToBcd2,"ax",%progbits
 109              		.align	2
 110              		.thumb
 111              		.thumb_func
 113              	RTC_ByteToBcd2:
 114              	.LFB86:
1429:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1430:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
ARM GAS  /tmp/cc0Gq4Gz.s 			page 28


1431:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Write the time counter in RTC_ALR registers.
1432:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1433:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1434:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  AlarmCounter: Counter to write in RTC_ALR registers
1435:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1436:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1437:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_WriteAlarmCounter(RTC_HandleTypeDef* hrtc, uint32_t AlarmCounter)
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1439:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
1440:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Set Initialization mode */
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(RTC_EnterInitMode(hrtc) != HAL_OK)
1443:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     status = HAL_ERROR;
1445:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
1446:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1447:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1448:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER MSB word */
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRH, (AlarmCounter >> 16U));
1450:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, (AlarmCounter & RTC_ALRL_RTC_ALR));
1452:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
1453:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Wait for synchro */
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if(RTC_ExitInitMode(hrtc) != HAL_OK)
1455:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       status = HAL_ERROR;
1457:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1458:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1459:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1460:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return status;
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1462:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1463:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1464:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Enters the RTC Initialization mode.
1465:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1466:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1467:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1468:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1469:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_EnterInitMode(RTC_HandleTypeDef* hrtc)
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1471:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1472:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1474:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
1476:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1478:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1480:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
1481:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1482:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_DISABLE(hrtc);
1485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1486:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;  
ARM GAS  /tmp/cc0Gq4Gz.s 			page 29


1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1489:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1490:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1491:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Exit the RTC Initialization mode.
1492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1493:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval HAL status
1495:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static HAL_StatusTypeDef RTC_ExitInitMode(RTC_HandleTypeDef* hrtc)
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1498:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
1499:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1500:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Disable the write protection for RTC registers */
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   __HAL_RTC_WRITEPROTECTION_ENABLE(hrtc);
1502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tickstart = HAL_GetTick();
1504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while((hrtc->Instance->CRL & RTC_CRL_RTOFF) == (uint32_t)RESET)
1506:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((HAL_GetTick() - tickstart) >  RTC_TIMEOUT_VALUE)
1508:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       return HAL_TIMEOUT;
1510:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
1511:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return HAL_OK;  
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1515:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1516:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1517:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts a 2 digit decimal to BCD format.
1518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: Byte to be converted
1519:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted byte
1520:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_ByteToBcd2(uint8_t Value)
1522:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 115              		.loc 1 1522 0
 116              		.cfi_startproc
 117              		@ args = 0, pretend = 0, frame = 0
 118              		@ frame_needed = 0, uses_anonymous_args = 0
 119              		@ link register save eliminated.
 120              	.LVL15:
1523:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t bcdhigh = 0U;
 121              		.loc 1 1523 0
 122 0000 0023     		movs	r3, #0
1524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   while(Value >= 10U)
 123              		.loc 1 1525 0
 124 0002 02E0     		b	.L7
 125              	.LVL16:
 126              	.L8:
1526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1527:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     bcdhigh++;
 127              		.loc 1 1527 0
 128 0004 0133     		adds	r3, r3, #1
 129              	.LVL17:
1528:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     Value -= 10U;
 130              		.loc 1 1528 0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 30


 131 0006 0A38     		subs	r0, r0, #10
 132              	.LVL18:
 133 0008 C0B2     		uxtb	r0, r0
 134              	.LVL19:
 135              	.L7:
1525:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 136              		.loc 1 1525 0
 137 000a 0928     		cmp	r0, #9
 138 000c FAD8     		bhi	.L8
1529:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1530:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return  ((uint8_t)(bcdhigh << 4U) | Value);
 139              		.loc 1 1531 0
 140 000e 1B01     		lsls	r3, r3, #4
 141              	.LVL20:
 142 0010 DBB2     		uxtb	r3, r3
1532:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 143              		.loc 1 1532 0
 144 0012 1843     		orrs	r0, r0, r3
 145              	.LVL21:
 146 0014 7047     		bx	lr
 147              		.cfi_endproc
 148              	.LFE86:
 150 0016 00BF     		.section	.text.RTC_Bcd2ToByte,"ax",%progbits
 151              		.align	2
 152              		.thumb
 153              		.thumb_func
 155              	RTC_Bcd2ToByte:
 156              	.LFB87:
1533:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1535:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Converts from 2 digit BCD to Binary.
1536:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  Value: BCD value to be converted
1537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Converted word
1538:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_Bcd2ToByte(uint8_t Value)
1540:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 157              		.loc 1 1540 0
 158              		.cfi_startproc
 159              		@ args = 0, pretend = 0, frame = 0
 160              		@ frame_needed = 0, uses_anonymous_args = 0
 161              		@ link register save eliminated.
 162              	.LVL22:
1541:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tmp = 0U;
1542:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   tmp = ((uint8_t)(Value & (uint8_t)0xF0) >> (uint8_t)0x4) * 10U;
 163              		.loc 1 1542 0
 164 0000 0309     		lsrs	r3, r0, #4
 165 0002 03EB8303 		add	r3, r3, r3, lsl #2
 166 0006 5B00     		lsls	r3, r3, #1
 167              	.LVL23:
1543:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (tmp + (Value & (uint8_t)0x0F));
 168              		.loc 1 1543 0
 169 0008 00F00F00 		and	r0, r0, #15
 170              	.LVL24:
 171 000c 1844     		add	r0, r0, r3
1544:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 172              		.loc 1 1544 0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 31


 173 000e C0B2     		uxtb	r0, r0
 174 0010 7047     		bx	lr
 175              		.cfi_endproc
 176              	.LFE87:
 178 0012 00BF     		.section	.text.RTC_IsLeapYear,"ax",%progbits
 179              		.align	2
 180              		.thumb
 181              		.thumb_func
 183              	RTC_IsLeapYear:
 184              	.LFB89:
1545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1546:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1547:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Updates date when time is 23:59:59.
1548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  hrtc   pointer to a RTC_HandleTypeDef structure that contains
1549:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *                the configuration information for RTC.
1550:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  DayElapsed: Number of days elapsed from last date update
1551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval None
1552:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static void RTC_DateUpdate(RTC_HandleTypeDef* hrtc, uint32_t DayElapsed)
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
1555:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, month = 0U, day = 0U;
1556:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t loop = 0U;
1557:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current year*/
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = hrtc->DateToUpdate.Year;
1560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1561:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Get the current month and day */
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   month = hrtc->DateToUpdate.Month;
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   day = hrtc->DateToUpdate.Date;
1564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   for (loop = 0U; loop < DayElapsed; loop++)
1566:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     if((month == 1U) || (month == 3U) || (month == 5U) || (month == 7U) || \
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (month == 8U) || (month == 10U) || (month == 12U))
1569:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(day < 31U)
1571:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1573:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1574:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 31 */
1575:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
1576:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if(month != 12U)
1578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1581:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Date structure member: day = 31 & month =12 */
1583:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month = 1U;
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           year++;
1588:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1589:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1590:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if((month == 4U) || (month == 6U) || (month == 9U) || (month == 11U))
ARM GAS  /tmp/cc0Gq4Gz.s 			page 32


1592:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(day < 30U)
1594:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1596:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       /* Date structure member: day = 30 */
1598:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else
1599:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
1602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1603:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     else if(month == 2U)
1605:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       if(day < 28U)
1607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day++;
1609:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if(day == 28U)
1611:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1612:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         /* Leap year */
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         if(RTC_IsLeapYear(year))
1614:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day++;
1616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1617:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         else
1618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           month++;
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
1621:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
1622:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       else if(day == 29U)
1624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         month++;
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
1627:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
1628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
1629:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1630:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update year */
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Year = year;
1633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1634:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day and month */
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Month = month;
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Date = day;
1637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1638:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Update day of the week */
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.WeekDay = RTC_WeekDayNum(year, month, day);
1640:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
1641:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1643:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Check whether the passed year is Leap or not.
1644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear  year to check
1645:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval 1: leap year
1646:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         0: not leap year
1647:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1648:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_IsLeapYear(uint16_t nYear)
ARM GAS  /tmp/cc0Gq4Gz.s 			page 33


1649:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 185              		.loc 1 1649 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL25:
1650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((nYear % 4U) != 0U) 
 191              		.loc 1 1650 0
 192 0000 10F0030F 		tst	r0, #3
 193 0004 14D1     		bne	.L12
1651:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0U;
1653:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1654:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1655:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((nYear % 100U) != 0U) 
 194              		.loc 1 1655 0
 195 0006 0D4B     		ldr	r3, .L15
 196 0008 A3FB0023 		umull	r2, r3, r3, r0
 197 000c 5B09     		lsrs	r3, r3, #5
 198 000e 6422     		movs	r2, #100
 199 0010 02FB1303 		mls	r3, r2, r3, r0
 200 0014 9BB2     		uxth	r3, r3
 201 0016 6BB9     		cbnz	r3, .L13
1656:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1U;
1658:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1659:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1660:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if((nYear % 400U) == 0U)
 202              		.loc 1 1660 0
 203 0018 084B     		ldr	r3, .L15
 204 001a A3FB0023 		umull	r2, r3, r3, r0
 205 001e DB09     		lsrs	r3, r3, #7
 206 0020 4FF4C872 		mov	r2, #400
 207 0024 02FB1300 		mls	r0, r2, r3, r0
 208              	.LVL26:
 209 0028 80B2     		uxth	r0, r0
 210 002a 28B9     		cbnz	r0, .L14
1661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1662:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 1U;
 211              		.loc 1 1662 0
 212 002c 0120     		movs	r0, #1
 213 002e 7047     		bx	lr
 214              	.LVL27:
 215              	.L12:
1652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 216              		.loc 1 1652 0
 217 0030 0020     		movs	r0, #0
 218              	.LVL28:
 219 0032 7047     		bx	lr
 220              	.LVL29:
 221              	.L13:
1657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 222              		.loc 1 1657 0
 223 0034 0120     		movs	r0, #1
 224              	.LVL30:
 225 0036 7047     		bx	lr
ARM GAS  /tmp/cc0Gq4Gz.s 			page 34


 226              	.L14:
1663:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1664:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1666:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     return 0U;
 227              		.loc 1 1666 0
 228 0038 0020     		movs	r0, #0
1667:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 229              		.loc 1 1668 0
 230 003a 7047     		bx	lr
 231              	.L16:
 232              		.align	2
 233              	.L15:
 234 003c 1F85EB51 		.word	1374389535
 235              		.cfi_endproc
 236              	.LFE89:
 238              		.section	.text.RTC_WeekDayNum,"ax",%progbits
 239              		.align	2
 240              		.thumb
 241              		.thumb_func
 243              	RTC_WeekDayNum:
 244              	.LFB90:
1669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** /**
1671:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @brief  Determines the week number, the day number and the week day number.
1672:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nYear   year to check
1673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nMonth  Month to check
1674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @param  nDay    Day to check
1675:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @note   Day is calculated with hypothesis that year > 2000
1676:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   * @retval Value which can take one of the following parameters:
1677:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_MONDAY
1678:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_TUESDAY
1679:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_WEDNESDAY
1680:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_THURSDAY
1681:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_FRIDAY
1682:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SATURDAY
1683:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   *         @arg RTC_WEEKDAY_SUNDAY
1684:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   */
1685:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** static uint8_t RTC_WeekDayNum(uint32_t nYear, uint8_t nMonth, uint8_t nDay)
1686:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** {
 245              		.loc 1 1686 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249              		@ link register save eliminated.
 250              	.LVL31:
 251 0000 10B4     		push	{r4}
 252              	.LCFI2:
 253              		.cfi_def_cfa_offset 4
 254              		.cfi_offset 4, -4
 255              	.LVL32:
1687:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, weekday = 0U;
1688:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   year = 2000U + nYear;
 256              		.loc 1 1689 0
 257 0002 00F5FA64 		add	r4, r0, #2000
ARM GAS  /tmp/cc0Gq4Gz.s 			page 35


 258              	.LVL33:
1690:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
1691:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(nMonth < 3U)
 259              		.loc 1 1691 0
 260 0006 0229     		cmp	r1, #2
 261 0008 20D8     		bhi	.L18
1692:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [(year-1)/4] - [(year-1)/100] + [(year-1)/400] } mo
1694:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23U * nMonth)/9U) + nDay + 4U + year + ((year-1U)/4U) - ((year-1U)/100U) + ((year-
 262              		.loc 1 1694 0
 263 000a 01EB4103 		add	r3, r1, r1, lsl #1
 264 000e C1EBC301 		rsb	r1, r1, r3, lsl #3
 265              	.LVL34:
 266 0012 1F4B     		ldr	r3, .L21
 267 0014 A3FB0131 		umull	r3, r1, r3, r1
 268 0018 02EB5102 		add	r2, r2, r1, lsr #1
 269              	.LVL35:
 270 001c 2244     		add	r2, r2, r4
 271 001e 00F2CF70 		addw	r0, r0, #1999
 272              	.LVL36:
 273 0022 02EB9002 		add	r2, r2, r0, lsr #2
 274 0026 1B4B     		ldr	r3, .L21+4
 275 0028 A3FB0013 		umull	r1, r3, r3, r0
 276 002c A2EB5312 		sub	r2, r2, r3, lsr #5
 277 0030 02EBD313 		add	r3, r2, r3, lsr #7
 278 0034 0433     		adds	r3, r3, #4
 279 0036 1848     		ldr	r0, .L21+8
 280              	.LVL37:
 281 0038 A3FB0001 		umull	r0, r1, r3, r0
 282 003c 581A     		subs	r0, r3, r1
 283 003e 01EB5000 		add	r0, r1, r0, lsr #1
 284 0042 8008     		lsrs	r0, r0, #2
 285 0044 C0EBC000 		rsb	r0, r0, r0, lsl #3
 286 0048 181A     		subs	r0, r3, r0
 287              	.LVL38:
 288 004a 1DE0     		b	.L19
 289              	.LVL39:
 290              	.L18:
1695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1696:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   else
1697:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
1698:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /*D = { [(23 x month)/9] + day + 4 + year + [year/4] - [year/100] + [year/400] - 2 } mod 7*/
1699:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     weekday = (((23U * nMonth)/9U) + nDay + 4U + year + (year/4U) - (year/100U) + (year/400U) - 2U 
 291              		.loc 1 1699 0
 292 004c 01EB4103 		add	r3, r1, r1, lsl #1
 293 0050 C1EBC301 		rsb	r1, r1, r3, lsl #3
 294              	.LVL40:
 295 0054 0E4B     		ldr	r3, .L21
 296 0056 A3FB0113 		umull	r1, r3, r3, r1
 297 005a 02EB5302 		add	r2, r2, r3, lsr #1
 298              	.LVL41:
 299 005e 1319     		adds	r3, r2, r4
 300 0060 03EB9402 		add	r2, r3, r4, lsr #2
 301 0064 0B4B     		ldr	r3, .L21+4
 302 0066 A3FB0434 		umull	r3, r4, r3, r4
 303              	.LVL42:
 304 006a A2EB5413 		sub	r3, r2, r4, lsr #5
ARM GAS  /tmp/cc0Gq4Gz.s 			page 36


 305 006e 03EBD413 		add	r3, r3, r4, lsr #7
 306 0072 0233     		adds	r3, r3, #2
 307 0074 0848     		ldr	r0, .L21+8
 308              	.LVL43:
 309 0076 A3FB0001 		umull	r0, r1, r3, r0
 310 007a 581A     		subs	r0, r3, r1
 311 007c 01EB5000 		add	r0, r1, r0, lsr #1
 312 0080 8008     		lsrs	r0, r0, #2
 313 0082 C0EBC000 		rsb	r0, r0, r0, lsl #3
 314 0086 181A     		subs	r0, r3, r0
 315              	.LVL44:
 316              	.L19:
1700:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
1701:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
1702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return (uint8_t)weekday;
1703:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 317              		.loc 1 1703 0
 318 0088 C0B2     		uxtb	r0, r0
 319              	.LVL45:
 320 008a 5DF8044B 		ldr	r4, [sp], #4
 321              	.LCFI3:
 322              		.cfi_restore 4
 323              		.cfi_def_cfa_offset 0
 324 008e 7047     		bx	lr
 325              	.L22:
 326              		.align	2
 327              	.L21:
 328 0090 398EE338 		.word	954437177
 329 0094 1F85EB51 		.word	1374389535
 330 0098 25499224 		.word	613566757
 331              		.cfi_endproc
 332              	.LFE90:
 334              		.section	.text.RTC_DateUpdate,"ax",%progbits
 335              		.align	2
 336              		.thumb
 337              		.thumb_func
 339              	RTC_DateUpdate:
 340              	.LFB88:
1554:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t year = 0U, month = 0U, day = 0U;
 341              		.loc 1 1554 0
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 0
 344              		@ frame_needed = 0, uses_anonymous_args = 0
 345              	.LVL46:
 346 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 347              	.LCFI4:
 348              		.cfi_def_cfa_offset 32
 349              		.cfi_offset 3, -32
 350              		.cfi_offset 4, -28
 351              		.cfi_offset 5, -24
 352              		.cfi_offset 6, -20
 353              		.cfi_offset 7, -16
 354              		.cfi_offset 8, -12
 355              		.cfi_offset 9, -8
 356              		.cfi_offset 14, -4
 357 0004 8046     		mov	r8, r0
 358 0006 0F46     		mov	r7, r1
ARM GAS  /tmp/cc0Gq4Gz.s 			page 37


 359              	.LVL47:
1559:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 360              		.loc 1 1559 0
 361 0008 90F80F90 		ldrb	r9, [r0, #15]	@ zero_extendqisi2
 362              	.LVL48:
1562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   day = hrtc->DateToUpdate.Date;
 363              		.loc 1 1562 0
 364 000c 447B     		ldrb	r4, [r0, #13]	@ zero_extendqisi2
 365              	.LVL49:
1563:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 366              		.loc 1 1563 0
 367 000e 867B     		ldrb	r6, [r0, #14]	@ zero_extendqisi2
 368              	.LVL50:
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 369              		.loc 1 1565 0
 370 0010 0025     		movs	r5, #0
 371 0012 41E0     		b	.L24
 372              	.LVL51:
 373              	.L36:
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (month == 8U) || (month == 10U) || (month == 12U))
 374              		.loc 1 1567 0
 375 0014 012C     		cmp	r4, #1
 376 0016 0BD0     		beq	.L25
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (month == 8U) || (month == 10U) || (month == 12U))
 377              		.loc 1 1567 0 is_stmt 0 discriminator 1
 378 0018 032C     		cmp	r4, #3
 379 001a 09D0     		beq	.L25
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (month == 8U) || (month == 10U) || (month == 12U))
 380              		.loc 1 1567 0 discriminator 2
 381 001c 052C     		cmp	r4, #5
 382 001e 07D0     		beq	.L25
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (month == 8U) || (month == 10U) || (month == 12U))
 383              		.loc 1 1567 0 discriminator 3
 384 0020 072C     		cmp	r4, #7
 385 0022 05D0     		beq	.L25
1567:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        (month == 8U) || (month == 10U) || (month == 12U))
 386              		.loc 1 1567 0 discriminator 4
 387 0024 082C     		cmp	r4, #8
 388 0026 03D0     		beq	.L25
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 389              		.loc 1 1568 0 is_stmt 1
 390 0028 0A2C     		cmp	r4, #10
 391 002a 01D0     		beq	.L25
1568:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 392              		.loc 1 1568 0 is_stmt 0 discriminator 1
 393 002c 0C2C     		cmp	r4, #12
 394 002e 0DD1     		bne	.L26
 395              	.L25:
1570:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 396              		.loc 1 1570 0 is_stmt 1
 397 0030 1E2E     		cmp	r6, #30
 398 0032 01D8     		bhi	.L27
1572:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 399              		.loc 1 1572 0
 400 0034 0136     		adds	r6, r6, #1
 401              	.LVL52:
 402 0036 2EE0     		b	.L28
ARM GAS  /tmp/cc0Gq4Gz.s 			page 38


 403              	.L27:
1577:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 404              		.loc 1 1577 0
 405 0038 0C2C     		cmp	r4, #12
 406 003a 02D0     		beq	.L29
1579:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 407              		.loc 1 1579 0
 408 003c 0134     		adds	r4, r4, #1
 409              	.LVL53:
1580:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 410              		.loc 1 1580 0
 411 003e 0126     		movs	r6, #1
 412 0040 29E0     		b	.L28
 413              	.LVL54:
 414              	.L29:
1587:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 415              		.loc 1 1587 0
 416 0042 09F10109 		add	r9, r9, #1
 417              	.LVL55:
1586:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           year++;
 418              		.loc 1 1586 0
 419 0046 0126     		movs	r6, #1
1585:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 420              		.loc 1 1585 0
 421 0048 3446     		mov	r4, r6
 422 004a 24E0     		b	.L28
 423              	.LVL56:
 424              	.L26:
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 425              		.loc 1 1591 0
 426 004c 042C     		cmp	r4, #4
 427 004e 05D0     		beq	.L30
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 428              		.loc 1 1591 0 is_stmt 0 discriminator 1
 429 0050 062C     		cmp	r4, #6
 430 0052 03D0     		beq	.L30
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 431              		.loc 1 1591 0 discriminator 2
 432 0054 092C     		cmp	r4, #9
 433 0056 01D0     		beq	.L30
1591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 434              		.loc 1 1591 0 discriminator 3
 435 0058 0B2C     		cmp	r4, #11
 436 005a 06D1     		bne	.L31
 437              	.L30:
1593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 438              		.loc 1 1593 0 is_stmt 1
 439 005c 1D2E     		cmp	r6, #29
 440 005e 01D8     		bhi	.L32
1595:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 441              		.loc 1 1595 0
 442 0060 0136     		adds	r6, r6, #1
 443              	.LVL57:
 444 0062 18E0     		b	.L28
 445              	.L32:
1600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
 446              		.loc 1 1600 0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 39


 447 0064 0134     		adds	r4, r4, #1
 448              	.LVL58:
1601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 449              		.loc 1 1601 0
 450 0066 0126     		movs	r6, #1
 451 0068 15E0     		b	.L28
 452              	.LVL59:
 453              	.L31:
1604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 454              		.loc 1 1604 0
 455 006a 022C     		cmp	r4, #2
 456 006c 13D1     		bne	.L28
1606:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 457              		.loc 1 1606 0
 458 006e 1B2E     		cmp	r6, #27
 459 0070 01D8     		bhi	.L33
1608:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 460              		.loc 1 1608 0
 461 0072 0136     		adds	r6, r6, #1
 462              	.LVL60:
 463 0074 0FE0     		b	.L28
 464              	.L33:
1610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 465              		.loc 1 1610 0
 466 0076 1C2E     		cmp	r6, #28
 467 0078 09D1     		bne	.L34
1613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 468              		.loc 1 1613 0
 469 007a 1FFA89F0 		uxth	r0, r9
 470 007e FFF7FEFF 		bl	RTC_IsLeapYear
 471              	.LVL61:
 472 0082 08B1     		cbz	r0, .L35
1615:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 473              		.loc 1 1615 0
 474 0084 0136     		adds	r6, r6, #1
 475              	.LVL62:
 476 0086 06E0     		b	.L28
 477              	.L35:
1619:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           day = 1U;
 478              		.loc 1 1619 0
 479 0088 0134     		adds	r4, r4, #1
 480              	.LVL63:
1620:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 481              		.loc 1 1620 0
 482 008a 0126     		movs	r6, #1
 483 008c 03E0     		b	.L28
 484              	.LVL64:
 485              	.L34:
1623:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 486              		.loc 1 1623 0
 487 008e 1D2E     		cmp	r6, #29
 488 0090 01D1     		bne	.L28
1625:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         day = 1U;
 489              		.loc 1 1625 0
 490 0092 0134     		adds	r4, r4, #1
 491              	.LVL65:
1626:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
ARM GAS  /tmp/cc0Gq4Gz.s 			page 40


 492              		.loc 1 1626 0
 493 0094 0126     		movs	r6, #1
 494              	.LVL66:
 495              	.L28:
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 496              		.loc 1 1565 0 discriminator 2
 497 0096 0135     		adds	r5, r5, #1
 498              	.LVL67:
 499              	.L24:
1565:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 500              		.loc 1 1565 0 is_stmt 0 discriminator 1
 501 0098 BD42     		cmp	r5, r7
 502 009a BBD3     		bcc	.L36
1632:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 503              		.loc 1 1632 0 is_stmt 1
 504 009c 88F80F90 		strb	r9, [r8, #15]
1635:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   hrtc->DateToUpdate.Date = day;
 505              		.loc 1 1635 0
 506 00a0 E1B2     		uxtb	r1, r4
 507 00a2 88F80D10 		strb	r1, [r8, #13]
1636:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 508              		.loc 1 1636 0
 509 00a6 F2B2     		uxtb	r2, r6
 510 00a8 88F80E20 		strb	r2, [r8, #14]
1639:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 511              		.loc 1 1639 0
 512 00ac 4846     		mov	r0, r9
 513 00ae FFF7FEFF 		bl	RTC_WeekDayNum
 514              	.LVL68:
 515 00b2 88F80C00 		strb	r0, [r8, #12]
 516 00b6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 517              		.cfi_endproc
 518              	.LFE88:
 520              		.section	.text.RTC_EnterInitMode,"ax",%progbits
 521              		.align	2
 522              		.thumb
 523              		.thumb_func
 525              	RTC_EnterInitMode:
 526              	.LFB84:
1470:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 527              		.loc 1 1470 0
 528              		.cfi_startproc
 529              		@ args = 0, pretend = 0, frame = 0
 530              		@ frame_needed = 0, uses_anonymous_args = 0
 531              	.LVL69:
 532 0000 38B5     		push	{r3, r4, r5, lr}
 533              	.LCFI5:
 534              		.cfi_def_cfa_offset 16
 535              		.cfi_offset 3, -16
 536              		.cfi_offset 4, -12
 537              		.cfi_offset 5, -8
 538              		.cfi_offset 14, -4
 539 0002 0446     		mov	r4, r0
 540              	.LVL70:
1473:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
 541              		.loc 1 1473 0
 542 0004 FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /tmp/cc0Gq4Gz.s 			page 41


 543              	.LVL71:
 544 0008 0546     		mov	r5, r0
 545              	.LVL72:
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 546              		.loc 1 1475 0
 547 000a 05E0     		b	.L39
 548              	.LVL73:
 549              	.L41:
1477:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 550              		.loc 1 1477 0
 551 000c FFF7FEFF 		bl	HAL_GetTick
 552              	.LVL74:
 553 0010 401B     		subs	r0, r0, r5
 554 0012 B0F57A7F 		cmp	r0, #1000
 555 0016 0AD8     		bhi	.L42
 556              	.L39:
1475:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 557              		.loc 1 1475 0
 558 0018 2368     		ldr	r3, [r4]
 559 001a 5A68     		ldr	r2, [r3, #4]
 560 001c 12F0200F 		tst	r2, #32
 561 0020 F4D0     		beq	.L41
1484:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 562              		.loc 1 1484 0
 563 0022 5A68     		ldr	r2, [r3, #4]
 564 0024 42F01002 		orr	r2, r2, #16
 565 0028 5A60     		str	r2, [r3, #4]
1487:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 566              		.loc 1 1487 0
 567 002a 0020     		movs	r0, #0
 568 002c 38BD     		pop	{r3, r4, r5, pc}
 569              	.LVL75:
 570              	.L42:
1479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
 571              		.loc 1 1479 0
 572 002e 0320     		movs	r0, #3
1488:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 573              		.loc 1 1488 0
 574 0030 38BD     		pop	{r3, r4, r5, pc}
 575              		.cfi_endproc
 576              	.LFE84:
 578 0032 00BF     		.section	.text.RTC_ExitInitMode,"ax",%progbits
 579              		.align	2
 580              		.thumb
 581              		.thumb_func
 583              	RTC_ExitInitMode:
 584              	.LFB85:
1497:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 585              		.loc 1 1497 0
 586              		.cfi_startproc
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              	.LVL76:
 590 0000 38B5     		push	{r3, r4, r5, lr}
 591              	.LCFI6:
 592              		.cfi_def_cfa_offset 16
 593              		.cfi_offset 3, -16
ARM GAS  /tmp/cc0Gq4Gz.s 			page 42


 594              		.cfi_offset 4, -12
 595              		.cfi_offset 5, -8
 596              		.cfi_offset 14, -4
 597 0002 0446     		mov	r4, r0
 598              	.LVL77:
1501:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 599              		.loc 1 1501 0
 600 0004 0268     		ldr	r2, [r0]
 601 0006 5368     		ldr	r3, [r2, #4]
 602 0008 23F01003 		bic	r3, r3, #16
 603 000c 5360     		str	r3, [r2, #4]
1503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Wait till RTC is in INIT state and if Time out is reached exit */
 604              		.loc 1 1503 0
 605 000e FFF7FEFF 		bl	HAL_GetTick
 606              	.LVL78:
 607 0012 0546     		mov	r5, r0
 608              	.LVL79:
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 609              		.loc 1 1505 0
 610 0014 05E0     		b	.L45
 611              	.LVL80:
 612              	.L47:
1507:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 613              		.loc 1 1507 0
 614 0016 FFF7FEFF 		bl	HAL_GetTick
 615              	.LVL81:
 616 001a 401B     		subs	r0, r0, r5
 617 001c B0F57A7F 		cmp	r0, #1000
 618 0020 06D8     		bhi	.L48
 619              	.L45:
1505:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 620              		.loc 1 1505 0
 621 0022 2368     		ldr	r3, [r4]
 622 0024 5B68     		ldr	r3, [r3, #4]
 623 0026 13F0200F 		tst	r3, #32
 624 002a F4D0     		beq	.L47
1513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 625              		.loc 1 1513 0
 626 002c 0020     		movs	r0, #0
 627 002e 38BD     		pop	{r3, r4, r5, pc}
 628              	.LVL82:
 629              	.L48:
1509:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
 630              		.loc 1 1509 0
 631 0030 0320     		movs	r0, #3
1514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 632              		.loc 1 1514 0
 633 0032 38BD     		pop	{r3, r4, r5, pc}
 634              		.cfi_endproc
 635              	.LFE85:
 637              		.section	.text.RTC_WriteTimeCounter,"ax",%progbits
 638              		.align	2
 639              		.thumb
 640              		.thumb_func
 642              	RTC_WriteTimeCounter:
 643              	.LFB81:
1389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
ARM GAS  /tmp/cc0Gq4Gz.s 			page 43


 644              		.loc 1 1389 0
 645              		.cfi_startproc
 646              		@ args = 0, pretend = 0, frame = 0
 647              		@ frame_needed = 0, uses_anonymous_args = 0
 648              	.LVL83:
 649 0000 38B5     		push	{r3, r4, r5, lr}
 650              	.LCFI7:
 651              		.cfi_def_cfa_offset 16
 652              		.cfi_offset 3, -16
 653              		.cfi_offset 4, -12
 654              		.cfi_offset 5, -8
 655              		.cfi_offset 14, -4
 656 0002 0546     		mov	r5, r0
 657 0004 0C46     		mov	r4, r1
 658              	.LVL84:
1393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 659              		.loc 1 1393 0
 660 0006 FFF7FEFF 		bl	RTC_EnterInitMode
 661              	.LVL85:
 662 000a 50B9     		cbnz	r0, .L52
1400:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
 663              		.loc 1 1400 0
 664 000c 2B68     		ldr	r3, [r5]
 665 000e 220C     		lsrs	r2, r4, #16
 666 0010 9A61     		str	r2, [r3, #24]
1402:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 667              		.loc 1 1402 0
 668 0012 2B68     		ldr	r3, [r5]
 669 0014 A4B2     		uxth	r4, r4
 670              	.LVL86:
 671 0016 DC61     		str	r4, [r3, #28]
1405:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 672              		.loc 1 1405 0
 673 0018 2846     		mov	r0, r5
 674 001a FFF7FEFF 		bl	RTC_ExitInitMode
 675              	.LVL87:
 676 001e 10B9     		cbnz	r0, .L53
 677 0020 38BD     		pop	{r3, r4, r5, pc}
 678              	.LVL88:
 679              	.L52:
1395:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 680              		.loc 1 1395 0
 681 0022 0120     		movs	r0, #1
 682 0024 38BD     		pop	{r3, r4, r5, pc}
 683              	.LVL89:
 684              	.L53:
1407:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 685              		.loc 1 1407 0
 686 0026 0120     		movs	r0, #1
 687              	.LVL90:
1412:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 688              		.loc 1 1412 0
 689 0028 38BD     		pop	{r3, r4, r5, pc}
 690              		.cfi_endproc
 691              	.LFE81:
 693 002a 00BF     		.section	.text.RTC_WriteAlarmCounter,"ax",%progbits
 694              		.align	2
ARM GAS  /tmp/cc0Gq4Gz.s 			page 44


 695              		.thumb
 696              		.thumb_func
 698              	RTC_WriteAlarmCounter:
 699              	.LFB83:
1438:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   HAL_StatusTypeDef status = HAL_OK;
 700              		.loc 1 1438 0
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 0, uses_anonymous_args = 0
 704              	.LVL91:
 705 0000 38B5     		push	{r3, r4, r5, lr}
 706              	.LCFI8:
 707              		.cfi_def_cfa_offset 16
 708              		.cfi_offset 3, -16
 709              		.cfi_offset 4, -12
 710              		.cfi_offset 5, -8
 711              		.cfi_offset 14, -4
 712 0002 0546     		mov	r5, r0
 713 0004 0C46     		mov	r4, r1
 714              	.LVL92:
1442:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 715              		.loc 1 1442 0
 716 0006 FFF7FEFF 		bl	RTC_EnterInitMode
 717              	.LVL93:
 718 000a 50B9     		cbnz	r0, .L57
1449:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Set RTC COUNTER LSB word */
 719              		.loc 1 1449 0
 720 000c 2B68     		ldr	r3, [r5]
 721 000e 220C     		lsrs	r2, r4, #16
 722 0010 1A62     		str	r2, [r3, #32]
1451:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 723              		.loc 1 1451 0
 724 0012 2B68     		ldr	r3, [r5]
 725 0014 A4B2     		uxth	r4, r4
 726              	.LVL94:
 727 0016 5C62     		str	r4, [r3, #36]
1454:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 728              		.loc 1 1454 0
 729 0018 2846     		mov	r0, r5
 730 001a FFF7FEFF 		bl	RTC_ExitInitMode
 731              	.LVL95:
 732 001e 10B9     		cbnz	r0, .L58
 733 0020 38BD     		pop	{r3, r4, r5, pc}
 734              	.LVL96:
 735              	.L57:
1444:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 736              		.loc 1 1444 0
 737 0022 0120     		movs	r0, #1
 738 0024 38BD     		pop	{r3, r4, r5, pc}
 739              	.LVL97:
 740              	.L58:
1456:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 741              		.loc 1 1456 0
 742 0026 0120     		movs	r0, #1
 743              	.LVL98:
1461:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 744              		.loc 1 1461 0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 45


 745 0028 38BD     		pop	{r3, r4, r5, pc}
 746              		.cfi_endproc
 747              	.LFE83:
 749 002a 00BF     		.section	.text.HAL_RTC_MspInit,"ax",%progbits
 750              		.align	2
 751              		.weak	HAL_RTC_MspInit
 752              		.thumb
 753              		.thumb_func
 755              	HAL_RTC_MspInit:
 756              	.LFB65:
 426:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 757              		.loc 1 426 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 0
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              		@ link register save eliminated.
 762              	.LVL99:
 763 0000 7047     		bx	lr
 764              		.cfi_endproc
 765              	.LFE65:
 767 0002 00BF     		.section	.text.HAL_RTC_MspDeInit,"ax",%progbits
 768              		.align	2
 769              		.weak	HAL_RTC_MspDeInit
 770              		.thumb
 771              		.thumb_func
 773              	HAL_RTC_MspDeInit:
 774              	.LFB66:
 441:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 775              		.loc 1 441 0
 776              		.cfi_startproc
 777              		@ args = 0, pretend = 0, frame = 0
 778              		@ frame_needed = 0, uses_anonymous_args = 0
 779              		@ link register save eliminated.
 780              	.LVL100:
 781 0000 7047     		bx	lr
 782              		.cfi_endproc
 783              	.LFE66:
 785 0002 00BF     		.section	.text.HAL_RTC_SetTime,"ax",%progbits
 786              		.align	2
 787              		.global	HAL_RTC_SetTime
 788              		.thumb
 789              		.thumb_func
 791              	HAL_RTC_SetTime:
 792              	.LFB67:
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 793              		.loc 1 479 0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              	.LVL101:
 479:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U;
 798              		.loc 1 479 0
 799 0000 70B5     		push	{r4, r5, r6, lr}
 800              	.LCFI9:
 801              		.cfi_def_cfa_offset 16
 802              		.cfi_offset 4, -16
 803              		.cfi_offset 5, -12
ARM GAS  /tmp/cc0Gq4Gz.s 			page 46


 804              		.cfi_offset 6, -8
 805              		.cfi_offset 14, -4
 806              	.LVL102:
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 807              		.loc 1 483 0
 808 0002 0028     		cmp	r0, #0
 809 0004 56D0     		beq	.L68
 810 0006 0446     		mov	r4, r0
 483:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 811              		.loc 1 483 0 is_stmt 0 discriminator 1
 812 0008 0029     		cmp	r1, #0
 813 000a 55D0     		beq	.L69
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 814              		.loc 1 492 0 is_stmt 1
 815 000c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 816 000e 012B     		cmp	r3, #1
 817 0010 54D0     		beq	.L70
 818 0012 0E46     		mov	r6, r1
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 819              		.loc 1 492 0 is_stmt 0 discriminator 2
 820 0014 0123     		movs	r3, #1
 821 0016 0374     		strb	r3, [r0, #16]
 494:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 822              		.loc 1 494 0 is_stmt 1 discriminator 2
 823 0018 0223     		movs	r3, #2
 824 001a 4374     		strb	r3, [r0, #17]
 496:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 825              		.loc 1 496 0 discriminator 2
 826 001c 5AB9     		cbnz	r2, .L64
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Minutes * 60U) + \
 827              		.loc 1 502 0
 828 001e 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 829              	.LVL103:
 503:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Seconds));  
 830              		.loc 1 503 0
 831 0020 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 832 0022 C3EB0313 		rsb	r3, r3, r3, lsl #4
 833 0026 9B00     		lsls	r3, r3, #2
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Minutes * 60U) + \
 834              		.loc 1 502 0
 835 0028 4FF46165 		mov	r5, #3600
 836 002c 05FB0235 		mla	r5, r5, r2, r3
 504:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 837              		.loc 1 504 0
 838 0030 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 502:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sTime->Minutes * 60U) + \
 839              		.loc 1 502 0
 840 0032 1D44     		add	r5, r5, r3
 841              	.LVL104:
 842 0034 11E0     		b	.L65
 843              	.LVL105:
 844              	.L64:
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 845              		.loc 1 512 0
 846 0036 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 847              	.LVL106:
 848 0038 FFF7FEFF 		bl	RTC_Bcd2ToByte
ARM GAS  /tmp/cc0Gq4Gz.s 			page 47


 849              	.LVL107:
 850 003c 4FF46165 		mov	r5, #3600
 851 0040 05FB00F5 		mul	r5, r5, r0
 513:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Seconds))));   
 852              		.loc 1 513 0
 853 0044 7078     		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 854 0046 FFF7FEFF 		bl	RTC_Bcd2ToByte
 855              	.LVL108:
 856 004a C0EB0010 		rsb	r0, r0, r0, lsl #4
 857 004e 8000     		lsls	r0, r0, #2
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 858              		.loc 1 512 0
 859 0050 0544     		add	r5, r5, r0
 514:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 860              		.loc 1 514 0
 861 0052 B078     		ldrb	r0, [r6, #2]	@ zero_extendqisi2
 862 0054 FFF7FEFF 		bl	RTC_Bcd2ToByte
 863              	.LVL109:
 512:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sTime->Minutes)) * 60U) + \
 864              		.loc 1 512 0
 865 0058 0544     		add	r5, r5, r0
 866              	.LVL110:
 867              	.L65:
 518:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 868              		.loc 1 518 0
 869 005a 2046     		mov	r0, r4
 870 005c 2946     		mov	r1, r5
 871 005e FFF7FEFF 		bl	RTC_WriteTimeCounter
 872              	.LVL111:
 873 0062 0646     		mov	r6, r0
 874              	.LVL112:
 875 0064 28B1     		cbz	r0, .L66
 521:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 876              		.loc 1 521 0
 877 0066 0423     		movs	r3, #4
 878 0068 6374     		strb	r3, [r4, #17]
 524:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 879              		.loc 1 524 0
 880 006a 0023     		movs	r3, #0
 881 006c 2374     		strb	r3, [r4, #16]
 526:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 882              		.loc 1 526 0
 883 006e 0126     		movs	r6, #1
 884 0070 25E0     		b	.L63
 885              	.L66:
 531:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 886              		.loc 1 531 0
 887 0072 2268     		ldr	r2, [r4]
 888 0074 5368     		ldr	r3, [r2, #4]
 889 0076 23F00503 		bic	r3, r3, #5
 890 007a 5360     		str	r3, [r2, #4]
 534:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 891              		.loc 1 534 0
 892 007c 2046     		mov	r0, r4
 893 007e FFF7FEFF 		bl	RTC_ReadAlarmCounter
 894              	.LVL113:
 895 0082 0146     		mov	r1, r0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 48


 896              	.LVL114:
 537:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 897              		.loc 1 537 0
 898 0084 B0F1FF3F 		cmp	r0, #-1
 899 0088 0FD0     		beq	.L67
 539:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 900              		.loc 1 539 0
 901 008a A842     		cmp	r0, r5
 902 008c 0DD2     		bcs	.L67
 903              	.LVL115:
 545:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 904              		.loc 1 545 0
 905 008e 2046     		mov	r0, r4
 906              	.LVL116:
 907 0090 01F5A831 		add	r1, r1, #86016
 908              	.LVL117:
 909 0094 01F5C071 		add	r1, r1, #384
 910              	.LVL118:
 911 0098 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 912              	.LVL119:
 913 009c 28B1     		cbz	r0, .L67
 548:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 914              		.loc 1 548 0
 915 009e 0423     		movs	r3, #4
 916 00a0 6374     		strb	r3, [r4, #17]
 551:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 917              		.loc 1 551 0
 918 00a2 0023     		movs	r3, #0
 919 00a4 2374     		strb	r3, [r4, #16]
 553:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 920              		.loc 1 553 0
 921 00a6 0126     		movs	r6, #1
 922 00a8 09E0     		b	.L63
 923              	.L67:
 558:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 924              		.loc 1 558 0
 925 00aa 0123     		movs	r3, #1
 926 00ac 6374     		strb	r3, [r4, #17]
 560:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 927              		.loc 1 560 0
 928 00ae 0023     		movs	r3, #0
 929 00b0 2374     		strb	r3, [r4, #16]
 562:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 930              		.loc 1 562 0
 931 00b2 04E0     		b	.L63
 932              	.LVL120:
 933              	.L68:
 485:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 934              		.loc 1 485 0
 935 00b4 0126     		movs	r6, #1
 936 00b6 02E0     		b	.L63
 937              	.L69:
 938 00b8 0126     		movs	r6, #1
 939 00ba 00E0     		b	.L63
 940              	.L70:
 492:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 941              		.loc 1 492 0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 49


 942 00bc 0226     		movs	r6, #2
 943              	.LVL121:
 944              	.L63:
 564:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 945              		.loc 1 564 0
 946 00be 3046     		mov	r0, r6
 947 00c0 70BD     		pop	{r4, r5, r6, pc}
 948              		.cfi_endproc
 949              	.LFE67:
 951 00c2 00BF     		.section	.text.HAL_RTC_GetTime,"ax",%progbits
 952              		.align	2
 953              		.global	HAL_RTC_GetTime
 954              		.thumb
 955              		.thumb_func
 957              	HAL_RTC_GetTime:
 958              	.LFB68:
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 959              		.loc 1 578 0
 960              		.cfi_startproc
 961              		@ args = 0, pretend = 0, frame = 0
 962              		@ frame_needed = 0, uses_anonymous_args = 0
 963              	.LVL122:
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 964              		.loc 1 582 0
 965 0000 0028     		cmp	r0, #0
 966 0002 67D0     		beq	.L79
 578:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, days_elapsed = 0U, hours = 0U;
 967              		.loc 1 578 0 discriminator 1
 968 0004 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 969              	.LCFI10:
 970              		.cfi_def_cfa_offset 32
 971              		.cfi_offset 3, -32
 972              		.cfi_offset 4, -28
 973              		.cfi_offset 5, -24
 974              		.cfi_offset 6, -20
 975              		.cfi_offset 7, -16
 976              		.cfi_offset 8, -12
 977              		.cfi_offset 9, -8
 978              		.cfi_offset 14, -4
 979 0008 0546     		mov	r5, r0
 582:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 980              		.loc 1 582 0 discriminator 1
 981 000a 0029     		cmp	r1, #0
 982 000c 64D0     		beq	.L80
 591:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 983              		.loc 1 591 0
 984 000e 0368     		ldr	r3, [r0]
 985 0010 5B68     		ldr	r3, [r3, #4]
 986 0012 13F0040F 		tst	r3, #4
 987 0016 62D1     		bne	.L81
 988 0018 1646     		mov	r6, r2
 989 001a 0C46     		mov	r4, r1
 597:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 990              		.loc 1 597 0
 991 001c FFF7FEFF 		bl	RTC_ReadTimeCounter
 992              	.LVL123:
 993 0020 0746     		mov	r7, r0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 50


 994              	.LVL124:
 600:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Minutes  = (uint8_t)((counter_time % 3600U) / 60U);
 995              		.loc 1 600 0
 996 0022 364A     		ldr	r2, .L88
 997 0024 A2FB0032 		umull	r3, r2, r2, r0
 998 0028 D20A     		lsrs	r2, r2, #11
 999              	.LVL125:
 601:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sTime->Seconds  = (uint8_t)((counter_time % 3600U) % 60U);
 1000              		.loc 1 601 0
 1001 002a 4FF46161 		mov	r1, #3600
 1002 002e 01FB1201 		mls	r1, r1, r2, r0
 1003 0032 334B     		ldr	r3, .L88+4
 1004 0034 A3FB0103 		umull	r0, r3, r3, r1
 1005              	.LVL126:
 1006 0038 5B09     		lsrs	r3, r3, #5
 1007 003a 6370     		strb	r3, [r4, #1]
 602:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1008              		.loc 1 602 0
 1009 003c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1010 0040 9B00     		lsls	r3, r3, #2
 1011 0042 C81A     		subs	r0, r1, r3
 1012 0044 A070     		strb	r0, [r4, #2]
 604:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1013              		.loc 1 604 0
 1014 0046 172A     		cmp	r2, #23
 1015 0048 33D9     		bls	.L74
 607:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1016              		.loc 1 607 0
 1017 004a 2E4B     		ldr	r3, .L88+8
 1018 004c A3FB0238 		umull	r3, r8, r3, r2
 1019 0050 4FEA1818 		lsr	r8, r8, #4
 1020              	.LVL127:
 610:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1021              		.loc 1 610 0
 1022 0054 08EB4803 		add	r3, r8, r8, lsl #1
 1023 0058 DB00     		lsls	r3, r3, #3
 1024 005a D31A     		subs	r3, r2, r3
 1025 005c 2370     		strb	r3, [r4]
 613:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1026              		.loc 1 613 0
 1027 005e 2846     		mov	r0, r5
 1028 0060 FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1029              	.LVL128:
 1030 0064 8146     		mov	r9, r0
 1031              	.LVL129:
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1032              		.loc 1 616 0
 1033 0066 B0F1FF3F 		cmp	r0, #-1
 1034 006a 06D0     		beq	.L75
 616:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1035              		.loc 1 616 0 is_stmt 0 discriminator 1
 1036 006c B842     		cmp	r0, r7
 1037 006e 02D9     		bls	.L82
 618:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1038              		.loc 1 618 0 is_stmt 1
 1039 0070 C7EB0009 		rsb	r9, r7, r0
 1040              	.LVL130:
ARM GAS  /tmp/cc0Gq4Gz.s 			page 51


 1041 0074 01E0     		b	.L75
 1042              	.LVL131:
 1043              	.L82:
 624:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1044              		.loc 1 624 0
 1045 0076 4FF0FF39 		mov	r9, #-1
 1046              	.LVL132:
 1047              	.L75:
 628:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 1048              		.loc 1 628 0
 1049 007a 234B     		ldr	r3, .L88+12
 1050 007c 03FB1877 		mls	r7, r3, r8, r7
 1051              	.LVL133:
 631:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1052              		.loc 1 631 0
 1053 0080 2846     		mov	r0, r5
 1054 0082 3946     		mov	r1, r7
 1055 0084 FFF7FEFF 		bl	RTC_WriteTimeCounter
 1056              	.LVL134:
 1057 0088 60BB     		cbnz	r0, .L83
 637:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1058              		.loc 1 637 0
 1059 008a B9F1FF3F 		cmp	r9, #-1
 1060 008e 06D0     		beq	.L76
 1061              	.LVL135:
 642:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1062              		.loc 1 642 0
 1063 0090 2846     		mov	r0, r5
 1064 0092 09EB0701 		add	r1, r9, r7
 1065              	.LVL136:
 1066 0096 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1067              	.LVL137:
 1068 009a 28B1     		cbz	r0, .L77
 1069 009c 25E0     		b	.L84
 1070              	.LVL138:
 1071              	.L76:
 650:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1072              		.loc 1 650 0
 1073 009e 2846     		mov	r0, r5
 1074 00a0 4946     		mov	r1, r9
 1075 00a2 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1076              	.LVL139:
 1077 00a6 18BB     		cbnz	r0, .L85
 1078              	.LVL140:
 1079              	.L77:
 657:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1080              		.loc 1 657 0
 1081 00a8 2846     		mov	r0, r5
 1082 00aa 4146     		mov	r1, r8
 1083 00ac FFF7FEFF 		bl	RTC_DateUpdate
 1084              	.LVL141:
 1085 00b0 00E0     		b	.L78
 1086              	.LVL142:
 1087              	.L74:
 661:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1088              		.loc 1 661 0
 1089 00b2 2270     		strb	r2, [r4]
ARM GAS  /tmp/cc0Gq4Gz.s 			page 52


 1090              	.LVL143:
 1091              	.L78:
 665:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1092              		.loc 1 665 0
 1093 00b4 FEB1     		cbz	r6, .L86
 668:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Minutes  = (uint8_t)RTC_ByteToBcd2(sTime->Minutes);
 1094              		.loc 1 668 0
 1095 00b6 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1096 00b8 FFF7FEFF 		bl	RTC_ByteToBcd2
 1097              	.LVL144:
 1098 00bc 2070     		strb	r0, [r4]
 669:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sTime->Seconds  = (uint8_t)RTC_ByteToBcd2(sTime->Seconds);  
 1099              		.loc 1 669 0
 1100 00be 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1101 00c0 FFF7FEFF 		bl	RTC_ByteToBcd2
 1102              	.LVL145:
 1103 00c4 6070     		strb	r0, [r4, #1]
 670:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1104              		.loc 1 670 0
 1105 00c6 A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1106 00c8 FFF7FEFF 		bl	RTC_ByteToBcd2
 1107              	.LVL146:
 1108 00cc A070     		strb	r0, [r4, #2]
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1109              		.loc 1 673 0
 1110 00ce 0020     		movs	r0, #0
 1111 00d0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1112              	.LVL147:
 1113              	.L79:
 1114              	.LCFI11:
 1115              		.cfi_def_cfa_offset 0
 1116              		.cfi_restore 3
 1117              		.cfi_restore 4
 1118              		.cfi_restore 5
 1119              		.cfi_restore 6
 1120              		.cfi_restore 7
 1121              		.cfi_restore 8
 1122              		.cfi_restore 9
 1123              		.cfi_restore 14
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1124              		.loc 1 584 0
 1125 00d4 0120     		movs	r0, #1
 1126              	.LVL148:
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1127              		.loc 1 674 0
 1128 00d6 7047     		bx	lr
 1129              	.LVL149:
 1130              	.L80:
 1131              	.LCFI12:
 1132              		.cfi_def_cfa_offset 32
 1133              		.cfi_offset 3, -32
 1134              		.cfi_offset 4, -28
 1135              		.cfi_offset 5, -24
 1136              		.cfi_offset 6, -20
 1137              		.cfi_offset 7, -16
 1138              		.cfi_offset 8, -12
 1139              		.cfi_offset 9, -8
ARM GAS  /tmp/cc0Gq4Gz.s 			page 53


 1140              		.cfi_offset 14, -4
 584:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1141              		.loc 1 584 0
 1142 00d8 0120     		movs	r0, #1
 1143              	.LVL150:
 1144 00da BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1145              	.LVL151:
 1146              	.L81:
 593:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1147              		.loc 1 593 0
 1148 00de 0120     		movs	r0, #1
 1149              	.LVL152:
 1150 00e0 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1151              	.LVL153:
 1152              	.L83:
 633:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1153              		.loc 1 633 0
 1154 00e4 0120     		movs	r0, #1
 1155 00e6 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1156              	.LVL154:
 1157              	.L84:
 644:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 1158              		.loc 1 644 0
 1159 00ea 0120     		movs	r0, #1
 1160 00ec BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1161              	.LVL155:
 1162              	.L85:
 652:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 1163              		.loc 1 652 0
 1164 00f0 0120     		movs	r0, #1
 1165 00f2 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1166              	.LVL156:
 1167              	.L86:
 673:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1168              		.loc 1 673 0
 1169 00f6 0020     		movs	r0, #0
 674:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1170              		.loc 1 674 0
 1171 00f8 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 1172              	.LVL157:
 1173              	.L89:
 1174              		.align	2
 1175              	.L88:
 1176 00fc C5B3A291 		.word	-1851608123
 1177 0100 89888888 		.word	-2004318071
 1178 0104 ABAAAAAA 		.word	-1431655765
 1179 0108 80510100 		.word	86400
 1180              		.cfi_endproc
 1181              	.LFE68:
 1183              		.section	.text.HAL_RTC_SetDate,"ax",%progbits
 1184              		.align	2
 1185              		.global	HAL_RTC_SetDate
 1186              		.thumb
 1187              		.thumb_func
 1189              	HAL_RTC_SetDate:
 1190              	.LFB69:
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
ARM GAS  /tmp/cc0Gq4Gz.s 			page 54


 1191              		.loc 1 689 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              	.LVL158:
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1196              		.loc 1 693 0
 1197 0000 0028     		cmp	r0, #0
 1198 0002 5DD0     		beq	.L96
 689:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_time = 0U, counter_alarm = 0U, hours = 0U;
 1199              		.loc 1 689 0 discriminator 1
 1200 0004 38B5     		push	{r3, r4, r5, lr}
 1201              	.LCFI13:
 1202              		.cfi_def_cfa_offset 16
 1203              		.cfi_offset 3, -16
 1204              		.cfi_offset 4, -12
 1205              		.cfi_offset 5, -8
 1206              		.cfi_offset 14, -4
 1207 0006 0446     		mov	r4, r0
 693:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1208              		.loc 1 693 0 discriminator 1
 1209 0008 0029     		cmp	r1, #0
 1210 000a 5BD0     		beq	.L97
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1211              		.loc 1 702 0
 1212 000c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 1213 000e 012B     		cmp	r3, #1
 1214 0010 5AD0     		beq	.L98
 1215 0012 0D46     		mov	r5, r1
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1216              		.loc 1 702 0 is_stmt 0 discriminator 2
 1217 0014 0123     		movs	r3, #1
 1218 0016 0374     		strb	r3, [r0, #16]
 704:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1219              		.loc 1 704 0 is_stmt 1 discriminator 2
 1220 0018 0223     		movs	r3, #2
 1221 001a 4374     		strb	r3, [r0, #17]
 706:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {   
 1222              		.loc 1 706 0 discriminator 2
 1223 001c 32B9     		cbnz	r2, .L92
 713:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = sDate->Month;
 1224              		.loc 1 713 0
 1225 001e CB78     		ldrb	r3, [r1, #3]	@ zero_extendqisi2
 1226 0020 C373     		strb	r3, [r0, #15]
 714:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = sDate->Date;
 1227              		.loc 1 714 0
 1228 0022 4B78     		ldrb	r3, [r1, #1]	@ zero_extendqisi2
 1229 0024 4373     		strb	r3, [r0, #13]
 715:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1230              		.loc 1 715 0
 1231 0026 8B78     		ldrb	r3, [r1, #2]	@ zero_extendqisi2
 1232 0028 8373     		strb	r3, [r0, #14]
 1233 002a 0BE0     		b	.L93
 1234              	.L92:
 724:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_Bcd2ToByte(sDate->Month);
 1235              		.loc 1 724 0
 1236 002c C878     		ldrb	r0, [r1, #3]	@ zero_extendqisi2
ARM GAS  /tmp/cc0Gq4Gz.s 			page 55


 1237              	.LVL159:
 1238 002e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1239              	.LVL160:
 1240 0032 E073     		strb	r0, [r4, #15]
 725:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date  = RTC_Bcd2ToByte(sDate->Date);
 1241              		.loc 1 725 0
 1242 0034 6878     		ldrb	r0, [r5, #1]	@ zero_extendqisi2
 1243 0036 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1244              	.LVL161:
 1245 003a 6073     		strb	r0, [r4, #13]
 726:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1246              		.loc 1 726 0
 1247 003c A878     		ldrb	r0, [r5, #2]	@ zero_extendqisi2
 1248 003e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1249              	.LVL162:
 1250 0042 A073     		strb	r0, [r4, #14]
 1251              	.L93:
 730:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->WeekDay = hrtc->DateToUpdate.WeekDay;
 1252              		.loc 1 730 0
 1253 0044 E07B     		ldrb	r0, [r4, #15]	@ zero_extendqisi2
 1254 0046 617B     		ldrb	r1, [r4, #13]	@ zero_extendqisi2
 1255 0048 A27B     		ldrb	r2, [r4, #14]	@ zero_extendqisi2
 1256 004a FFF7FEFF 		bl	RTC_WeekDayNum
 1257              	.LVL163:
 1258 004e 2073     		strb	r0, [r4, #12]
 731:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1259              		.loc 1 731 0
 1260 0050 2870     		strb	r0, [r5]
 735:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1261              		.loc 1 735 0
 1262 0052 2046     		mov	r0, r4
 1263 0054 FFF7FEFF 		bl	RTC_ReadTimeCounter
 1264              	.LVL164:
 738:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if (hours > 24U)
 1265              		.loc 1 738 0
 1266 0058 1C4B     		ldr	r3, .L100
 1267 005a A3FB0023 		umull	r2, r3, r3, r0
 1268 005e DB0A     		lsrs	r3, r3, #11
 1269              	.LVL165:
 739:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1270              		.loc 1 739 0
 1271 0060 182B     		cmp	r3, #24
 1272 0062 28D9     		bls	.L94
 742:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     /* Write time counter in RTC registers */
 1273              		.loc 1 742 0
 1274 0064 1A4D     		ldr	r5, .L100+4
 1275              	.LVL166:
 1276 0066 A5FB0323 		umull	r2, r3, r5, r3
 1277              	.LVL167:
 1278 006a 1B09     		lsrs	r3, r3, #4
 1279 006c 194D     		ldr	r5, .L100+8
 1280 006e 05FB1305 		mls	r5, r5, r3, r0
 1281              	.LVL168:
 744:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1282              		.loc 1 744 0
 1283 0072 2046     		mov	r0, r4
 1284              	.LVL169:
ARM GAS  /tmp/cc0Gq4Gz.s 			page 56


 1285 0074 2946     		mov	r1, r5
 1286 0076 FFF7FEFF 		bl	RTC_WriteTimeCounter
 1287              	.LVL170:
 1288 007a 28B1     		cbz	r0, .L95
 747:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 1289              		.loc 1 747 0
 1290 007c 0423     		movs	r3, #4
 1291 007e 6374     		strb	r3, [r4, #17]
 750:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 1292              		.loc 1 750 0
 1293 0080 0023     		movs	r3, #0
 1294 0082 2374     		strb	r3, [r4, #16]
 752:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 1295              		.loc 1 752 0
 1296 0084 0120     		movs	r0, #1
 1297 0086 38BD     		pop	{r3, r4, r5, pc}
 1298              	.LVL171:
 1299              	.L95:
 756:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1300              		.loc 1 756 0
 1301 0088 2046     		mov	r0, r4
 1302 008a FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1303              	.LVL172:
 1304 008e 0146     		mov	r1, r0
 1305              	.LVL173:
 759:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 1306              		.loc 1 759 0
 1307 0090 B0F1FF3F 		cmp	r0, #-1
 1308 0094 0FD0     		beq	.L94
 761:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 1309              		.loc 1 761 0
 1310 0096 A842     		cmp	r0, r5
 1311 0098 0DD2     		bcs	.L94
 1312              	.LVL174:
 767:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         {
 1313              		.loc 1 767 0
 1314 009a 2046     		mov	r0, r4
 1315              	.LVL175:
 1316 009c 01F5A831 		add	r1, r1, #86016
 1317              	.LVL176:
 1318 00a0 01F5C071 		add	r1, r1, #384
 1319              	.LVL177:
 1320 00a4 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1321              	.LVL178:
 1322 00a8 28B1     		cbz	r0, .L94
 770:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 1323              		.loc 1 770 0
 1324 00aa 0423     		movs	r3, #4
 1325 00ac 6374     		strb	r3, [r4, #17]
 773:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****           
 1326              		.loc 1 773 0
 1327 00ae 0023     		movs	r3, #0
 1328 00b0 2374     		strb	r3, [r4, #16]
 775:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         }
 1329              		.loc 1 775 0
 1330 00b2 0120     		movs	r0, #1
 1331 00b4 38BD     		pop	{r3, r4, r5, pc}
ARM GAS  /tmp/cc0Gq4Gz.s 			page 57


 1332              	.LVL179:
 1333              	.L94:
 783:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1334              		.loc 1 783 0
 1335 00b6 0123     		movs	r3, #1
 1336 00b8 6374     		strb	r3, [r4, #17]
 786:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1337              		.loc 1 786 0
 1338 00ba 0020     		movs	r0, #0
 1339 00bc 2074     		strb	r0, [r4, #16]
 788:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1340              		.loc 1 788 0
 1341 00be 38BD     		pop	{r3, r4, r5, pc}
 1342              	.LVL180:
 1343              	.L96:
 1344              	.LCFI14:
 1345              		.cfi_def_cfa_offset 0
 1346              		.cfi_restore 3
 1347              		.cfi_restore 4
 1348              		.cfi_restore 5
 1349              		.cfi_restore 14
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1350              		.loc 1 695 0
 1351 00c0 0120     		movs	r0, #1
 1352              	.LVL181:
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1353              		.loc 1 789 0
 1354 00c2 7047     		bx	lr
 1355              	.LVL182:
 1356              	.L97:
 1357              	.LCFI15:
 1358              		.cfi_def_cfa_offset 16
 1359              		.cfi_offset 3, -16
 1360              		.cfi_offset 4, -12
 1361              		.cfi_offset 5, -8
 1362              		.cfi_offset 14, -4
 695:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1363              		.loc 1 695 0
 1364 00c4 0120     		movs	r0, #1
 1365              	.LVL183:
 1366 00c6 38BD     		pop	{r3, r4, r5, pc}
 1367              	.LVL184:
 1368              	.L98:
 702:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1369              		.loc 1 702 0
 1370 00c8 0220     		movs	r0, #2
 1371              	.LVL185:
 789:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1372              		.loc 1 789 0
 1373 00ca 38BD     		pop	{r3, r4, r5, pc}
 1374              	.LVL186:
 1375              	.L101:
 1376              		.align	2
 1377              	.L100:
 1378 00cc C5B3A291 		.word	-1851608123
 1379 00d0 ABAAAAAA 		.word	-1431655765
 1380 00d4 80510100 		.word	86400
ARM GAS  /tmp/cc0Gq4Gz.s 			page 58


 1381              		.cfi_endproc
 1382              	.LFE69:
 1384              		.section	.text.HAL_RTC_GetDate,"ax",%progbits
 1385              		.align	2
 1386              		.global	HAL_RTC_GetDate
 1387              		.thumb
 1388              		.thumb_func
 1390              	HAL_RTC_GetDate:
 1391              	.LFB70:
 803:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   RTC_TimeTypeDef stime = {0U};
 1392              		.loc 1 803 0
 1393              		.cfi_startproc
 1394              		@ args = 0, pretend = 0, frame = 8
 1395              		@ frame_needed = 0, uses_anonymous_args = 0
 1396              	.LVL187:
 1397 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1398              	.LCFI16:
 1399              		.cfi_def_cfa_offset 24
 1400              		.cfi_offset 4, -24
 1401              		.cfi_offset 5, -20
 1402              		.cfi_offset 6, -16
 1403              		.cfi_offset 7, -12
 1404              		.cfi_offset 8, -8
 1405              		.cfi_offset 14, -4
 1406 0004 82B0     		sub	sp, sp, #8
 1407              	.LCFI17:
 1408              		.cfi_def_cfa_offset 32
 804:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1409              		.loc 1 804 0
 1410 0006 0023     		movs	r3, #0
 1411 0008 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1412 000c 8DF80630 		strb	r3, [sp, #6]
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1413              		.loc 1 807 0
 1414 0010 00B3     		cbz	r0, .L104
 1415 0012 0546     		mov	r5, r0
 807:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1416              		.loc 1 807 0 is_stmt 0 discriminator 1
 1417 0014 01B3     		cbz	r1, .L105
 1418 0016 1746     		mov	r7, r2
 1419 0018 0C46     		mov	r4, r1
 816:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1420              		.loc 1 816 0 is_stmt 1
 1421 001a 01A9     		add	r1, sp, #4
 1422              	.LVL188:
 1423 001c 1A46     		mov	r2, r3
 1424              	.LVL189:
 1425 001e FFF7FEFF 		bl	HAL_RTC_GetTime
 1426              	.LVL190:
 1427 0022 0646     		mov	r6, r0
 1428 0024 D0B9     		cbnz	r0, .L106
 822:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Year     = hrtc->DateToUpdate.Year;
 1429              		.loc 1 822 0
 1430 0026 2B7B     		ldrb	r3, [r5, #12]	@ zero_extendqisi2
 1431 0028 2370     		strb	r3, [r4]
 823:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Month    = hrtc->DateToUpdate.Month;
 1432              		.loc 1 823 0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 59


 1433 002a E87B     		ldrb	r0, [r5, #15]	@ zero_extendqisi2
 1434 002c E070     		strb	r0, [r4, #3]
 824:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sDate->Date     = hrtc->DateToUpdate.Date;
 1435              		.loc 1 824 0
 1436 002e 95F80D80 		ldrb	r8, [r5, #13]	@ zero_extendqisi2
 1437 0032 84F80180 		strb	r8, [r4, #1]
 825:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1438              		.loc 1 825 0
 1439 0036 AD7B     		ldrb	r5, [r5, #14]	@ zero_extendqisi2
 1440              	.LVL191:
 1441 0038 A570     		strb	r5, [r4, #2]
 828:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {    
 1442              		.loc 1 828 0
 1443 003a 87B1     		cbz	r7, .L103
 831:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Month  = (uint8_t)RTC_ByteToBcd2(sDate->Month);
 1444              		.loc 1 831 0
 1445 003c FFF7FEFF 		bl	RTC_ByteToBcd2
 1446              	.LVL192:
 1447 0040 E070     		strb	r0, [r4, #3]
 832:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sDate->Date   = (uint8_t)RTC_ByteToBcd2(sDate->Date);  
 1448              		.loc 1 832 0
 1449 0042 4046     		mov	r0, r8
 1450 0044 FFF7FEFF 		bl	RTC_ByteToBcd2
 1451              	.LVL193:
 1452 0048 6070     		strb	r0, [r4, #1]
 833:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1453              		.loc 1 833 0
 1454 004a 2846     		mov	r0, r5
 1455 004c FFF7FEFF 		bl	RTC_ByteToBcd2
 1456              	.LVL194:
 1457 0050 A070     		strb	r0, [r4, #2]
 1458 0052 04E0     		b	.L103
 1459              	.LVL195:
 1460              	.L104:
 809:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1461              		.loc 1 809 0
 1462 0054 0126     		movs	r6, #1
 1463 0056 02E0     		b	.L103
 1464              	.L105:
 1465 0058 0126     		movs	r6, #1
 1466 005a 00E0     		b	.L103
 1467              	.LVL196:
 1468              	.L106:
 818:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1469              		.loc 1 818 0
 1470 005c 0126     		movs	r6, #1
 1471              	.LVL197:
 1472              	.L103:
 836:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1473              		.loc 1 836 0
 1474 005e 3046     		mov	r0, r6
 1475 0060 02B0     		add	sp, sp, #8
 1476              	.LCFI18:
 1477              		.cfi_def_cfa_offset 24
 1478              		@ sp needed
 1479 0062 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1480              		.cfi_endproc
ARM GAS  /tmp/cc0Gq4Gz.s 			page 60


 1481              	.LFE70:
 1483 0066 00BF     		.section	.text.HAL_RTC_SetAlarm,"ax",%progbits
 1484              		.align	2
 1485              		.global	HAL_RTC_SetAlarm
 1486              		.thumb
 1487              		.thumb_func
 1489              	HAL_RTC_SetAlarm:
 1490              	.LFB71:
 868:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 1491              		.loc 1 868 0
 1492              		.cfi_startproc
 1493              		@ args = 0, pretend = 0, frame = 8
 1494              		@ frame_needed = 0, uses_anonymous_args = 0
 1495              	.LVL198:
 1496 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1497              	.LCFI19:
 1498              		.cfi_def_cfa_offset 20
 1499              		.cfi_offset 4, -20
 1500              		.cfi_offset 5, -16
 1501              		.cfi_offset 6, -12
 1502              		.cfi_offset 7, -8
 1503              		.cfi_offset 14, -4
 1504 0002 83B0     		sub	sp, sp, #12
 1505              	.LCFI20:
 1506              		.cfi_def_cfa_offset 32
 1507              	.LVL199:
 870:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1508              		.loc 1 870 0
 1509 0004 0023     		movs	r3, #0
 1510 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1511 000a 8DF80630 		strb	r3, [sp, #6]
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1512              		.loc 1 873 0
 1513 000e 0028     		cmp	r0, #0
 1514 0010 56D0     		beq	.L114
 1515 0012 0346     		mov	r3, r0
 873:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1516              		.loc 1 873 0 is_stmt 0 discriminator 1
 1517 0014 0029     		cmp	r1, #0
 1518 0016 55D0     		beq	.L115
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1519              		.loc 1 883 0 is_stmt 1
 1520 0018 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1521              	.LVL200:
 1522 001a 0128     		cmp	r0, #1
 1523 001c 54D0     		beq	.L116
 1524 001e 1D46     		mov	r5, r3
 1525 0020 1646     		mov	r6, r2
 1526 0022 0C46     		mov	r4, r1
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1527              		.loc 1 883 0 is_stmt 0 discriminator 2
 1528 0024 0123     		movs	r3, #1
 1529              	.LVL201:
 1530 0026 2B74     		strb	r3, [r5, #16]
 885:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1531              		.loc 1 885 0 is_stmt 1 discriminator 2
 1532 0028 0223     		movs	r3, #2
ARM GAS  /tmp/cc0Gq4Gz.s 			page 61


 1533 002a 6B74     		strb	r3, [r5, #17]
 888:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1534              		.loc 1 888 0 discriminator 2
 1535 002c 2846     		mov	r0, r5
 1536 002e 01A9     		add	r1, sp, #4
 1537              	.LVL202:
 1538 0030 0022     		movs	r2, #0
 1539              	.LVL203:
 1540 0032 FFF7FEFF 		bl	HAL_RTC_GetTime
 1541              	.LVL204:
 1542 0036 0028     		cmp	r0, #0
 1543 0038 48D1     		bne	.L117
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
 1544              		.loc 1 894 0
 1545 003a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 895:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Seconds));  
 1546              		.loc 1 895 0
 1547 003e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1548 0042 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1549 0046 9B00     		lsls	r3, r3, #2
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
 1550              		.loc 1 894 0
 1551 0048 4FF46167 		mov	r7, #3600
 1552 004c 07FB0233 		mla	r3, r7, r2, r3
 896:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1553              		.loc 1 896 0
 1554 0050 9DF80670 		ldrb	r7, [sp, #6]	@ zero_extendqisi2
 894:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
 1555              		.loc 1 894 0
 1556 0054 1F44     		add	r7, r7, r3
 1557              	.LVL205:
 898:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1558              		.loc 1 898 0
 1559 0056 5EB9     		cbnz	r6, .L110
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1560              		.loc 1 904 0
 1561 0058 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 905:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Seconds));  
 1562              		.loc 1 905 0
 1563 005a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1564 005c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1565 0060 9B00     		lsls	r3, r3, #2
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1566              		.loc 1 904 0
 1567 0062 4FF46161 		mov	r1, #3600
 1568 0066 01FB0231 		mla	r1, r1, r2, r3
 906:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1569              		.loc 1 906 0
 1570 006a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 904:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                         ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1571              		.loc 1 904 0
 1572 006c 1944     		add	r1, r1, r3
 1573              	.LVL206:
 1574 006e 11E0     		b	.L111
 1575              	.LVL207:
 1576              	.L110:
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
ARM GAS  /tmp/cc0Gq4Gz.s 			page 62


 1577              		.loc 1 914 0
 1578 0070 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1579 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1580              	.LVL208:
 1581 0076 4FF46166 		mov	r6, #3600
 1582              	.LVL209:
 1583 007a 06FB00F6 		mul	r6, r6, r0
 915:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));   
 1584              		.loc 1 915 0
 1585 007e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1586 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1587              	.LVL210:
 1588 0084 C0EB0010 		rsb	r0, r0, r0, lsl #4
 1589 0088 8000     		lsls	r0, r0, #2
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1590              		.loc 1 914 0
 1591 008a 0644     		add	r6, r6, r0
 916:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1592              		.loc 1 916 0
 1593 008c A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1594 008e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1595              	.LVL211:
 914:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****               ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1596              		.loc 1 914 0
 1597 0092 3118     		adds	r1, r6, r0
 1598              	.LVL212:
 1599              	.L111:
 920:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1600              		.loc 1 920 0
 1601 0094 B942     		cmp	r1, r7
 1602 0096 03D2     		bcs	.L112
 923:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1603              		.loc 1 923 0
 1604 0098 01F5A831 		add	r1, r1, #86016
 1605              	.LVL213:
 1606 009c 01F5C071 		add	r1, r1, #384
 1607              	.LVL214:
 1608              	.L112:
 927:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1609              		.loc 1 927 0
 1610 00a0 2846     		mov	r0, r5
 1611 00a2 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1612              	.LVL215:
 1613 00a6 0346     		mov	r3, r0
 1614 00a8 28B1     		cbz	r0, .L113
 930:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 1615              		.loc 1 930 0
 1616 00aa 0423     		movs	r3, #4
 1617 00ac 6B74     		strb	r3, [r5, #17]
 933:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 1618              		.loc 1 933 0
 1619 00ae 0023     		movs	r3, #0
 1620 00b0 2B74     		strb	r3, [r5, #16]
 935:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1621              		.loc 1 935 0
 1622 00b2 0123     		movs	r3, #1
 1623 00b4 0BE0     		b	.L109
ARM GAS  /tmp/cc0Gq4Gz.s 			page 63


 1624              	.L113:
 939:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1625              		.loc 1 939 0
 1626 00b6 0122     		movs	r2, #1
 1627 00b8 6A74     		strb	r2, [r5, #17]
 941:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 1628              		.loc 1 941 0
 1629 00ba 0022     		movs	r2, #0
 1630 00bc 2A74     		strb	r2, [r5, #16]
 943:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1631              		.loc 1 943 0
 1632 00be 06E0     		b	.L109
 1633              	.LVL216:
 1634              	.L114:
 875:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1635              		.loc 1 875 0
 1636 00c0 0123     		movs	r3, #1
 1637 00c2 04E0     		b	.L109
 1638              	.L115:
 1639 00c4 0123     		movs	r3, #1
 1640 00c6 02E0     		b	.L109
 1641              	.LVL217:
 1642              	.L116:
 883:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1643              		.loc 1 883 0
 1644 00c8 0223     		movs	r3, #2
 1645              	.LVL218:
 1646 00ca 00E0     		b	.L109
 1647              	.LVL219:
 1648              	.L117:
 890:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1649              		.loc 1 890 0
 1650 00cc 0123     		movs	r3, #1
 1651              	.LVL220:
 1652              	.L109:
 945:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1653              		.loc 1 945 0
 1654 00ce 1846     		mov	r0, r3
 1655 00d0 03B0     		add	sp, sp, #12
 1656              	.LCFI21:
 1657              		.cfi_def_cfa_offset 20
 1658              		@ sp needed
 1659 00d2 F0BD     		pop	{r4, r5, r6, r7, pc}
 1660              		.cfi_endproc
 1661              	.LFE71:
 1663              		.section	.text.HAL_RTC_SetAlarm_IT,"ax",%progbits
 1664              		.align	2
 1665              		.global	HAL_RTC_SetAlarm_IT
 1666              		.thumb
 1667              		.thumb_func
 1669              	HAL_RTC_SetAlarm_IT:
 1670              	.LFB72:
 960:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U, counter_time;
 1671              		.loc 1 960 0
 1672              		.cfi_startproc
 1673              		@ args = 0, pretend = 0, frame = 8
 1674              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 64


 1675              	.LVL221:
 1676 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1677              	.LCFI22:
 1678              		.cfi_def_cfa_offset 20
 1679              		.cfi_offset 4, -20
 1680              		.cfi_offset 5, -16
 1681              		.cfi_offset 6, -12
 1682              		.cfi_offset 7, -8
 1683              		.cfi_offset 14, -4
 1684 0002 83B0     		sub	sp, sp, #12
 1685              	.LCFI23:
 1686              		.cfi_def_cfa_offset 32
 1687              	.LVL222:
 962:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1688              		.loc 1 962 0
 1689 0004 0023     		movs	r3, #0
 1690 0006 ADF80430 		strh	r3, [sp, #4]	@ movhi
 1691 000a 8DF80630 		strb	r3, [sp, #6]
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1692              		.loc 1 965 0
 1693 000e 0028     		cmp	r0, #0
 1694 0010 68D0     		beq	.L125
 1695 0012 0346     		mov	r3, r0
 965:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1696              		.loc 1 965 0 is_stmt 0 discriminator 1
 1697 0014 0029     		cmp	r1, #0
 1698 0016 67D0     		beq	.L126
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1699              		.loc 1 975 0 is_stmt 1
 1700 0018 007C     		ldrb	r0, [r0, #16]	@ zero_extendqisi2
 1701              	.LVL223:
 1702 001a 0128     		cmp	r0, #1
 1703 001c 66D0     		beq	.L127
 1704 001e 1D46     		mov	r5, r3
 1705 0020 1646     		mov	r6, r2
 1706 0022 0C46     		mov	r4, r1
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1707              		.loc 1 975 0 is_stmt 0 discriminator 2
 1708 0024 0123     		movs	r3, #1
 1709              	.LVL224:
 1710 0026 2B74     		strb	r3, [r5, #16]
 977:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1711              		.loc 1 977 0 is_stmt 1 discriminator 2
 1712 0028 0223     		movs	r3, #2
 1713 002a 6B74     		strb	r3, [r5, #17]
 980:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1714              		.loc 1 980 0 discriminator 2
 1715 002c 2846     		mov	r0, r5
 1716 002e 01A9     		add	r1, sp, #4
 1717              	.LVL225:
 1718 0030 0022     		movs	r2, #0
 1719              	.LVL226:
 1720 0032 FFF7FEFF 		bl	HAL_RTC_GetTime
 1721              	.LVL227:
 1722 0036 0028     		cmp	r0, #0
 1723 0038 5AD1     		bne	.L128
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
ARM GAS  /tmp/cc0Gq4Gz.s 			page 65


 1724              		.loc 1 986 0
 1725 003a 9DF80420 		ldrb	r2, [sp, #4]	@ zero_extendqisi2
 987:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Seconds));  
 1726              		.loc 1 987 0
 1727 003e 9DF80530 		ldrb	r3, [sp, #5]	@ zero_extendqisi2
 1728 0042 C3EB0313 		rsb	r3, r3, r3, lsl #4
 1729 0046 9B00     		lsls	r3, r3, #2
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
 1730              		.loc 1 986 0
 1731 0048 4FF46167 		mov	r7, #3600
 1732 004c 07FB0233 		mla	r3, r7, r2, r3
 988:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1733              		.loc 1 988 0
 1734 0050 9DF80670 		ldrb	r7, [sp, #6]	@ zero_extendqisi2
 986:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                       ((uint32_t)stime.Minutes * 60U) + \
 1735              		.loc 1 986 0
 1736 0054 1F44     		add	r7, r7, r3
 1737              	.LVL228:
 990:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1738              		.loc 1 990 0
 1739 0056 5EB9     		cbnz	r6, .L121
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1740              		.loc 1 996 0
 1741 0058 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 997:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         ((uint32_t)sAlarm->AlarmTime.Seconds));  
 1742              		.loc 1 997 0
 1743 005a 6378     		ldrb	r3, [r4, #1]	@ zero_extendqisi2
 1744 005c C3EB0313 		rsb	r3, r3, r3, lsl #4
 1745 0060 9B00     		lsls	r3, r3, #2
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1746              		.loc 1 996 0
 1747 0062 4FF46161 		mov	r1, #3600
 1748 0066 01FB0231 		mla	r1, r1, r2, r3
 998:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1749              		.loc 1 998 0
 1750 006a A378     		ldrb	r3, [r4, #2]	@ zero_extendqisi2
 996:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       ((uint32_t)sAlarm->AlarmTime.Minutes * 60U) + \
 1751              		.loc 1 996 0
 1752 006c 1944     		add	r1, r1, r3
 1753              	.LVL229:
 1754 006e 11E0     		b	.L122
 1755              	.LVL230:
 1756              	.L121:
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1757              		.loc 1 1006 0
 1758 0070 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 1759 0072 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1760              	.LVL231:
 1761 0076 4FF46166 		mov	r6, #3600
 1762              	.LVL232:
 1763 007a 06FB00F6 		mul	r6, r6, r0
1007:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)RTC_Bcd2ToByte(sAlarm->AlarmTime.Seconds)));   
 1764              		.loc 1 1007 0
 1765 007e 6078     		ldrb	r0, [r4, #1]	@ zero_extendqisi2
 1766 0080 FFF7FEFF 		bl	RTC_Bcd2ToByte
 1767              	.LVL233:
 1768 0084 C0EB0010 		rsb	r0, r0, r0, lsl #4
ARM GAS  /tmp/cc0Gq4Gz.s 			page 66


 1769 0088 8000     		lsls	r0, r0, #2
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1770              		.loc 1 1006 0
 1771 008a 0644     		add	r6, r6, r0
1008:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1772              		.loc 1 1008 0
 1773 008c A078     		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 1774 008e FFF7FEFF 		bl	RTC_Bcd2ToByte
 1775              	.LVL234:
1006:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****                      ((uint32_t)(RTC_Bcd2ToByte(sAlarm->AlarmTime.Minutes)) * 60U) + \
 1776              		.loc 1 1006 0
 1777 0092 3118     		adds	r1, r6, r0
 1778              	.LVL235:
 1779              	.L122:
1012:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1780              		.loc 1 1012 0
 1781 0094 B942     		cmp	r1, r7
 1782 0096 03D2     		bcs	.L123
1015:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1783              		.loc 1 1015 0
 1784 0098 01F5A831 		add	r1, r1, #86016
 1785              	.LVL236:
 1786 009c 01F5C071 		add	r1, r1, #384
 1787              	.LVL237:
 1788              	.L123:
1019:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1789              		.loc 1 1019 0
 1790 00a0 2846     		mov	r0, r5
 1791 00a2 FFF7FEFF 		bl	RTC_WriteAlarmCounter
 1792              	.LVL238:
 1793 00a6 0346     		mov	r3, r0
 1794 00a8 28B1     		cbz	r0, .L124
1022:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 1795              		.loc 1 1022 0
 1796 00aa 0423     		movs	r3, #4
 1797 00ac 6B74     		strb	r3, [r5, #17]
1025:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 1798              		.loc 1 1025 0
 1799 00ae 0023     		movs	r3, #0
 1800 00b0 2B74     		strb	r3, [r5, #16]
1027:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1801              		.loc 1 1027 0
 1802 00b2 0123     		movs	r3, #1
 1803 00b4 1DE0     		b	.L120
 1804              	.L124:
1032:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 1805              		.loc 1 1032 0
 1806 00b6 2A68     		ldr	r2, [r5]
 1807 00b8 6FF00201 		mvn	r1, #2
 1808 00bc 5160     		str	r1, [r2, #4]
1035:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 1809              		.loc 1 1035 0
 1810 00be 2968     		ldr	r1, [r5]
 1811 00c0 0A68     		ldr	r2, [r1]
 1812 00c2 42F00202 		orr	r2, r2, #2
 1813 00c6 0A60     		str	r2, [r1]
1038:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
ARM GAS  /tmp/cc0Gq4Gz.s 			page 67


 1814              		.loc 1 1038 0
 1815 00c8 0B4A     		ldr	r2, .L130
 1816 00ca 1168     		ldr	r1, [r2]
 1817 00cc 41F40031 		orr	r1, r1, #131072
 1818 00d0 1160     		str	r1, [r2]
1040:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1819              		.loc 1 1040 0
 1820 00d2 9168     		ldr	r1, [r2, #8]
 1821 00d4 41F40031 		orr	r1, r1, #131072
 1822 00d8 9160     		str	r1, [r2, #8]
1042:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1823              		.loc 1 1042 0
 1824 00da 0122     		movs	r2, #1
 1825 00dc 6A74     		strb	r2, [r5, #17]
1044:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****      
 1826              		.loc 1 1044 0
 1827 00de 0022     		movs	r2, #0
 1828 00e0 2A74     		strb	r2, [r5, #16]
1046:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1829              		.loc 1 1046 0
 1830 00e2 06E0     		b	.L120
 1831              	.LVL239:
 1832              	.L125:
 967:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1833              		.loc 1 967 0
 1834 00e4 0123     		movs	r3, #1
 1835 00e6 04E0     		b	.L120
 1836              	.L126:
 1837 00e8 0123     		movs	r3, #1
 1838 00ea 02E0     		b	.L120
 1839              	.LVL240:
 1840              	.L127:
 975:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1841              		.loc 1 975 0
 1842 00ec 0223     		movs	r3, #2
 1843              	.LVL241:
 1844 00ee 00E0     		b	.L120
 1845              	.LVL242:
 1846              	.L128:
 982:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1847              		.loc 1 982 0
 1848 00f0 0123     		movs	r3, #1
 1849              	.LVL243:
 1850              	.L120:
1048:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1851              		.loc 1 1048 0
 1852 00f2 1846     		mov	r0, r3
 1853 00f4 03B0     		add	sp, sp, #12
 1854              	.LCFI24:
 1855              		.cfi_def_cfa_offset 20
 1856              		@ sp needed
 1857 00f6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1858              	.L131:
 1859              		.align	2
 1860              	.L130:
 1861 00f8 00040140 		.word	1073808384
 1862              		.cfi_endproc
ARM GAS  /tmp/cc0Gq4Gz.s 			page 68


 1863              	.LFE72:
 1865              		.section	.text.HAL_RTC_GetAlarm,"ax",%progbits
 1866              		.align	2
 1867              		.global	HAL_RTC_GetAlarm
 1868              		.thumb
 1869              		.thumb_func
 1871              	HAL_RTC_GetAlarm:
 1872              	.LFB73:
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
 1873              		.loc 1 1065 0
 1874              		.cfi_startproc
 1875              		@ args = 0, pretend = 0, frame = 0
 1876              		@ frame_needed = 0, uses_anonymous_args = 0
 1877              	.LVL244:
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1878              		.loc 1 1072 0
 1879 0000 90B3     		cbz	r0, .L134
1072:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1880              		.loc 1 1072 0 is_stmt 0 discriminator 1
 1881 0002 99B3     		cbz	r1, .L135
1065:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t counter_alarm = 0U;
 1882              		.loc 1 1065 0 is_stmt 1
 1883 0004 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1884              	.LCFI25:
 1885              		.cfi_def_cfa_offset 24
 1886              		.cfi_offset 3, -24
 1887              		.cfi_offset 4, -20
 1888              		.cfi_offset 5, -16
 1889              		.cfi_offset 6, -12
 1890              		.cfi_offset 7, -8
 1891              		.cfi_offset 14, -4
 1892 0006 1E46     		mov	r6, r3
 1893 0008 0D46     		mov	r5, r1
1082:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1894              		.loc 1 1082 0
 1895 000a FFF7FEFF 		bl	RTC_ReadAlarmCounter
 1896              	.LVL245:
1086:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Minutes = (uint32_t)((counter_alarm % 3600U) / 60U);
 1897              		.loc 1 1086 0
 1898 000e 194B     		ldr	r3, .L139
 1899 0010 A3FB0023 		umull	r2, r3, r3, r0
 1900 0014 DB0A     		lsrs	r3, r3, #11
 1901 0016 184A     		ldr	r2, .L139+4
 1902 0018 A2FB0312 		umull	r1, r2, r2, r3
 1903 001c 1209     		lsrs	r2, r2, #4
 1904 001e 02EB4202 		add	r2, r2, r2, lsl #1
 1905 0022 D200     		lsls	r2, r2, #3
 1906 0024 9A1A     		subs	r2, r3, r2
 1907 0026 D2B2     		uxtb	r2, r2
 1908 0028 2A70     		strb	r2, [r5]
1087:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   sAlarm->AlarmTime.Seconds = (uint32_t)((counter_alarm % 3600U) % 60U);
 1909              		.loc 1 1087 0
 1910 002a 4FF46161 		mov	r1, #3600
 1911 002e 01FB1301 		mls	r1, r1, r3, r0
 1912 0032 124C     		ldr	r4, .L139+8
 1913 0034 A4FB0134 		umull	r3, r4, r4, r1
 1914 0038 6409     		lsrs	r4, r4, #5
ARM GAS  /tmp/cc0Gq4Gz.s 			page 69


 1915 003a E7B2     		uxtb	r7, r4
 1916 003c 6F70     		strb	r7, [r5, #1]
1088:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 1917              		.loc 1 1088 0
 1918 003e C4EB0414 		rsb	r4, r4, r4, lsl #4
 1919 0042 A400     		lsls	r4, r4, #2
 1920 0044 081B     		subs	r0, r1, r4
 1921              	.LVL246:
 1922 0046 C4B2     		uxtb	r4, r0
 1923 0048 AC70     		strb	r4, [r5, #2]
1090:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 1924              		.loc 1 1090 0
 1925 004a 8EB1     		cbz	r6, .L136
1092:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Minutes = RTC_ByteToBcd2(sAlarm->AlarmTime.Minutes);
 1926              		.loc 1 1092 0
 1927 004c 1046     		mov	r0, r2
 1928 004e FFF7FEFF 		bl	RTC_ByteToBcd2
 1929              	.LVL247:
 1930 0052 2870     		strb	r0, [r5]
1093:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     sAlarm->AlarmTime.Seconds = RTC_ByteToBcd2(sAlarm->AlarmTime.Seconds);
 1931              		.loc 1 1093 0
 1932 0054 3846     		mov	r0, r7
 1933 0056 FFF7FEFF 		bl	RTC_ByteToBcd2
 1934              	.LVL248:
 1935 005a 6870     		strb	r0, [r5, #1]
1094:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }  
 1936              		.loc 1 1094 0
 1937 005c 2046     		mov	r0, r4
 1938 005e FFF7FEFF 		bl	RTC_ByteToBcd2
 1939              	.LVL249:
 1940 0062 A870     		strb	r0, [r5, #2]
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1941              		.loc 1 1097 0
 1942 0064 0020     		movs	r0, #0
 1943 0066 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1944              	.LVL250:
 1945              	.L134:
 1946              	.LCFI26:
 1947              		.cfi_def_cfa_offset 0
 1948              		.cfi_restore 3
 1949              		.cfi_restore 4
 1950              		.cfi_restore 5
 1951              		.cfi_restore 6
 1952              		.cfi_restore 7
 1953              		.cfi_restore 14
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1954              		.loc 1 1074 0
 1955 0068 0120     		movs	r0, #1
 1956              	.LVL251:
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1957              		.loc 1 1098 0
 1958 006a 7047     		bx	lr
 1959              	.LVL252:
 1960              	.L135:
1074:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 1961              		.loc 1 1074 0
 1962 006c 0120     		movs	r0, #1
ARM GAS  /tmp/cc0Gq4Gz.s 			page 70


 1963              	.LVL253:
 1964 006e 7047     		bx	lr
 1965              	.LVL254:
 1966              	.L136:
 1967              	.LCFI27:
 1968              		.cfi_def_cfa_offset 24
 1969              		.cfi_offset 3, -24
 1970              		.cfi_offset 4, -20
 1971              		.cfi_offset 5, -16
 1972              		.cfi_offset 6, -12
 1973              		.cfi_offset 7, -8
 1974              		.cfi_offset 14, -4
1097:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 1975              		.loc 1 1097 0
 1976 0070 0020     		movs	r0, #0
1098:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 1977              		.loc 1 1098 0
 1978 0072 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1979              	.LVL255:
 1980              	.L140:
 1981              		.align	2
 1982              	.L139:
 1983 0074 C5B3A291 		.word	-1851608123
 1984 0078 ABAAAAAA 		.word	-1431655765
 1985 007c 89888888 		.word	-2004318071
 1986              		.cfi_endproc
 1987              	.LFE73:
 1989              		.section	.text.HAL_RTC_DeactivateAlarm,"ax",%progbits
 1990              		.align	2
 1991              		.global	HAL_RTC_DeactivateAlarm
 1992              		.thumb
 1993              		.thumb_func
 1995              	HAL_RTC_DeactivateAlarm:
 1996              	.LFB74:
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 1997              		.loc 1 1110 0
 1998              		.cfi_startproc
 1999              		@ args = 0, pretend = 0, frame = 0
 2000              		@ frame_needed = 0, uses_anonymous_args = 0
 2001              	.LVL256:
1118:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2002              		.loc 1 1118 0
 2003 0000 0028     		cmp	r0, #0
 2004 0002 35D0     		beq	.L145
1110:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 2005              		.loc 1 1110 0
 2006 0004 10B5     		push	{r4, lr}
 2007              	.LCFI28:
 2008              		.cfi_def_cfa_offset 8
 2009              		.cfi_offset 4, -8
 2010              		.cfi_offset 14, -4
 2011 0006 0446     		mov	r4, r0
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2012              		.loc 1 1124 0
 2013 0008 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 2014 000a 012B     		cmp	r3, #1
 2015 000c 33D0     		beq	.L146
ARM GAS  /tmp/cc0Gq4Gz.s 			page 71


1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2016              		.loc 1 1124 0 is_stmt 0 discriminator 2
 2017 000e 0123     		movs	r3, #1
 2018 0010 0374     		strb	r3, [r0, #16]
1126:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2019              		.loc 1 1126 0 is_stmt 1 discriminator 2
 2020 0012 0223     		movs	r3, #2
 2021 0014 4374     		strb	r3, [r0, #17]
1129:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2022              		.loc 1 1129 0 discriminator 2
 2023 0016 0268     		ldr	r2, [r0]
 2024 0018 1368     		ldr	r3, [r2]
 2025 001a 23F00203 		bic	r3, r3, #2
 2026 001e 1360     		str	r3, [r2]
1132:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2027              		.loc 1 1132 0 discriminator 2
 2028 0020 FFF7FEFF 		bl	RTC_EnterInitMode
 2029              	.LVL257:
 2030 0024 28B1     		cbz	r0, .L143
1135:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2031              		.loc 1 1135 0
 2032 0026 0423     		movs	r3, #4
 2033 0028 6374     		strb	r3, [r4, #17]
1138:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2034              		.loc 1 1138 0
 2035 002a 0023     		movs	r3, #0
 2036 002c 2374     		strb	r3, [r4, #16]
1140:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 2037              		.loc 1 1140 0
 2038 002e 0123     		movs	r3, #1
 2039 0030 22E0     		b	.L142
 2040              	.L143:
1145:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2041              		.loc 1 1145 0
 2042 0032 2368     		ldr	r3, [r4]
 2043 0034 6FF00202 		mvn	r2, #2
 2044 0038 5A60     		str	r2, [r3, #4]
1148:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->ALRL, RTC_ALARM_RESETVALUE_REGISTER);
 2045              		.loc 1 1148 0
 2046 003a 2268     		ldr	r2, [r4]
 2047 003c 4FF6FF73 		movw	r3, #65535
 2048 0040 1362     		str	r3, [r2, #32]
1149:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2049              		.loc 1 1149 0
 2050 0042 2268     		ldr	r2, [r4]
 2051 0044 5362     		str	r3, [r2, #36]
1152:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2052              		.loc 1 1152 0
 2053 0046 0D4A     		ldr	r2, .L148
 2054 0048 1368     		ldr	r3, [r2]
 2055 004a 23F40033 		bic	r3, r3, #131072
 2056 004e 1360     		str	r3, [r2]
1155:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 2057              		.loc 1 1155 0
 2058 0050 2046     		mov	r0, r4
 2059 0052 FFF7FEFF 		bl	RTC_ExitInitMode
 2060              	.LVL258:
ARM GAS  /tmp/cc0Gq4Gz.s 			page 72


 2061 0056 0346     		mov	r3, r0
 2062 0058 28B1     		cbz	r0, .L144
1157:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 2063              		.loc 1 1157 0
 2064 005a 0423     		movs	r3, #4
 2065 005c 6374     		strb	r3, [r4, #17]
1160:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 2066              		.loc 1 1160 0
 2067 005e 0023     		movs	r3, #0
 2068 0060 2374     		strb	r3, [r4, #16]
1162:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2069              		.loc 1 1162 0
 2070 0062 0123     		movs	r3, #1
 2071 0064 08E0     		b	.L142
 2072              	.L144:
1165:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2073              		.loc 1 1165 0
 2074 0066 0122     		movs	r2, #1
 2075 0068 6274     		strb	r2, [r4, #17]
1168:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2076              		.loc 1 1168 0
 2077 006a 0022     		movs	r2, #0
 2078 006c 2274     		strb	r2, [r4, #16]
1170:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2079              		.loc 1 1170 0
 2080 006e 03E0     		b	.L142
 2081              	.LVL259:
 2082              	.L145:
 2083              	.LCFI29:
 2084              		.cfi_def_cfa_offset 0
 2085              		.cfi_restore 4
 2086              		.cfi_restore 14
1120:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2087              		.loc 1 1120 0
 2088 0070 0123     		movs	r3, #1
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2089              		.loc 1 1171 0
 2090 0072 1846     		mov	r0, r3
 2091              	.LVL260:
 2092 0074 7047     		bx	lr
 2093              	.LVL261:
 2094              	.L146:
 2095              	.LCFI30:
 2096              		.cfi_def_cfa_offset 8
 2097              		.cfi_offset 4, -8
 2098              		.cfi_offset 14, -4
1124:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2099              		.loc 1 1124 0
 2100 0076 0223     		movs	r3, #2
 2101              	.LVL262:
 2102              	.L142:
1171:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2103              		.loc 1 1171 0
 2104 0078 1846     		mov	r0, r3
 2105 007a 10BD     		pop	{r4, pc}
 2106              	.LVL263:
 2107              	.L149:
ARM GAS  /tmp/cc0Gq4Gz.s 			page 73


 2108              		.align	2
 2109              	.L148:
 2110 007c 00040140 		.word	1073808384
 2111              		.cfi_endproc
 2112              	.LFE74:
 2114              		.section	.text.HAL_RTC_AlarmAEventCallback,"ax",%progbits
 2115              		.align	2
 2116              		.weak	HAL_RTC_AlarmAEventCallback
 2117              		.thumb
 2118              		.thumb_func
 2120              	HAL_RTC_AlarmAEventCallback:
 2121              	.LFB76:
1208:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Prevent unused argument(s) compilation warning */
 2122              		.loc 1 1208 0
 2123              		.cfi_startproc
 2124              		@ args = 0, pretend = 0, frame = 0
 2125              		@ frame_needed = 0, uses_anonymous_args = 0
 2126              		@ link register save eliminated.
 2127              	.LVL264:
 2128 0000 7047     		bx	lr
 2129              		.cfi_endproc
 2130              	.LFE76:
 2132 0002 00BF     		.section	.text.HAL_RTC_AlarmIRQHandler,"ax",%progbits
 2133              		.align	2
 2134              		.global	HAL_RTC_AlarmIRQHandler
 2135              		.thumb
 2136              		.thumb_func
 2138              	HAL_RTC_AlarmIRQHandler:
 2139              	.LFB75:
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
 2140              		.loc 1 1180 0
 2141              		.cfi_startproc
 2142              		@ args = 0, pretend = 0, frame = 0
 2143              		@ frame_needed = 0, uses_anonymous_args = 0
 2144              	.LVL265:
1180:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   if(__HAL_RTC_ALARM_GET_IT_SOURCE(hrtc, RTC_IT_ALRA))
 2145              		.loc 1 1180 0
 2146 0000 10B5     		push	{r4, lr}
 2147              	.LCFI31:
 2148              		.cfi_def_cfa_offset 8
 2149              		.cfi_offset 4, -8
 2150              		.cfi_offset 14, -4
 2151 0002 0446     		mov	r4, r0
1181:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2152              		.loc 1 1181 0
 2153 0004 0368     		ldr	r3, [r0]
 2154 0006 1A68     		ldr	r2, [r3]
 2155 0008 12F0020F 		tst	r2, #2
 2156 000c 09D0     		beq	.L152
1184:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2157              		.loc 1 1184 0
 2158 000e 5B68     		ldr	r3, [r3, #4]
 2159 0010 13F0020F 		tst	r3, #2
 2160 0014 05D0     		beq	.L152
1187:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 2161              		.loc 1 1187 0
 2162 0016 FFF7FEFF 		bl	HAL_RTC_AlarmAEventCallback
ARM GAS  /tmp/cc0Gq4Gz.s 			page 74


 2163              	.LVL266:
1190:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2164              		.loc 1 1190 0
 2165 001a 2368     		ldr	r3, [r4]
 2166 001c 6FF00202 		mvn	r2, #2
 2167 0020 5A60     		str	r2, [r3, #4]
 2168              	.L152:
1195:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2169              		.loc 1 1195 0
 2170 0022 4FF40032 		mov	r2, #131072
 2171 0026 024B     		ldr	r3, .L154
 2172 0028 5A61     		str	r2, [r3, #20]
1198:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2173              		.loc 1 1198 0
 2174 002a 0123     		movs	r3, #1
 2175 002c 6374     		strb	r3, [r4, #17]
 2176 002e 10BD     		pop	{r4, pc}
 2177              	.LVL267:
 2178              	.L155:
 2179              		.align	2
 2180              	.L154:
 2181 0030 00040140 		.word	1073808384
 2182              		.cfi_endproc
 2183              	.LFE75:
 2185              		.section	.text.HAL_RTC_PollForAlarmAEvent,"ax",%progbits
 2186              		.align	2
 2187              		.global	HAL_RTC_PollForAlarmAEvent
 2188              		.thumb
 2189              		.thumb_func
 2191              	HAL_RTC_PollForAlarmAEvent:
 2192              	.LFB77:
1224:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = HAL_GetTick();   
 2193              		.loc 1 1224 0
 2194              		.cfi_startproc
 2195              		@ args = 0, pretend = 0, frame = 0
 2196              		@ frame_needed = 0, uses_anonymous_args = 0
 2197              	.LVL268:
 2198 0000 70B5     		push	{r4, r5, r6, lr}
 2199              	.LCFI32:
 2200              		.cfi_def_cfa_offset 16
 2201              		.cfi_offset 4, -16
 2202              		.cfi_offset 5, -12
 2203              		.cfi_offset 6, -8
 2204              		.cfi_offset 14, -4
 2205 0002 0446     		mov	r4, r0
 2206 0004 0D46     		mov	r5, r1
1225:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2207              		.loc 1 1225 0
 2208 0006 FFF7FEFF 		bl	HAL_GetTick
 2209              	.LVL269:
 2210 000a 0646     		mov	r6, r0
 2211              	.LVL270:
1228:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2212              		.loc 1 1228 0
 2213 000c 64B9     		cbnz	r4, .L159
 2214 000e 17E0     		b	.L162
 2215              	.LVL271:
ARM GAS  /tmp/cc0Gq4Gz.s 			page 75


 2216              	.L161:
1235:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2217              		.loc 1 1235 0
 2218 0010 B5F1FF3F 		cmp	r5, #-1
 2219 0014 08D0     		beq	.L159
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2220              		.loc 1 1237 0
 2221 0016 25B1     		cbz	r5, .L160
1237:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2222              		.loc 1 1237 0 is_stmt 0 discriminator 1
 2223 0018 FFF7FEFF 		bl	HAL_GetTick
 2224              	.LVL272:
 2225 001c 801B     		subs	r0, r0, r6
 2226 001e A842     		cmp	r0, r5
 2227 0020 02D9     		bls	.L159
 2228              	.L160:
1239:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_TIMEOUT;
 2229              		.loc 1 1239 0 is_stmt 1
 2230 0022 0320     		movs	r0, #3
 2231 0024 6074     		strb	r0, [r4, #17]
1240:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 2232              		.loc 1 1240 0
 2233 0026 70BD     		pop	{r4, r5, r6, pc}
 2234              	.LVL273:
 2235              	.L159:
1233:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2236              		.loc 1 1233 0
 2237 0028 2368     		ldr	r3, [r4]
 2238 002a 5A68     		ldr	r2, [r3, #4]
 2239 002c 12F0020F 		tst	r2, #2
 2240 0030 EED0     		beq	.L161
1246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2241              		.loc 1 1246 0
 2242 0032 6FF00202 		mvn	r2, #2
 2243 0036 5A60     		str	r2, [r3, #4]
1249:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2244              		.loc 1 1249 0
 2245 0038 0123     		movs	r3, #1
 2246 003a 6374     		strb	r3, [r4, #17]
1251:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2247              		.loc 1 1251 0
 2248 003c 0020     		movs	r0, #0
 2249 003e 70BD     		pop	{r4, r5, r6, pc}
 2250              	.LVL274:
 2251              	.L162:
1230:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2252              		.loc 1 1230 0
 2253 0040 0120     		movs	r0, #1
 2254              	.LVL275:
1252:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2255              		.loc 1 1252 0
 2256 0042 70BD     		pop	{r4, r5, r6, pc}
 2257              		.cfi_endproc
 2258              	.LFE77:
 2260              		.section	.text.HAL_RTC_GetState,"ax",%progbits
 2261              		.align	2
 2262              		.global	HAL_RTC_GetState
ARM GAS  /tmp/cc0Gq4Gz.s 			page 76


 2263              		.thumb
 2264              		.thumb_func
 2266              	HAL_RTC_GetState:
 2267              	.LFB78:
1279:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   return hrtc->State;
 2268              		.loc 1 1279 0
 2269              		.cfi_startproc
 2270              		@ args = 0, pretend = 0, frame = 0
 2271              		@ frame_needed = 0, uses_anonymous_args = 0
 2272              		@ link register save eliminated.
 2273              	.LVL276:
1280:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2274              		.loc 1 1280 0
 2275 0000 407C     		ldrb	r0, [r0, #17]	@ zero_extendqisi2
 2276              	.LVL277:
1281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2277              		.loc 1 1281 0
 2278 0002 7047     		bx	lr
 2279              		.cfi_endproc
 2280              	.LFE78:
 2282              		.section	.text.HAL_RTC_WaitForSynchro,"ax",%progbits
 2283              		.align	2
 2284              		.global	HAL_RTC_WaitForSynchro
 2285              		.thumb
 2286              		.thumb_func
 2288              	HAL_RTC_WaitForSynchro:
 2289              	.LFB79:
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 2290              		.loc 1 1312 0
 2291              		.cfi_startproc
 2292              		@ args = 0, pretend = 0, frame = 0
 2293              		@ frame_needed = 0, uses_anonymous_args = 0
 2294              	.LVL278:
1316:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2295              		.loc 1 1316 0
 2296 0000 B8B1     		cbz	r0, .L169
1312:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t tickstart = 0U;
 2297              		.loc 1 1312 0
 2298 0002 38B5     		push	{r3, r4, r5, lr}
 2299              	.LCFI33:
 2300              		.cfi_def_cfa_offset 16
 2301              		.cfi_offset 3, -16
 2302              		.cfi_offset 4, -12
 2303              		.cfi_offset 5, -8
 2304              		.cfi_offset 14, -4
 2305 0004 0446     		mov	r4, r0
1322:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2306              		.loc 1 1322 0
 2307 0006 0268     		ldr	r2, [r0]
 2308 0008 5368     		ldr	r3, [r2, #4]
 2309 000a 23F00803 		bic	r3, r3, #8
 2310 000e 5360     		str	r3, [r2, #4]
1324:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2311              		.loc 1 1324 0
 2312 0010 FFF7FEFF 		bl	HAL_GetTick
 2313              	.LVL279:
 2314 0014 0546     		mov	r5, r0
ARM GAS  /tmp/cc0Gq4Gz.s 			page 77


 2315              	.LVL280:
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2316              		.loc 1 1327 0
 2317 0016 05E0     		b	.L167
 2318              	.LVL281:
 2319              	.L168:
1329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 2320              		.loc 1 1329 0
 2321 0018 FFF7FEFF 		bl	HAL_GetTick
 2322              	.LVL282:
 2323 001c 401B     		subs	r0, r0, r5
 2324 001e B0F57A7F 		cmp	r0, #1000
 2325 0022 08D8     		bhi	.L170
 2326              	.L167:
1327:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2327              		.loc 1 1327 0
 2328 0024 2368     		ldr	r3, [r4]
 2329 0026 5B68     		ldr	r3, [r3, #4]
 2330 0028 13F0080F 		tst	r3, #8
 2331 002c F4D0     		beq	.L168
1335:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2332              		.loc 1 1335 0
 2333 002e 0020     		movs	r0, #0
 2334 0030 38BD     		pop	{r3, r4, r5, pc}
 2335              	.LVL283:
 2336              	.L169:
 2337              	.LCFI34:
 2338              		.cfi_def_cfa_offset 0
 2339              		.cfi_restore 3
 2340              		.cfi_restore 4
 2341              		.cfi_restore 5
 2342              		.cfi_restore 14
1318:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2343              		.loc 1 1318 0
 2344 0032 0120     		movs	r0, #1
 2345              	.LVL284:
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2346              		.loc 1 1336 0
 2347 0034 7047     		bx	lr
 2348              	.LVL285:
 2349              	.L170:
 2350              	.LCFI35:
 2351              		.cfi_def_cfa_offset 16
 2352              		.cfi_offset 3, -16
 2353              		.cfi_offset 4, -12
 2354              		.cfi_offset 5, -8
 2355              		.cfi_offset 14, -4
1331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     } 
 2356              		.loc 1 1331 0
 2357 0036 0320     		movs	r0, #3
1336:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2358              		.loc 1 1336 0
 2359 0038 38BD     		pop	{r3, r4, r5, pc}
 2360              		.cfi_endproc
 2361              	.LFE79:
 2363 003a 00BF     		.section	.text.HAL_RTC_Init,"ax",%progbits
 2364              		.align	2
ARM GAS  /tmp/cc0Gq4Gz.s 			page 78


 2365              		.global	HAL_RTC_Init
 2366              		.thumb
 2367              		.thumb_func
 2369              	HAL_RTC_Init:
 2370              	.LFB63:
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 2371              		.loc 1 243 0
 2372              		.cfi_startproc
 2373              		@ args = 0, pretend = 0, frame = 0
 2374              		@ frame_needed = 0, uses_anonymous_args = 0
 2375              	.LVL286:
 246:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2376              		.loc 1 246 0
 2377 0000 0028     		cmp	r0, #0
 2378 0002 59D0     		beq	.L181
 243:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   uint32_t prescaler = 0U;
 2379              		.loc 1 243 0
 2380 0004 10B5     		push	{r4, lr}
 2381              	.LCFI36:
 2382              		.cfi_def_cfa_offset 8
 2383              		.cfi_offset 4, -8
 2384              		.cfi_offset 14, -4
 2385 0006 0446     		mov	r4, r0
 256:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2386              		.loc 1 256 0
 2387 0008 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 2388 000a 13F0FF0F 		tst	r3, #255
 2389 000e 03D1     		bne	.L174
 259:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2390              		.loc 1 259 0
 2391 0010 0023     		movs	r3, #0
 2392 0012 0374     		strb	r3, [r0, #16]
 262:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2393              		.loc 1 262 0
 2394 0014 FFF7FEFF 		bl	HAL_RTC_MspInit
 2395              	.LVL287:
 2396              	.L174:
 266:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****        
 2397              		.loc 1 266 0
 2398 0018 0223     		movs	r3, #2
 2399 001a 6374     		strb	r3, [r4, #17]
 269:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2400              		.loc 1 269 0
 2401 001c 2046     		mov	r0, r4
 2402 001e FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2403              	.LVL288:
 2404 0022 18B1     		cbz	r0, .L175
 272:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2405              		.loc 1 272 0
 2406 0024 0423     		movs	r3, #4
 2407 0026 6374     		strb	r3, [r4, #17]
 274:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 2408              		.loc 1 274 0
 2409 0028 0123     		movs	r3, #1
 2410 002a 48E0     		b	.L173
 2411              	.L175:
 278:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
ARM GAS  /tmp/cc0Gq4Gz.s 			page 79


 2412              		.loc 1 278 0
 2413 002c 2046     		mov	r0, r4
 2414 002e FFF7FEFF 		bl	RTC_EnterInitMode
 2415              	.LVL289:
 2416 0032 18B1     		cbz	r0, .L176
 281:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2417              		.loc 1 281 0
 2418 0034 0423     		movs	r3, #4
 2419 0036 6374     		strb	r3, [r4, #17]
 283:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   } 
 2420              		.loc 1 283 0
 2421 0038 0123     		movs	r3, #1
 2422 003a 40E0     		b	.L173
 2423              	.L176:
 288:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2424              		.loc 1 288 0
 2425 003c 2268     		ldr	r2, [r4]
 2426 003e 5368     		ldr	r3, [r2, #4]
 2427 0040 23F00703 		bic	r3, r3, #7
 2428 0044 5360     		str	r3, [r2, #4]
 290:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2429              		.loc 1 290 0
 2430 0046 A368     		ldr	r3, [r4, #8]
 2431 0048 23B1     		cbz	r3, .L177
 293:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2432              		.loc 1 293 0
 2433 004a 1E4A     		ldr	r2, .L184
 2434 004c 136B     		ldr	r3, [r2, #48]
 2435 004e 23F00103 		bic	r3, r3, #1
 2436 0052 1363     		str	r3, [r2, #48]
 2437              	.L177:
 297:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2438              		.loc 1 297 0
 2439 0054 1B49     		ldr	r1, .L184
 2440 0056 CB6A     		ldr	r3, [r1, #44]
 2441 0058 23F46072 		bic	r2, r3, #896
 2442 005c A368     		ldr	r3, [r4, #8]
 2443 005e 1343     		orrs	r3, r3, r2
 2444 0060 CB62     		str	r3, [r1, #44]
 299:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {
 2445              		.loc 1 299 0
 2446 0062 6068     		ldr	r0, [r4, #4]
 2447 0064 B0F1FF3F 		cmp	r0, #-1
 2448 0068 08D1     		bne	.L178
 308:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2449              		.loc 1 308 0
 2450 006a 0120     		movs	r0, #1
 2451 006c FFF7FEFF 		bl	HAL_RCCEx_GetPeriphCLKFreq
 2452              	.LVL290:
 311:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       {
 2453              		.loc 1 311 0
 2454 0070 18B9     		cbnz	r0, .L179
 314:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****         return HAL_ERROR;
 2455              		.loc 1 314 0
 2456 0072 0423     		movs	r3, #4
 2457 0074 6374     		strb	r3, [r4, #17]
 315:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
ARM GAS  /tmp/cc0Gq4Gz.s 			page 80


 2458              		.loc 1 315 0
 2459 0076 0123     		movs	r3, #1
 2460 0078 21E0     		b	.L173
 2461              	.L179:
 320:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       }
 2462              		.loc 1 320 0
 2463 007a 0138     		subs	r0, r0, #1
 2464              	.LVL291:
 2465              	.L178:
 325:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     MODIFY_REG(hrtc->Instance->PRLL, RTC_PRLL_PRL, (prescaler & RTC_PRLL_PRL));
 2466              		.loc 1 325 0
 2467 007c 2268     		ldr	r2, [r4]
 2468 007e 9368     		ldr	r3, [r2, #8]
 2469 0080 23F00F03 		bic	r3, r3, #15
 2470 0084 43EA1043 		orr	r3, r3, r0, lsr #16
 2471 0088 9360     		str	r3, [r2, #8]
 326:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 2472              		.loc 1 326 0
 2473 008a 2268     		ldr	r2, [r4]
 2474 008c D368     		ldr	r3, [r2, #12]
 2475 008e 1B0C     		lsrs	r3, r3, #16
 2476 0090 1B04     		lsls	r3, r3, #16
 2477 0092 80B2     		uxth	r0, r0
 2478              	.LVL292:
 2479 0094 1843     		orrs	r0, r0, r3
 2480 0096 D060     		str	r0, [r2, #12]
 329:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 2481              		.loc 1 329 0
 2482 0098 2046     		mov	r0, r4
 2483 009a FFF7FEFF 		bl	RTC_ExitInitMode
 2484              	.LVL293:
 2485 009e 0346     		mov	r3, r0
 2486 00a0 18B1     		cbz	r0, .L180
 331:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 2487              		.loc 1 331 0
 2488 00a2 0423     		movs	r3, #4
 2489 00a4 6374     		strb	r3, [r4, #17]
 333:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2490              		.loc 1 333 0
 2491 00a6 0123     		movs	r3, #1
 2492 00a8 09E0     		b	.L173
 2493              	.L180:
 337:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Month = RTC_MONTH_JANUARY;
 2494              		.loc 1 337 0
 2495 00aa 0022     		movs	r2, #0
 2496 00ac E273     		strb	r2, [r4, #15]
 338:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     hrtc->DateToUpdate.Date = 0x01U;
 2497              		.loc 1 338 0
 2498 00ae 0122     		movs	r2, #1
 2499 00b0 6273     		strb	r2, [r4, #13]
 339:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2500              		.loc 1 339 0
 2501 00b2 A273     		strb	r2, [r4, #14]
 342:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2502              		.loc 1 342 0
 2503 00b4 6274     		strb	r2, [r4, #17]
 344:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
ARM GAS  /tmp/cc0Gq4Gz.s 			page 81


 2504              		.loc 1 344 0
 2505 00b6 02E0     		b	.L173
 2506              	.LVL294:
 2507              	.L181:
 2508              	.LCFI37:
 2509              		.cfi_def_cfa_offset 0
 2510              		.cfi_restore 4
 2511              		.cfi_restore 14
 248:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2512              		.loc 1 248 0
 2513 00b8 0123     		movs	r3, #1
 346:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2514              		.loc 1 346 0
 2515 00ba 1846     		mov	r0, r3
 2516              	.LVL295:
 2517 00bc 7047     		bx	lr
 2518              	.LVL296:
 2519              	.L173:
 2520              	.LCFI38:
 2521              		.cfi_def_cfa_offset 8
 2522              		.cfi_offset 4, -8
 2523              		.cfi_offset 14, -4
 2524 00be 1846     		mov	r0, r3
 2525 00c0 10BD     		pop	{r4, pc}
 2526              	.LVL297:
 2527              	.L185:
 2528 00c2 00BF     		.align	2
 2529              	.L184:
 2530 00c4 006C0040 		.word	1073769472
 2531              		.cfi_endproc
 2532              	.LFE63:
 2534              		.section	.text.HAL_RTC_DeInit,"ax",%progbits
 2535              		.align	2
 2536              		.global	HAL_RTC_DeInit
 2537              		.thumb
 2538              		.thumb_func
 2540              	HAL_RTC_DeInit:
 2541              	.LFB64:
 356:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   /* Check input parameters */
 2542              		.loc 1 356 0
 2543              		.cfi_startproc
 2544              		@ args = 0, pretend = 0, frame = 0
 2545              		@ frame_needed = 0, uses_anonymous_args = 0
 2546              	.LVL298:
 2547 0000 38B5     		push	{r3, r4, r5, lr}
 2548              	.LCFI39:
 2549              		.cfi_def_cfa_offset 16
 2550              		.cfi_offset 3, -16
 2551              		.cfi_offset 4, -12
 2552              		.cfi_offset 5, -8
 2553              		.cfi_offset 14, -4
 358:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2554              		.loc 1 358 0
 2555 0002 0028     		cmp	r0, #0
 2556 0004 34D0     		beq	.L190
 2557 0006 0446     		mov	r4, r0
 367:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
ARM GAS  /tmp/cc0Gq4Gz.s 			page 82


 2558              		.loc 1 367 0
 2559 0008 0223     		movs	r3, #2
 2560 000a 4374     		strb	r3, [r0, #17]
 370:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   {
 2561              		.loc 1 370 0
 2562 000c FFF7FEFF 		bl	RTC_EnterInitMode
 2563              	.LVL299:
 2564 0010 28B1     		cbz	r0, .L188
 373:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2565              		.loc 1 373 0
 2566 0012 0423     		movs	r3, #4
 2567 0014 6374     		strb	r3, [r4, #17]
 376:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2568              		.loc 1 376 0
 2569 0016 0023     		movs	r3, #0
 2570 0018 2374     		strb	r3, [r4, #16]
 378:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }  
 2571              		.loc 1 378 0
 2572 001a 0125     		movs	r5, #1
 2573 001c 29E0     		b	.L187
 2574              	.L188:
 382:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CNTH);
 2575              		.loc 1 382 0
 2576 001e 2268     		ldr	r2, [r4]
 2577 0020 0023     		movs	r3, #0
 2578 0022 D361     		str	r3, [r2, #28]
 383:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     WRITE_REG(hrtc->Instance->PRLL, 0x00008000U);
 2579              		.loc 1 383 0
 2580 0024 2268     		ldr	r2, [r4]
 2581 0026 9361     		str	r3, [r2, #24]
 384:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->PRLH);
 2582              		.loc 1 384 0
 2583 0028 2268     		ldr	r2, [r4]
 2584 002a 4FF40041 		mov	r1, #32768
 2585 002e D160     		str	r1, [r2, #12]
 385:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2586              		.loc 1 385 0
 2587 0030 2268     		ldr	r2, [r4]
 2588 0032 9360     		str	r3, [r2, #8]
 388:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     CLEAR_REG(hrtc->Instance->CRL);
 2589              		.loc 1 388 0
 2590 0034 2268     		ldr	r2, [r4]
 2591 0036 1360     		str	r3, [r2]
 389:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2592              		.loc 1 389 0
 2593 0038 2268     		ldr	r2, [r4]
 2594 003a 5360     		str	r3, [r2, #4]
 391:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     {       
 2595              		.loc 1 391 0
 2596 003c 2046     		mov	r0, r4
 2597 003e FFF7FEFF 		bl	RTC_ExitInitMode
 2598              	.LVL300:
 2599 0042 0546     		mov	r5, r0
 2600 0044 28B1     		cbz	r0, .L189
 393:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 2601              		.loc 1 393 0
 2602 0046 0423     		movs	r3, #4
ARM GAS  /tmp/cc0Gq4Gz.s 			page 83


 2603 0048 6374     		strb	r3, [r4, #17]
 396:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****       
 2604              		.loc 1 396 0
 2605 004a 0023     		movs	r3, #0
 2606 004c 2374     		strb	r3, [r4, #16]
 398:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     }
 2607              		.loc 1 398 0
 2608 004e 0125     		movs	r5, #1
 2609 0050 0FE0     		b	.L187
 2610              	.L189:
 403:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2611              		.loc 1 403 0
 2612 0052 2046     		mov	r0, r4
 2613 0054 FFF7FEFF 		bl	HAL_RTC_WaitForSynchro
 2614              	.LVL301:
 406:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****     
 2615              		.loc 1 406 0
 2616 0058 2268     		ldr	r2, [r4]
 2617 005a 5368     		ldr	r3, [r2, #4]
 2618 005c 23F00803 		bic	r3, r3, #8
 2619 0060 5360     		str	r3, [r2, #4]
 409:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2620              		.loc 1 409 0
 2621 0062 2046     		mov	r0, r4
 2622 0064 FFF7FEFF 		bl	HAL_RTC_MspDeInit
 2623              	.LVL302:
 411:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   
 2624              		.loc 1 411 0
 2625 0068 0023     		movs	r3, #0
 2626 006a 6374     		strb	r3, [r4, #17]
 414:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2627              		.loc 1 414 0
 2628 006c 2374     		strb	r3, [r4, #16]
 416:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** }
 2629              		.loc 1 416 0
 2630 006e 00E0     		b	.L187
 2631              	.LVL303:
 2632              	.L190:
 360:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c ****   }
 2633              		.loc 1 360 0
 2634 0070 0125     		movs	r5, #1
 2635              	.LVL304:
 2636              	.L187:
 417:Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rtc.c **** 
 2637              		.loc 1 417 0
 2638 0072 2846     		mov	r0, r5
 2639 0074 38BD     		pop	{r3, r4, r5, pc}
 2640              		.cfi_endproc
 2641              	.LFE64:
 2643 0076 00BF     		.text
 2644              	.Letext0:
 2645              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 2646              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 2647              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2648              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2649              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2650              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rtc.h"
ARM GAS  /tmp/cc0Gq4Gz.s 			page 84


 2651              		.file 8 "Drivers/CMSIS/Include/core_cm3.h"
 2652              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 2653              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
ARM GAS  /tmp/cc0Gq4Gz.s 			page 85


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rtc.c
     /tmp/cc0Gq4Gz.s:19     .text.RTC_ReadTimeCounter:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:23     .text.RTC_ReadTimeCounter:0000000000000000 RTC_ReadTimeCounter
     /tmp/cc0Gq4Gz.s:80     .text.RTC_ReadAlarmCounter:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:84     .text.RTC_ReadAlarmCounter:0000000000000000 RTC_ReadAlarmCounter
     /tmp/cc0Gq4Gz.s:109    .text.RTC_ByteToBcd2:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:113    .text.RTC_ByteToBcd2:0000000000000000 RTC_ByteToBcd2
     /tmp/cc0Gq4Gz.s:151    .text.RTC_Bcd2ToByte:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:155    .text.RTC_Bcd2ToByte:0000000000000000 RTC_Bcd2ToByte
     /tmp/cc0Gq4Gz.s:179    .text.RTC_IsLeapYear:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:183    .text.RTC_IsLeapYear:0000000000000000 RTC_IsLeapYear
     /tmp/cc0Gq4Gz.s:234    .text.RTC_IsLeapYear:000000000000003c $d
     /tmp/cc0Gq4Gz.s:239    .text.RTC_WeekDayNum:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:243    .text.RTC_WeekDayNum:0000000000000000 RTC_WeekDayNum
     /tmp/cc0Gq4Gz.s:328    .text.RTC_WeekDayNum:0000000000000090 $d
     /tmp/cc0Gq4Gz.s:335    .text.RTC_DateUpdate:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:339    .text.RTC_DateUpdate:0000000000000000 RTC_DateUpdate
     /tmp/cc0Gq4Gz.s:521    .text.RTC_EnterInitMode:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:525    .text.RTC_EnterInitMode:0000000000000000 RTC_EnterInitMode
     /tmp/cc0Gq4Gz.s:579    .text.RTC_ExitInitMode:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:583    .text.RTC_ExitInitMode:0000000000000000 RTC_ExitInitMode
     /tmp/cc0Gq4Gz.s:638    .text.RTC_WriteTimeCounter:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:642    .text.RTC_WriteTimeCounter:0000000000000000 RTC_WriteTimeCounter
     /tmp/cc0Gq4Gz.s:694    .text.RTC_WriteAlarmCounter:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:698    .text.RTC_WriteAlarmCounter:0000000000000000 RTC_WriteAlarmCounter
     /tmp/cc0Gq4Gz.s:750    .text.HAL_RTC_MspInit:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:755    .text.HAL_RTC_MspInit:0000000000000000 HAL_RTC_MspInit
     /tmp/cc0Gq4Gz.s:768    .text.HAL_RTC_MspDeInit:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:773    .text.HAL_RTC_MspDeInit:0000000000000000 HAL_RTC_MspDeInit
     /tmp/cc0Gq4Gz.s:786    .text.HAL_RTC_SetTime:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:791    .text.HAL_RTC_SetTime:0000000000000000 HAL_RTC_SetTime
     /tmp/cc0Gq4Gz.s:952    .text.HAL_RTC_GetTime:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:957    .text.HAL_RTC_GetTime:0000000000000000 HAL_RTC_GetTime
     /tmp/cc0Gq4Gz.s:1176   .text.HAL_RTC_GetTime:00000000000000fc $d
     /tmp/cc0Gq4Gz.s:1184   .text.HAL_RTC_SetDate:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:1189   .text.HAL_RTC_SetDate:0000000000000000 HAL_RTC_SetDate
     /tmp/cc0Gq4Gz.s:1378   .text.HAL_RTC_SetDate:00000000000000cc $d
     /tmp/cc0Gq4Gz.s:1385   .text.HAL_RTC_GetDate:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:1390   .text.HAL_RTC_GetDate:0000000000000000 HAL_RTC_GetDate
     /tmp/cc0Gq4Gz.s:1484   .text.HAL_RTC_SetAlarm:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:1489   .text.HAL_RTC_SetAlarm:0000000000000000 HAL_RTC_SetAlarm
     /tmp/cc0Gq4Gz.s:1664   .text.HAL_RTC_SetAlarm_IT:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:1669   .text.HAL_RTC_SetAlarm_IT:0000000000000000 HAL_RTC_SetAlarm_IT
     /tmp/cc0Gq4Gz.s:1861   .text.HAL_RTC_SetAlarm_IT:00000000000000f8 $d
     /tmp/cc0Gq4Gz.s:1866   .text.HAL_RTC_GetAlarm:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:1871   .text.HAL_RTC_GetAlarm:0000000000000000 HAL_RTC_GetAlarm
     /tmp/cc0Gq4Gz.s:1983   .text.HAL_RTC_GetAlarm:0000000000000074 $d
     /tmp/cc0Gq4Gz.s:1990   .text.HAL_RTC_DeactivateAlarm:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:1995   .text.HAL_RTC_DeactivateAlarm:0000000000000000 HAL_RTC_DeactivateAlarm
     /tmp/cc0Gq4Gz.s:2110   .text.HAL_RTC_DeactivateAlarm:000000000000007c $d
     /tmp/cc0Gq4Gz.s:2115   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:2120   .text.HAL_RTC_AlarmAEventCallback:0000000000000000 HAL_RTC_AlarmAEventCallback
     /tmp/cc0Gq4Gz.s:2133   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:2138   .text.HAL_RTC_AlarmIRQHandler:0000000000000000 HAL_RTC_AlarmIRQHandler
     /tmp/cc0Gq4Gz.s:2181   .text.HAL_RTC_AlarmIRQHandler:0000000000000030 $d
     /tmp/cc0Gq4Gz.s:2186   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 $t
ARM GAS  /tmp/cc0Gq4Gz.s 			page 86


     /tmp/cc0Gq4Gz.s:2191   .text.HAL_RTC_PollForAlarmAEvent:0000000000000000 HAL_RTC_PollForAlarmAEvent
     /tmp/cc0Gq4Gz.s:2261   .text.HAL_RTC_GetState:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:2266   .text.HAL_RTC_GetState:0000000000000000 HAL_RTC_GetState
     /tmp/cc0Gq4Gz.s:2283   .text.HAL_RTC_WaitForSynchro:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:2288   .text.HAL_RTC_WaitForSynchro:0000000000000000 HAL_RTC_WaitForSynchro
     /tmp/cc0Gq4Gz.s:2364   .text.HAL_RTC_Init:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:2369   .text.HAL_RTC_Init:0000000000000000 HAL_RTC_Init
     /tmp/cc0Gq4Gz.s:2530   .text.HAL_RTC_Init:00000000000000c4 $d
     /tmp/cc0Gq4Gz.s:2535   .text.HAL_RTC_DeInit:0000000000000000 $t
     /tmp/cc0Gq4Gz.s:2540   .text.HAL_RTC_DeInit:0000000000000000 HAL_RTC_DeInit
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GetTick
HAL_RCCEx_GetPeriphCLKFreq

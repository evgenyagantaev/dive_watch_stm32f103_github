ARM GAS  /tmp/ccBEkO2o.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usart.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
  19              		.align	2
  20              		.global	MX_USART1_UART_Init
  21              		.thumb
  22              		.thumb_func
  24              	MX_USART1_UART_Init:
  25              	.LFB63:
  26              		.file 1 "Src/usart.c"
   1:Src/usart.c   **** /**
   2:Src/usart.c   ****   ******************************************************************************
   3:Src/usart.c   ****   * File Name          : USART.c
   4:Src/usart.c   ****   * Description        : This file provides code for the configuration
   5:Src/usart.c   ****   *                      of the USART instances.
   6:Src/usart.c   ****   ******************************************************************************
   7:Src/usart.c   ****   ** This notice applies to any and all portions of this file
   8:Src/usart.c   ****   * that are not between comment pairs USER CODE BEGIN and
   9:Src/usart.c   ****   * USER CODE END. Other portions of this file, whether 
  10:Src/usart.c   ****   * inserted by the user or by software development tools
  11:Src/usart.c   ****   * are owned by their respective copyright owners.
  12:Src/usart.c   ****   *
  13:Src/usart.c   ****   * COPYRIGHT(c) 2018 STMicroelectronics
  14:Src/usart.c   ****   *
  15:Src/usart.c   ****   * Redistribution and use in source and binary forms, with or without modification,
  16:Src/usart.c   ****   * are permitted provided that the following conditions are met:
  17:Src/usart.c   ****   *   1. Redistributions of source code must retain the above copyright notice,
  18:Src/usart.c   ****   *      this list of conditions and the following disclaimer.
  19:Src/usart.c   ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  20:Src/usart.c   ****   *      this list of conditions and the following disclaimer in the documentation
  21:Src/usart.c   ****   *      and/or other materials provided with the distribution.
  22:Src/usart.c   ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  23:Src/usart.c   ****   *      may be used to endorse or promote products derived from this software
  24:Src/usart.c   ****   *      without specific prior written permission.
  25:Src/usart.c   ****   *
  26:Src/usart.c   ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  27:Src/usart.c   ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  28:Src/usart.c   ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  29:Src/usart.c   ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  30:Src/usart.c   ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  31:Src/usart.c   ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  32:Src/usart.c   ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
ARM GAS  /tmp/ccBEkO2o.s 			page 2


  33:Src/usart.c   ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  34:Src/usart.c   ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  35:Src/usart.c   ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  36:Src/usart.c   ****   *
  37:Src/usart.c   ****   ******************************************************************************
  38:Src/usart.c   ****   */
  39:Src/usart.c   **** 
  40:Src/usart.c   **** /* Includes ------------------------------------------------------------------*/
  41:Src/usart.c   **** #include "usart.h"
  42:Src/usart.c   **** 
  43:Src/usart.c   **** #include "gpio.h"
  44:Src/usart.c   **** 
  45:Src/usart.c   **** /* USER CODE BEGIN 0 */
  46:Src/usart.c   **** 
  47:Src/usart.c   **** /* USER CODE END 0 */
  48:Src/usart.c   **** 
  49:Src/usart.c   **** UART_HandleTypeDef huart1;
  50:Src/usart.c   **** UART_HandleTypeDef huart2;
  51:Src/usart.c   **** 
  52:Src/usart.c   **** /* USART1 init function */
  53:Src/usart.c   **** 
  54:Src/usart.c   **** void MX_USART1_UART_Init(void)
  55:Src/usart.c   **** {
  27              		.loc 1 55 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
  56:Src/usart.c   **** 
  57:Src/usart.c   ****   huart1.Instance = USART1;
  36              		.loc 1 57 0
  37 0002 0B48     		ldr	r0, .L4
  38 0004 0B4B     		ldr	r3, .L4+4
  39 0006 0360     		str	r3, [r0]
  58:Src/usart.c   ****   huart1.Init.BaudRate = 115200;
  40              		.loc 1 58 0
  41 0008 4FF4E133 		mov	r3, #115200
  42 000c 4360     		str	r3, [r0, #4]
  59:Src/usart.c   ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
  43              		.loc 1 59 0
  44 000e 0023     		movs	r3, #0
  45 0010 8360     		str	r3, [r0, #8]
  60:Src/usart.c   ****   huart1.Init.StopBits = UART_STOPBITS_1;
  46              		.loc 1 60 0
  47 0012 C360     		str	r3, [r0, #12]
  61:Src/usart.c   ****   huart1.Init.Parity = UART_PARITY_NONE;
  48              		.loc 1 61 0
  49 0014 0361     		str	r3, [r0, #16]
  62:Src/usart.c   ****   huart1.Init.Mode = UART_MODE_TX_RX;
  50              		.loc 1 62 0
  51 0016 0C22     		movs	r2, #12
  52 0018 4261     		str	r2, [r0, #20]
  63:Src/usart.c   ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
ARM GAS  /tmp/ccBEkO2o.s 			page 3


  53              		.loc 1 63 0
  54 001a 8361     		str	r3, [r0, #24]
  64:Src/usart.c   ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
  55              		.loc 1 64 0
  56 001c C361     		str	r3, [r0, #28]
  65:Src/usart.c   ****   if (HAL_UART_Init(&huart1) != HAL_OK)
  57              		.loc 1 65 0
  58 001e FFF7FEFF 		bl	HAL_UART_Init
  59              	.LVL0:
  60 0022 18B1     		cbz	r0, .L1
  66:Src/usart.c   ****   {
  67:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
  61              		.loc 1 67 0
  62 0024 0448     		ldr	r0, .L4+8
  63 0026 4321     		movs	r1, #67
  64 0028 FFF7FEFF 		bl	_Error_Handler
  65              	.LVL1:
  66              	.L1:
  67 002c 08BD     		pop	{r3, pc}
  68              	.L5:
  69 002e 00BF     		.align	2
  70              	.L4:
  71 0030 00000000 		.word	huart1
  72 0034 00380140 		.word	1073821696
  73 0038 00000000 		.word	.LC0
  74              		.cfi_endproc
  75              	.LFE63:
  77              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
  78              		.align	2
  79              		.global	MX_USART2_UART_Init
  80              		.thumb
  81              		.thumb_func
  83              	MX_USART2_UART_Init:
  84              	.LFB64:
  68:Src/usart.c   ****   }
  69:Src/usart.c   **** 
  70:Src/usart.c   **** }
  71:Src/usart.c   **** /* USART2 init function */
  72:Src/usart.c   **** 
  73:Src/usart.c   **** void MX_USART2_UART_Init(void)
  74:Src/usart.c   **** {
  85              		.loc 1 74 0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
  89 0000 08B5     		push	{r3, lr}
  90              	.LCFI1:
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 3, -8
  93              		.cfi_offset 14, -4
  75:Src/usart.c   **** 
  76:Src/usart.c   ****   huart2.Instance = USART2;
  94              		.loc 1 76 0
  95 0002 0B48     		ldr	r0, .L9
  96 0004 0B4B     		ldr	r3, .L9+4
  97 0006 0360     		str	r3, [r0]
  77:Src/usart.c   ****   huart2.Init.BaudRate = 115200;
ARM GAS  /tmp/ccBEkO2o.s 			page 4


  98              		.loc 1 77 0
  99 0008 4FF4E133 		mov	r3, #115200
 100 000c 4360     		str	r3, [r0, #4]
  78:Src/usart.c   ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 101              		.loc 1 78 0
 102 000e 0023     		movs	r3, #0
 103 0010 8360     		str	r3, [r0, #8]
  79:Src/usart.c   ****   huart2.Init.StopBits = UART_STOPBITS_1;
 104              		.loc 1 79 0
 105 0012 C360     		str	r3, [r0, #12]
  80:Src/usart.c   ****   huart2.Init.Parity = UART_PARITY_NONE;
 106              		.loc 1 80 0
 107 0014 0361     		str	r3, [r0, #16]
  81:Src/usart.c   ****   huart2.Init.Mode = UART_MODE_TX_RX;
 108              		.loc 1 81 0
 109 0016 0C22     		movs	r2, #12
 110 0018 4261     		str	r2, [r0, #20]
  82:Src/usart.c   ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 111              		.loc 1 82 0
 112 001a 8361     		str	r3, [r0, #24]
  83:Src/usart.c   ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 113              		.loc 1 83 0
 114 001c C361     		str	r3, [r0, #28]
  84:Src/usart.c   ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 115              		.loc 1 84 0
 116 001e FFF7FEFF 		bl	HAL_UART_Init
 117              	.LVL2:
 118 0022 18B1     		cbz	r0, .L6
  85:Src/usart.c   ****   {
  86:Src/usart.c   ****     _Error_Handler(__FILE__, __LINE__);
 119              		.loc 1 86 0
 120 0024 0448     		ldr	r0, .L9+8
 121 0026 5621     		movs	r1, #86
 122 0028 FFF7FEFF 		bl	_Error_Handler
 123              	.LVL3:
 124              	.L6:
 125 002c 08BD     		pop	{r3, pc}
 126              	.L10:
 127 002e 00BF     		.align	2
 128              	.L9:
 129 0030 00000000 		.word	huart2
 130 0034 00440040 		.word	1073759232
 131 0038 00000000 		.word	.LC0
 132              		.cfi_endproc
 133              	.LFE64:
 135              		.section	.text.HAL_UART_MspInit,"ax",%progbits
 136              		.align	2
 137              		.global	HAL_UART_MspInit
 138              		.thumb
 139              		.thumb_func
 141              	HAL_UART_MspInit:
 142              	.LFB65:
  87:Src/usart.c   ****   }
  88:Src/usart.c   **** 
  89:Src/usart.c   **** }
  90:Src/usart.c   **** 
  91:Src/usart.c   **** void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
ARM GAS  /tmp/ccBEkO2o.s 			page 5


  92:Src/usart.c   **** {
 143              		.loc 1 92 0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 24
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              	.LVL4:
 148 0000 10B5     		push	{r4, lr}
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 8
 151              		.cfi_offset 4, -8
 152              		.cfi_offset 14, -4
 153 0002 86B0     		sub	sp, sp, #24
 154              	.LCFI3:
 155              		.cfi_def_cfa_offset 32
  93:Src/usart.c   **** 
  94:Src/usart.c   ****   GPIO_InitTypeDef GPIO_InitStruct;
  95:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 156              		.loc 1 95 0
 157 0004 0368     		ldr	r3, [r0]
 158 0006 264A     		ldr	r2, .L15
 159 0008 9342     		cmp	r3, r2
 160 000a 25D1     		bne	.L12
 161              	.LBB2:
  96:Src/usart.c   ****   {
  97:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 0 */
  98:Src/usart.c   **** 
  99:Src/usart.c   ****   /* USER CODE END USART1_MspInit 0 */
 100:Src/usart.c   ****     /* USART1 clock enable */
 101:Src/usart.c   ****     __HAL_RCC_USART1_CLK_ENABLE();
 162              		.loc 1 101 0
 163 000c 254B     		ldr	r3, .L15+4
 164 000e 9A69     		ldr	r2, [r3, #24]
 165 0010 42F48042 		orr	r2, r2, #16384
 166 0014 9A61     		str	r2, [r3, #24]
 167 0016 9B69     		ldr	r3, [r3, #24]
 168 0018 03F48043 		and	r3, r3, #16384
 169 001c 0093     		str	r3, [sp]
 170 001e 009B     		ldr	r3, [sp]
 171              	.LBE2:
 102:Src/usart.c   ****   
 103:Src/usart.c   ****     /**USART1 GPIO Configuration    
 104:Src/usart.c   ****     PB6     ------> USART1_TX
 105:Src/usart.c   ****     PB7     ------> USART1_RX 
 106:Src/usart.c   ****     */
 107:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_6;
 172              		.loc 1 107 0
 173 0020 4023     		movs	r3, #64
 174 0022 0293     		str	r3, [sp, #8]
 108:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 175              		.loc 1 108 0
 176 0024 0223     		movs	r3, #2
 177 0026 0393     		str	r3, [sp, #12]
 109:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 178              		.loc 1 109 0
 179 0028 0323     		movs	r3, #3
 180 002a 0593     		str	r3, [sp, #20]
 110:Src/usart.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
ARM GAS  /tmp/ccBEkO2o.s 			page 6


 181              		.loc 1 110 0
 182 002c 1E4C     		ldr	r4, .L15+8
 183 002e 2046     		mov	r0, r4
 184              	.LVL5:
 185 0030 02A9     		add	r1, sp, #8
 186 0032 FFF7FEFF 		bl	HAL_GPIO_Init
 187              	.LVL6:
 111:Src/usart.c   **** 
 112:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_7;
 188              		.loc 1 112 0
 189 0036 8023     		movs	r3, #128
 190 0038 0293     		str	r3, [sp, #8]
 113:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 191              		.loc 1 113 0
 192 003a 0023     		movs	r3, #0
 193 003c 0393     		str	r3, [sp, #12]
 114:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 194              		.loc 1 114 0
 195 003e 0493     		str	r3, [sp, #16]
 115:Src/usart.c   ****     HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 196              		.loc 1 115 0
 197 0040 2046     		mov	r0, r4
 198 0042 02A9     		add	r1, sp, #8
 199 0044 FFF7FEFF 		bl	HAL_GPIO_Init
 200              	.LVL7:
 201              	.LBB3:
 116:Src/usart.c   **** 
 117:Src/usart.c   ****     __HAL_AFIO_REMAP_USART1_ENABLE();
 202              		.loc 1 117 0
 203 0048 184A     		ldr	r2, .L15+12
 204 004a 5368     		ldr	r3, [r2, #4]
 205              	.LVL8:
 206 004c 43F0E063 		orr	r3, r3, #117440512
 207              	.LVL9:
 208 0050 43F00403 		orr	r3, r3, #4
 209              	.LVL10:
 210 0054 5360     		str	r3, [r2, #4]
 211              	.LBE3:
 212 0056 20E0     		b	.L11
 213              	.LVL11:
 214              	.L12:
 118:Src/usart.c   **** 
 119:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspInit 1 */
 120:Src/usart.c   **** 
 121:Src/usart.c   ****   /* USER CODE END USART1_MspInit 1 */
 122:Src/usart.c   ****   }
 123:Src/usart.c   ****   else if(uartHandle->Instance==USART2)
 215              		.loc 1 123 0
 216 0058 154A     		ldr	r2, .L15+16
 217 005a 9342     		cmp	r3, r2
 218 005c 1DD1     		bne	.L11
 219              	.LBB4:
 124:Src/usart.c   ****   {
 125:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 0 */
 126:Src/usart.c   **** 
 127:Src/usart.c   ****   /* USER CODE END USART2_MspInit 0 */
 128:Src/usart.c   ****     /* USART2 clock enable */
ARM GAS  /tmp/ccBEkO2o.s 			page 7


 129:Src/usart.c   ****     __HAL_RCC_USART2_CLK_ENABLE();
 220              		.loc 1 129 0
 221 005e 114B     		ldr	r3, .L15+4
 222 0060 DA69     		ldr	r2, [r3, #28]
 223 0062 42F40032 		orr	r2, r2, #131072
 224 0066 DA61     		str	r2, [r3, #28]
 225 0068 DB69     		ldr	r3, [r3, #28]
 226 006a 03F40033 		and	r3, r3, #131072
 227 006e 0193     		str	r3, [sp, #4]
 228 0070 019B     		ldr	r3, [sp, #4]
 229              	.LBE4:
 130:Src/usart.c   ****   
 131:Src/usart.c   ****     /**USART2 GPIO Configuration    
 132:Src/usart.c   ****     PA2     ------> USART2_TX
 133:Src/usart.c   ****     PA3     ------> USART2_RX 
 134:Src/usart.c   ****     */
 135:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_2;
 230              		.loc 1 135 0
 231 0072 0423     		movs	r3, #4
 232 0074 0293     		str	r3, [sp, #8]
 136:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 233              		.loc 1 136 0
 234 0076 0223     		movs	r3, #2
 235 0078 0393     		str	r3, [sp, #12]
 137:Src/usart.c   ****     GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 236              		.loc 1 137 0
 237 007a 0323     		movs	r3, #3
 238 007c 0593     		str	r3, [sp, #20]
 138:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 239              		.loc 1 138 0
 240 007e 0D4C     		ldr	r4, .L15+20
 241 0080 2046     		mov	r0, r4
 242              	.LVL12:
 243 0082 02A9     		add	r1, sp, #8
 244 0084 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL13:
 139:Src/usart.c   **** 
 140:Src/usart.c   ****     GPIO_InitStruct.Pin = GPIO_PIN_3;
 246              		.loc 1 140 0
 247 0088 0823     		movs	r3, #8
 248 008a 0293     		str	r3, [sp, #8]
 141:Src/usart.c   ****     GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 249              		.loc 1 141 0
 250 008c 0023     		movs	r3, #0
 251 008e 0393     		str	r3, [sp, #12]
 142:Src/usart.c   ****     GPIO_InitStruct.Pull = GPIO_NOPULL;
 252              		.loc 1 142 0
 253 0090 0493     		str	r3, [sp, #16]
 143:Src/usart.c   ****     HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 254              		.loc 1 143 0
 255 0092 2046     		mov	r0, r4
 256 0094 02A9     		add	r1, sp, #8
 257 0096 FFF7FEFF 		bl	HAL_GPIO_Init
 258              	.LVL14:
 259              	.L11:
 144:Src/usart.c   **** 
 145:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspInit 1 */
ARM GAS  /tmp/ccBEkO2o.s 			page 8


 146:Src/usart.c   **** 
 147:Src/usart.c   ****   /* USER CODE END USART2_MspInit 1 */
 148:Src/usart.c   ****   }
 149:Src/usart.c   **** }
 260              		.loc 1 149 0
 261 009a 06B0     		add	sp, sp, #24
 262              	.LCFI4:
 263              		.cfi_def_cfa_offset 8
 264              		@ sp needed
 265 009c 10BD     		pop	{r4, pc}
 266              	.L16:
 267 009e 00BF     		.align	2
 268              	.L15:
 269 00a0 00380140 		.word	1073821696
 270 00a4 00100240 		.word	1073876992
 271 00a8 000C0140 		.word	1073810432
 272 00ac 00000140 		.word	1073807360
 273 00b0 00440040 		.word	1073759232
 274 00b4 00080140 		.word	1073809408
 275              		.cfi_endproc
 276              	.LFE65:
 278              		.section	.text.HAL_UART_MspDeInit,"ax",%progbits
 279              		.align	2
 280              		.global	HAL_UART_MspDeInit
 281              		.thumb
 282              		.thumb_func
 284              	HAL_UART_MspDeInit:
 285              	.LFB66:
 150:Src/usart.c   **** 
 151:Src/usart.c   **** void HAL_UART_MspDeInit(UART_HandleTypeDef* uartHandle)
 152:Src/usart.c   **** {
 286              		.loc 1 152 0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
 290              	.LVL15:
 291 0000 08B5     		push	{r3, lr}
 292              	.LCFI5:
 293              		.cfi_def_cfa_offset 8
 294              		.cfi_offset 3, -8
 295              		.cfi_offset 14, -4
 153:Src/usart.c   **** 
 154:Src/usart.c   ****   if(uartHandle->Instance==USART1)
 296              		.loc 1 154 0
 297 0002 0368     		ldr	r3, [r0]
 298 0004 0D4A     		ldr	r2, .L21
 299 0006 9342     		cmp	r3, r2
 300 0008 0AD1     		bne	.L18
 155:Src/usart.c   ****   {
 156:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 0 */
 157:Src/usart.c   **** 
 158:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 0 */
 159:Src/usart.c   ****     /* Peripheral clock disable */
 160:Src/usart.c   ****     __HAL_RCC_USART1_CLK_DISABLE();
 301              		.loc 1 160 0
 302 000a 02F55842 		add	r2, r2, #55296
 303 000e 9369     		ldr	r3, [r2, #24]
ARM GAS  /tmp/ccBEkO2o.s 			page 9


 304 0010 23F48043 		bic	r3, r3, #16384
 305 0014 9361     		str	r3, [r2, #24]
 161:Src/usart.c   ****   
 162:Src/usart.c   ****     /**USART1 GPIO Configuration    
 163:Src/usart.c   ****     PB6     ------> USART1_TX
 164:Src/usart.c   ****     PB7     ------> USART1_RX 
 165:Src/usart.c   ****     */
 166:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6|GPIO_PIN_7);
 306              		.loc 1 166 0
 307 0016 0A48     		ldr	r0, .L21+4
 308              	.LVL16:
 309 0018 C021     		movs	r1, #192
 310 001a FFF7FEFF 		bl	HAL_GPIO_DeInit
 311              	.LVL17:
 312 001e 08BD     		pop	{r3, pc}
 313              	.LVL18:
 314              	.L18:
 167:Src/usart.c   **** 
 168:Src/usart.c   ****   /* USER CODE BEGIN USART1_MspDeInit 1 */
 169:Src/usart.c   **** 
 170:Src/usart.c   ****   /* USER CODE END USART1_MspDeInit 1 */
 171:Src/usart.c   ****   }
 172:Src/usart.c   ****   else if(uartHandle->Instance==USART2)
 315              		.loc 1 172 0
 316 0020 084A     		ldr	r2, .L21+8
 317 0022 9342     		cmp	r3, r2
 318 0024 09D1     		bne	.L17
 173:Src/usart.c   ****   {
 174:Src/usart.c   ****   /* USER CODE BEGIN USART2_MspDeInit 0 */
 175:Src/usart.c   **** 
 176:Src/usart.c   ****   /* USER CODE END USART2_MspDeInit 0 */
 177:Src/usart.c   ****     /* Peripheral clock disable */
 178:Src/usart.c   ****     __HAL_RCC_USART2_CLK_DISABLE();
 319              		.loc 1 178 0
 320 0026 02F5E632 		add	r2, r2, #117760
 321 002a D369     		ldr	r3, [r2, #28]
 322 002c 23F40033 		bic	r3, r3, #131072
 323 0030 D361     		str	r3, [r2, #28]
 179:Src/usart.c   ****   
 180:Src/usart.c   ****     /**USART2 GPIO Configuration    
 181:Src/usart.c   ****     PA2     ------> USART2_TX
 182:Src/usart.c   ****     PA3     ------> USART2_RX 
 183:Src/usart.c   ****     */
 184:Src/usart.c   ****     HAL_GPIO_DeInit(GPIOA, GPIO_PIN_2|GPIO_PIN_3);
 324              		.loc 1 184 0
 325 0032 0548     		ldr	r0, .L21+12
 326              	.LVL19:
 327 0034 0C21     		movs	r1, #12
 328 0036 FFF7FEFF 		bl	HAL_GPIO_DeInit
 329              	.LVL20:
 330              	.L17:
 331 003a 08BD     		pop	{r3, pc}
 332              	.L22:
 333              		.align	2
 334              	.L21:
 335 003c 00380140 		.word	1073821696
 336 0040 000C0140 		.word	1073810432
ARM GAS  /tmp/ccBEkO2o.s 			page 10


 337 0044 00440040 		.word	1073759232
 338 0048 00080140 		.word	1073809408
 339              		.cfi_endproc
 340              	.LFE66:
 342              		.comm	huart2,64,4
 343              		.comm	huart1,64,4
 344              		.section	.rodata.str1.4,"aMS",%progbits,1
 345              		.align	2
 346              	.LC0:
 347 0000 5372632F 		.ascii	"Src/usart.c\000"
 347      75736172 
 347      742E6300 
 348              		.text
 349              	.Letext0:
 350              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 351              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 352              		.file 4 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 353              		.file 5 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 354              		.file 6 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 355              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 356              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 357              		.file 9 "Drivers/CMSIS/Include/core_cm3.h"
 358              		.file 10 "Inc/usart.h"
ARM GAS  /tmp/ccBEkO2o.s 			page 11


DEFINED SYMBOLS
                            *ABS*:0000000000000000 usart.c
     /tmp/ccBEkO2o.s:19     .text.MX_USART1_UART_Init:0000000000000000 $t
     /tmp/ccBEkO2o.s:24     .text.MX_USART1_UART_Init:0000000000000000 MX_USART1_UART_Init
     /tmp/ccBEkO2o.s:71     .text.MX_USART1_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart1
     /tmp/ccBEkO2o.s:78     .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccBEkO2o.s:83     .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccBEkO2o.s:129    .text.MX_USART2_UART_Init:0000000000000030 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccBEkO2o.s:136    .text.HAL_UART_MspInit:0000000000000000 $t
     /tmp/ccBEkO2o.s:141    .text.HAL_UART_MspInit:0000000000000000 HAL_UART_MspInit
     /tmp/ccBEkO2o.s:269    .text.HAL_UART_MspInit:00000000000000a0 $d
     /tmp/ccBEkO2o.s:279    .text.HAL_UART_MspDeInit:0000000000000000 $t
     /tmp/ccBEkO2o.s:284    .text.HAL_UART_MspDeInit:0000000000000000 HAL_UART_MspDeInit
     /tmp/ccBEkO2o.s:335    .text.HAL_UART_MspDeInit:000000000000003c $d
     /tmp/ccBEkO2o.s:345    .rodata.str1.4:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_UART_Init
_Error_Handler
HAL_GPIO_Init
HAL_GPIO_DeInit
